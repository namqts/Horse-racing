{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"_icon\",\"children\",\"isHovered\",\"isPressed\",\"isFocused\",\"isFocusVisible\",\"isDisabled\"],_excluded2=[\"_icon\",\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Pressable}from\"../../primitives/Pressable\";import{Icon}from\"../../primitives/Icon\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{composeEventHandlers}from\"../../../utils\";import{useHover,useFocus,useIsPressed}from\"../../primitives/Pressable/Pressable\";import{useFocusRing}from'@react-native-aria/focus';import merge from'lodash.merge';var IconButton=function IconButton(_ref,ref){var icon=_ref.icon,pseudoIconProp=_ref._icon,children=_ref.children,isHoveredProp=_ref.isHovered,isPressedProp=_ref.isPressed,isFocusedProp=_ref.isFocused,isFocusVisibleProp=_ref.isFocusVisible,isDisabled=_ref.isDisabled,props=_objectWithoutProperties(_ref,_excluded);var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=useFocusRing(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=usePropsResolution('IconButton',_objectSpread(_objectSpread({},props),{},{_icon:merge({},pseudoIconProp,icon===null||icon===void 0?void 0:icon.props)}),{isHovered:isHoveredProp||isHovered,isPressed:isPressedProp||isPressed,isFocused:isFocusedProp||isFocused,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:isDisabled}),_icon=_usePropsResolution._icon,onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var clonedIcon;if(icon){clonedIcon=React.cloneElement(icon,_objectSpread({},_icon));}if(useHasResponsiveProps(props)){return null;}return React.createElement(Pressable,_extends({disabled:isDisabled,accessibilityRole:\"button\",ref:ref,onPressIn:composeEventHandlers(onPressIn,pressableProps.onPressIn),onPressOut:composeEventHandlers(onPressOut,pressableProps.onPressOut),onHoverIn:composeEventHandlers(onHoverIn,hoverProps.onHoverIn),onHoverOut:composeEventHandlers(onHoverOut,hoverProps.onHoverOut),onFocus:composeEventHandlers(composeEventHandlers(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:composeEventHandlers(composeEventHandlers(onBlur,focusProps.onBlur),focusRingProps.onBlur)},resolvedProps),clonedIcon||React.createElement(Icon,_icon,children));};export default memo(forwardRef(IconButton));","map":{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Pressable","Icon","usePropsResolution","useHasResponsiveProps","composeEventHandlers","useHover","useFocus","useIsPressed","useFocusRing","merge","IconButton","icon","_icon","pseudoIconProp","children","isHovered","isHoveredProp","isPressed","isPressedProp","isFocused","isFocusedProp","isFocusVisible","isFocusVisibleProp","isDisabled","props","ref","hoverProps","pressableProps","focusProps","focusRingProps","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","clonedIcon","cloneElement"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport { Icon } from '../../primitives/Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IIconButtonProps } from './types';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport merge from 'lodash.merge';\n\nconst IconButton = (\n  {\n    icon,\n    _icon: pseudoIconProp,\n    children,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    isDisabled,\n    ...props\n  }: IIconButtonProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution(\n    'IconButton',\n    { ...props, _icon: merge({}, pseudoIconProp, icon?.props) },\n    {\n      isHovered: isHoveredProp || isHovered,\n      isPressed: isPressedProp || isPressed,\n      isFocused: isFocusedProp || isFocused,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n      isDisabled,\n    }\n  );\n\n  let clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, {\n      ..._icon,\n    });\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      disabled={isDisabled}\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {clonedIcon || <Icon {..._icon}>{children}</Icon>}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\nexport type { IIconButtonProps };\n"]},"metadata":{},"sourceType":"module"}