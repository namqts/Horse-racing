{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import invariant from'invariant';import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import Platform from\"react-native-web/dist/exports/Platform\";var nativeEmitterSubscriptionKey='@@nativeEmitterSubscription@@';export var EventEmitter=function(){function EventEmitter(nativeModule){_classCallCheck(this,EventEmitter);this._listenerCount=0;this._nativeModule=nativeModule;this._eventEmitter=new NativeEventEmitter(nativeModule);}_createClass(EventEmitter,[{key:\"addListener\",value:function addListener(eventName,listener){var _this=this,_subscription;if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.startObserving){this._nativeModule.startObserving();}this._listenerCount++;var nativeEmitterSubscription=this._eventEmitter.addListener(eventName,listener);var subscription=(_subscription={},_defineProperty(_subscription,nativeEmitterSubscriptionKey,nativeEmitterSubscription),_defineProperty(_subscription,\"remove\",function remove(){_this.removeSubscription(subscription);}),_subscription);return subscription;}},{key:\"removeAllListeners\",value:function removeAllListeners(eventName){var removedListenerCount=this._eventEmitter.listenerCount?this._eventEmitter.listenerCount(eventName):this._eventEmitter.listeners(eventName).length;this._eventEmitter.removeAllListeners(eventName);this._listenerCount-=removedListenerCount;invariant(this._listenerCount>=0,\"EventEmitter must have a non-negative number of listeners\");if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"removeSubscription\",value:function removeSubscription(subscription){var nativeEmitterSubscription=subscription[nativeEmitterSubscriptionKey];if(!nativeEmitterSubscription){return;}if('remove'in nativeEmitterSubscription){nativeEmitterSubscription.remove();}else if('removeSubscription'in this._eventEmitter){this._eventEmitter.removeSubscription(nativeEmitterSubscription);}this._listenerCount--;delete subscription[nativeEmitterSubscriptionKey];subscription.remove=function(){};if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"emit\",value:function emit(eventName){var _this$_eventEmitter;for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}(_this$_eventEmitter=this._eventEmitter).emit.apply(_this$_eventEmitter,[eventName].concat(params));}}]);return EventEmitter;}();","map":{"version":3,"sources":["../src/EventEmitter.ts"],"names":[],"mappings":"mMAAA,MAAO,UAAS,KAAM,WAAW,CAAC,8IAGlC,GAAM,6BAA4B,CAAG,+BAA+B,CAiBpE,UAAa,aAAY,YAKvB,sBAAY,YAA0B,CAAA,yCAJtC,cAAc,CAAG,CAAC,CAKhB,IAAI,CAAC,aAAa,CAAG,YAAY,CACjC,IAAI,CAAC,aAAa,CAAG,GAAI,mBAAkB,CAAC,YAAmB,CAAC,CAClE,CAAC,oDAED,qBAAe,SAAiB,CAAE,QAA4B,CAAA,8BAC5D,GAAI,CAAC,IAAI,CAAC,cAAc,EAAI,QAAQ,CAAC,EAAE,GAAK,KAAK,EAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAE,CACtF,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CACpC,CAED,IAAI,CAAC,cAAc,EAAE,CACrB,GAAM,0BAAyB,CAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAE,QAAQ,CAAC,CACrF,GAAM,aAAY,iDACf,4BAA4B,CAAG,yBAAyB,yCACjD,iBAAK,CACX,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CACvC,CAAC,gBACF,CACD,MAAO,aAAY,CACrB,CAAC,kCAED,4BAAmB,SAAiB,CAAA,CAElC,GAAM,qBAAoB,CAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAEzD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAE3C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAClD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAChD,IAAI,CAAC,cAAc,EAAI,oBAAoB,CAC3C,SAAS,CACP,IAAI,CAAC,cAAc,EAAI,CAAC,6DAEzB,CAED,GAAI,CAAC,IAAI,CAAC,cAAc,EAAI,QAAQ,CAAC,EAAE,GAAK,KAAK,EAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,CACrF,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CACnC,CACH,CAAC,kCAED,4BAAmB,YAA0B,CAAA,CAC3C,GAAM,0BAAyB,CAAG,YAAY,CAAC,4BAA4B,CAAC,CAC5E,GAAI,CAAC,yBAAyB,CAAE,CAC9B,OACD,CAED,GAAI,QAAQ,EAAI,0BAAyB,CAAE,CAEzC,yBAAyB,CAAC,MAAM,EAAE,C,CACnC,IAAM,IAAI,oBAAoB,EAAI,KAAI,CAAC,aAAa,CAAE,CACrD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,yBAA0B,CAAC,CAClE,CACD,IAAI,CAAC,cAAc,EAAE,CAIrB,MAAO,aAAY,CAAC,4BAA4B,CAAC,CAGjD,YAAY,CAAC,MAAM,CAAG,UAAK,CAAE,CAAC,CAE9B,GAAI,CAAC,IAAI,CAAC,cAAc,EAAI,QAAQ,CAAC,EAAE,GAAK,KAAK,EAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,CACrF,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CACnC,CACH,CAAC,oBAED,cAAK,SAAiB,CAAkB,uDAAb,MAAa,qDAAb,MAAa,0BACtC,yBAAI,CAAC,aAAa,EAAC,IAAI,4BAAC,SAAS,SAAK,MAAM,EAAC,CAC/C,CAAC","sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\n// @needsAudit\nexport type Subscription = {\n  /**\n   * A method to unsubscribe the listener.\n   */\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      // `react-native-web@0.17.1` doesn't support `removeSubscription`\n      nativeEmitterSubscription.remove();\n    } else if ('removeSubscription' in this._eventEmitter) {\n      this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}