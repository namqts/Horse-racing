{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import createHandler from\"./createHandler\";import{baseGestureHandlerProps}from\"./gestureHandlerCommon\";export var nativeViewGestureHandlerProps=['shouldActivateOnStart','disallowInterruption'];export var nativeViewProps=[].concat(_toConsumableArray(baseGestureHandlerProps),nativeViewGestureHandlerProps);export var NativeViewGestureHandler=createHandler({name:'NativeViewGestureHandler',allowedProps:nativeViewProps,config:{}});","map":{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["createHandler","baseGestureHandlerProps","nativeViewGestureHandlerProps","nativeViewProps","NativeViewGestureHandler","name","allowedProps","config"],"mappings":"yEAAA,MAAOA,cAAP,uBACA,OAEEC,uBAFF,8BAKA,MAAO,IAAMC,8BAA6B,CAAG,CAC3C,uBAD2C,CAE3C,sBAF2C,CAAtC,CAgCP,MAAO,IAAMC,gBAAe,8BACvBF,uBAD0B,EAE1BC,6BAF0B,CAAxB,CAOP,MAAO,IAAME,yBAAwB,CAAGJ,aAAa,CAGnD,CACAK,IAAI,CAAE,0BADN,CAEAC,YAAY,CAAEH,eAFd,CAGAI,MAAM,CAAE,CAAA,CAHR,CAHmD,CAA9C","sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const nativeViewGestureHandlerProps = [\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport interface NativeViewGestureConfig {\n  /**\n   * Android only.\n   *\n   * Determines whether the handler should check for an existing touch event on\n   * instantiation.\n   */\n  shouldActivateOnStart?: boolean;\n\n  /**\n   * When `true`, cancels all other gesture handlers when this\n   * `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   */\n  disallowInterruption?: boolean;\n}\n\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,\n    NativeViewGestureConfig {}\n\nexport type NativeViewGestureHandlerPayload = {\n  /**\n   * True if gesture was performed inside of containing view, false otherwise.\n   */\n  pointerInside: boolean;\n};\n\nexport const nativeViewProps = [\n  ...baseGestureHandlerProps,\n  ...nativeViewGestureHandlerProps,\n] as const;\n\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: 'NativeViewGestureHandler',\n  allowedProps: nativeViewProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}