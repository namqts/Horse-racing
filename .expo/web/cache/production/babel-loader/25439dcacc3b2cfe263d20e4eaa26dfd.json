{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useRef as $eCAIO$useRef,useEffect as $eCAIO$useEffect,useMemo as $eCAIO$useMemo}from\"react\";import{getFocusableTreeWalker as $eCAIO$getFocusableTreeWalker,focusSafely as $eCAIO$focusSafely}from\"@react-aria/focus\";import{focusWithoutScrolling as $eCAIO$focusWithoutScrolling,useEvent as $eCAIO$useEvent,scrollIntoView as $eCAIO$scrollIntoView,mergeProps as $eCAIO$mergeProps,isAppleDevice as $eCAIO$isAppleDevice,isMac as $eCAIO$isMac}from\"@react-aria/utils\";import{useLocale as $eCAIO$useLocale,useCollator as $eCAIO$useCollator}from\"@react-aria/i18n\";import{usePress as $eCAIO$usePress,useLongPress as $eCAIO$useLongPress}from\"@react-aria/interactions\";function $feb5ffebff200149$export$d3e3bd3e26688c04(e){return $eCAIO$isAppleDevice()?e.altKey:e.ctrlKey;}function $feb5ffebff200149$export$16792effe837dba3(e){if($eCAIO$isMac())return e.metaKey;return e.ctrlKey;}var $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS=1000;function $fb3050f43d946246$export$e32c88dfddc6e1d8(options){var keyboardDelegate=options.keyboardDelegate,selectionManager=options.selectionManager,onTypeSelect=options.onTypeSelect;var state=$eCAIO$useRef({search:'',timeout:null}).current;var onKeyDown=function onKeyDown(e){var character=$fb3050f43d946246$var$getStringForKey(e.key);if(!character||e.ctrlKey||e.metaKey)return;if(character===' '&&state.search.trim().length>0){e.preventDefault();if(!('continuePropagation'in e))e.stopPropagation();}state.search+=character;var key=keyboardDelegate.getKeyForSearch(state.search,selectionManager.focusedKey);if(key==null)key=keyboardDelegate.getKeyForSearch(state.search);if(key!=null){selectionManager.setFocusedKey(key);if(onTypeSelect)onTypeSelect(key);}clearTimeout(state.timeout);state.timeout=setTimeout(function(){state.search='';},$fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);};return{typeSelectProps:{onKeyDownCapture:keyboardDelegate.getKeyForSearch?onKeyDown:null}};}function $fb3050f43d946246$var$getStringForKey(key){if(key.length===1||!/^[A-Z]/i.test(key))return key;return'';}function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options){var manager=options.selectionManager,delegate=options.keyboardDelegate,ref=options.ref,_options$autoFocus=options.autoFocus,autoFocus=_options$autoFocus===void 0?false:_options$autoFocus,_options$shouldFocusW=options.shouldFocusWrap,shouldFocusWrap=_options$shouldFocusW===void 0?false:_options$shouldFocusW,_options$disallowEmpt=options.disallowEmptySelection,disallowEmptySelection=_options$disallowEmpt===void 0?false:_options$disallowEmpt,_options$disallowSele=options.disallowSelectAll,disallowSelectAll=_options$disallowSele===void 0?false:_options$disallowSele,_options$selectOnFocu=options.selectOnFocus,selectOnFocus=_options$selectOnFocu===void 0?manager.selectionBehavior==='replace':_options$selectOnFocu,_options$disallowType=options.disallowTypeAhead,disallowTypeAhead=_options$disallowType===void 0?false:_options$disallowType,shouldUseVirtualFocus=options.shouldUseVirtualFocus,_options$allowsTabNav=options.allowsTabNavigation,allowsTabNavigation=_options$allowsTabNav===void 0?false:_options$allowsTabNav,isVirtualized=options.isVirtualized,_options$scrollRef=options.scrollRef,scrollRef=_options$scrollRef===void 0?ref:_options$scrollRef;var _$eCAIO$useLocale=$eCAIO$useLocale(),direction=_$eCAIO$useLocale.direction;var onKeyDown=function onKeyDown(e){if(e.altKey&&e.key==='Tab')e.preventDefault();if(!ref.current.contains(e.target))return;var navigateToKey=function navigateToKey(key,childFocus){if(key!=null){manager.setFocusedKey(key,childFocus);if(e.shiftKey&&manager.selectionMode==='multiple')manager.extendSelection(key);else if(selectOnFocus&&!$feb5ffebff200149$export$d3e3bd3e26688c04(e))manager.replaceSelection(key);}};switch(e.key){case'ArrowDown':if(delegate.getKeyBelow){var ref4,ref1;e.preventDefault();var nextKey=manager.focusedKey!=null?delegate.getKeyBelow(manager.focusedKey):(ref4=delegate.getFirstKey)===null||ref4===void 0?void 0:ref4.call(delegate);if(nextKey==null&&shouldFocusWrap)nextKey=(ref1=delegate.getFirstKey)===null||ref1===void 0?void 0:ref1.call(delegate,manager.focusedKey);navigateToKey(nextKey);}break;case'ArrowUp':if(delegate.getKeyAbove){var ref2,ref3;e.preventDefault();var _nextKey=manager.focusedKey!=null?delegate.getKeyAbove(manager.focusedKey):(ref2=delegate.getLastKey)===null||ref2===void 0?void 0:ref2.call(delegate);if(_nextKey==null&&shouldFocusWrap)_nextKey=(ref3=delegate.getLastKey)===null||ref3===void 0?void 0:ref3.call(delegate,manager.focusedKey);navigateToKey(_nextKey);}break;case'ArrowLeft':if(delegate.getKeyLeftOf){e.preventDefault();var _nextKey2=delegate.getKeyLeftOf(manager.focusedKey);navigateToKey(_nextKey2,direction==='rtl'?'first':'last');}break;case'ArrowRight':if(delegate.getKeyRightOf){e.preventDefault();var _nextKey3=delegate.getKeyRightOf(manager.focusedKey);navigateToKey(_nextKey3,direction==='rtl'?'last':'first');}break;case'Home':if(delegate.getFirstKey){e.preventDefault();var firstKey=delegate.getFirstKey(manager.focusedKey,$feb5ffebff200149$export$16792effe837dba3(e));manager.setFocusedKey(firstKey);if($feb5ffebff200149$export$16792effe837dba3(e)&&e.shiftKey&&manager.selectionMode==='multiple')manager.extendSelection(firstKey);else if(selectOnFocus)manager.replaceSelection(firstKey);}break;case'End':if(delegate.getLastKey){e.preventDefault();var lastKey=delegate.getLastKey(manager.focusedKey,$feb5ffebff200149$export$16792effe837dba3(e));manager.setFocusedKey(lastKey);if($feb5ffebff200149$export$16792effe837dba3(e)&&e.shiftKey&&manager.selectionMode==='multiple')manager.extendSelection(lastKey);else if(selectOnFocus)manager.replaceSelection(lastKey);}break;case'PageDown':if(delegate.getKeyPageBelow){e.preventDefault();var _nextKey4=delegate.getKeyPageBelow(manager.focusedKey);navigateToKey(_nextKey4);}break;case'PageUp':if(delegate.getKeyPageAbove){e.preventDefault();var _nextKey5=delegate.getKeyPageAbove(manager.focusedKey);navigateToKey(_nextKey5);}break;case'a':if($feb5ffebff200149$export$16792effe837dba3(e)&&manager.selectionMode==='multiple'&&disallowSelectAll!==true){e.preventDefault();manager.selectAll();}break;case'Escape':e.preventDefault();if(!disallowEmptySelection)manager.clearSelection();break;case'Tab':if(!allowsTabNavigation){if(e.shiftKey)ref.current.focus();else{var walker=$eCAIO$getFocusableTreeWalker(ref.current,{tabbable:true});var next;var last;do{last=walker.lastChild();if(last)next=last;}while(last);if(next&&!next.contains(document.activeElement))$eCAIO$focusWithoutScrolling(next);}break;}}};var scrollPos=$eCAIO$useRef({top:0,left:0});$eCAIO$useEvent(scrollRef,'scroll',isVirtualized?null:function(){scrollPos.current={top:scrollRef.current.scrollTop,left:scrollRef.current.scrollLeft};});var onFocus=function onFocus(e){if(manager.isFocused){if(!e.currentTarget.contains(e.target))manager.setFocused(false);return;}if(!e.currentTarget.contains(e.target))return;manager.setFocused(true);if(manager.focusedKey==null){var navigateToFirstKey=function navigateToFirstKey(key){if(key!=null){manager.setFocusedKey(key);if(selectOnFocus)manager.replaceSelection(key);}};var relatedTarget=e.relatedTarget;var _lastSelectedKey,_firstSelectedKey;if(relatedTarget&&e.currentTarget.compareDocumentPosition(relatedTarget)&Node.DOCUMENT_POSITION_FOLLOWING)navigateToFirstKey((_lastSelectedKey=manager.lastSelectedKey)!==null&&_lastSelectedKey!==void 0?_lastSelectedKey:delegate.getLastKey());else navigateToFirstKey((_firstSelectedKey=manager.firstSelectedKey)!==null&&_firstSelectedKey!==void 0?_firstSelectedKey:delegate.getFirstKey());}else if(!isVirtualized){scrollRef.current.scrollTop=scrollPos.current.top;scrollRef.current.scrollLeft=scrollPos.current.left;var element=scrollRef.current.querySelector(\"[data-key=\\\"\"+manager.focusedKey+\"\\\"]\");if(element){$eCAIO$focusWithoutScrolling(element);$eCAIO$scrollIntoView(scrollRef.current,element);}}};var onBlur=function onBlur(e){if(!e.currentTarget.contains(e.relatedTarget))manager.setFocused(false);};var autoFocusRef=$eCAIO$useRef(autoFocus);$eCAIO$useEffect(function(){if(autoFocusRef.current){var focusedKey=null;if(autoFocus==='first')focusedKey=delegate.getFirstKey();if(autoFocus==='last')focusedKey=delegate.getLastKey();var selectedKeys=manager.selectedKeys;if(selectedKeys.size)focusedKey=selectedKeys.values().next().value;manager.setFocused(true);manager.setFocusedKey(focusedKey);if(focusedKey==null&&!shouldUseVirtualFocus)$eCAIO$focusSafely(ref.current);}autoFocusRef.current=false;},[]);$eCAIO$useEffect(function(){if(!isVirtualized&&manager.focusedKey&&(scrollRef===null||scrollRef===void 0?void 0:scrollRef.current)){var element=scrollRef.current.querySelector(\"[data-key=\\\"\"+manager.focusedKey+\"\\\"]\");if(element)$eCAIO$scrollIntoView(scrollRef.current,element);}},[isVirtualized,scrollRef,manager.focusedKey]);var handlers={onKeyDown:onKeyDown,onFocus:onFocus,onBlur:onBlur,onMouseDown:function onMouseDown(e){if(e.currentTarget.contains(e.target))e.preventDefault();}};var _$fb3050f43d946246$ex=$fb3050f43d946246$export$e32c88dfddc6e1d8({keyboardDelegate:delegate,selectionManager:manager}),typeSelectProps=_$fb3050f43d946246$ex.typeSelectProps;if(!disallowTypeAhead)handlers=$eCAIO$mergeProps(typeSelectProps,handlers);var tabIndex;if(!shouldUseVirtualFocus)tabIndex=manager.focusedKey==null?0:-1;return{collectionProps:_objectSpread(_objectSpread({},handlers),{},{tabIndex:tabIndex})};}function $880e95eb8b93ba9a$export$ecf600387e221c37(options){var manager=options.selectionManager,key=options.key,ref=options.ref,shouldSelectOnPressUp=options.shouldSelectOnPressUp,isVirtualized=options.isVirtualized,shouldUseVirtualFocus=options.shouldUseVirtualFocus,focus=options.focus,isDisabled=options.isDisabled,onAction=options.onAction,allowsDifferentPressOrigin=options.allowsDifferentPressOrigin;var onSelect=function onSelect(e){if(e.pointerType==='keyboard'&&$feb5ffebff200149$export$d3e3bd3e26688c04(e))manager.toggleSelection(key);else{if(manager.selectionMode==='none')return;if(manager.selectionMode==='single'){if(manager.isSelected(key)&&!manager.disallowEmptySelection)manager.toggleSelection(key);else manager.replaceSelection(key);}else if(e&&e.shiftKey)manager.extendSelection(key);else if(manager.selectionBehavior==='toggle'||e&&($feb5ffebff200149$export$16792effe837dba3(e)||e.pointerType==='touch'||e.pointerType==='virtual'))manager.toggleSelection(key);else manager.replaceSelection(key);}};$eCAIO$useEffect(function(){var isFocused=key===manager.focusedKey;if(isFocused&&manager.isFocused&&!shouldUseVirtualFocus&&document.activeElement!==ref.current){if(focus)focus();else $eCAIO$focusSafely(ref.current);}},[ref,key,manager.focusedKey,manager.childFocusStrategy,manager.isFocused,shouldUseVirtualFocus]);var itemProps={};if(!shouldUseVirtualFocus)itemProps={tabIndex:key===manager.focusedKey?0:-1,onFocus:function onFocus(e){if(e.target===ref.current)manager.setFocusedKey(key);}};isDisabled=isDisabled||manager.isDisabled(key);var allowsSelection=!isDisabled&&manager.canSelectItem(key);var allowsActions=onAction&&!isDisabled;var hasPrimaryAction=allowsActions&&(manager.selectionBehavior==='replace'?!allowsSelection:manager.isEmpty);var hasSecondaryAction=allowsActions&&allowsSelection&&manager.selectionBehavior==='replace';var hasAction=hasPrimaryAction||hasSecondaryAction;var modality=$eCAIO$useRef(null);var longPressEnabled=hasAction&&allowsSelection;var longPressEnabledOnPressStart=$eCAIO$useRef(false);var hadPrimaryActionOnPressStart=$eCAIO$useRef(false);var itemPressProps={};if(shouldSelectOnPressUp){itemPressProps.onPressStart=function(e){modality.current=e.pointerType;longPressEnabledOnPressStart.current=longPressEnabled;if(e.pointerType==='keyboard'&&(!hasAction||$880e95eb8b93ba9a$var$isSelectionKey()))onSelect(e);};if(!allowsDifferentPressOrigin)itemPressProps.onPress=function(e){if(hasPrimaryAction||hasSecondaryAction&&e.pointerType!=='mouse'){if(e.pointerType==='keyboard'&&!$880e95eb8b93ba9a$var$isActionKey())return;onAction();}else if(e.pointerType!=='keyboard')onSelect(e);};else{itemPressProps.onPressUp=function(e){if(e.pointerType!=='keyboard')onSelect(e);};itemPressProps.onPress=hasPrimaryAction?function(){return onAction();}:null;}}else{itemPressProps.onPressStart=function(e){modality.current=e.pointerType;longPressEnabledOnPressStart.current=longPressEnabled;hadPrimaryActionOnPressStart.current=hasPrimaryAction;if(e.pointerType==='mouse'&&!hasPrimaryAction||e.pointerType==='keyboard'&&(!onAction||$880e95eb8b93ba9a$var$isSelectionKey()))onSelect(e);};itemPressProps.onPress=function(e){if(e.pointerType==='touch'||e.pointerType==='pen'||e.pointerType==='virtual'||e.pointerType==='keyboard'&&hasAction&&$880e95eb8b93ba9a$var$isActionKey()||e.pointerType==='mouse'&&hadPrimaryActionOnPressStart.current){if(hasAction)onAction();else onSelect(e);}};}if(!isVirtualized)itemProps['data-key']=key;itemPressProps.preventFocusOnPress=shouldUseVirtualFocus;var _$eCAIO$usePress=$eCAIO$usePress(itemPressProps),pressProps=_$eCAIO$usePress.pressProps,isPressed=_$eCAIO$usePress.isPressed;var onDoubleClick=hasSecondaryAction?function(e){if(modality.current==='mouse'){e.stopPropagation();e.preventDefault();onAction();}}:undefined;var _$eCAIO$useLongPress=$eCAIO$useLongPress({isDisabled:!longPressEnabled,onLongPress:function onLongPress(e){if(e.pointerType==='touch'){onSelect(e);manager.setSelectionBehavior('toggle');}}}),longPressProps=_$eCAIO$useLongPress.longPressProps;var onDragStartCapture=function onDragStartCapture(e){if(modality.current==='touch'&&longPressEnabledOnPressStart.current)e.preventDefault();};return{itemProps:$eCAIO$mergeProps(itemProps,allowsSelection||hasPrimaryAction?pressProps:{},longPressEnabled?longPressProps:{},{onDoubleClick:onDoubleClick,onDragStartCapture:onDragStartCapture}),isPressed:isPressed,isSelected:manager.isSelected(key),isDisabled:isDisabled,allowsSelection:allowsSelection,hasAction:hasAction};}function $880e95eb8b93ba9a$var$isActionKey(){var event=window.event;return(event===null||event===void 0?void 0:event.key)==='Enter';}function $880e95eb8b93ba9a$var$isSelectionKey(){var event=window.event;return(event===null||event===void 0?void 0:event.key)===' '||(event===null||event===void 0?void 0:event.code)==='Space';}var $2a25aae57d74318e$export$a05409b8bb224a5a=function(){function $2a25aae57d74318e$export$a05409b8bb224a5a(collection,disabledKeys,ref,collator){_classCallCheck(this,$2a25aae57d74318e$export$a05409b8bb224a5a);this.collection=collection;this.disabledKeys=disabledKeys;this.ref=ref;this.collator=collator;}_createClass($2a25aae57d74318e$export$a05409b8bb224a5a,[{key:\"getKeyBelow\",value:function getKeyBelow(key){key=this.collection.getKeyAfter(key);while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key))return key;key=this.collection.getKeyAfter(key);}}},{key:\"getKeyAbove\",value:function getKeyAbove(key){key=this.collection.getKeyBefore(key);while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key))return key;key=this.collection.getKeyBefore(key);}}},{key:\"getFirstKey\",value:function getFirstKey(){var key=this.collection.getFirstKey();while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key))return key;key=this.collection.getKeyAfter(key);}}},{key:\"getLastKey\",value:function getLastKey(){var key=this.collection.getLastKey();while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key))return key;key=this.collection.getKeyBefore(key);}}},{key:\"getItem\",value:function getItem(key){return this.ref.current.querySelector(\"[data-key=\\\"\"+key+\"\\\"]\");}},{key:\"getKeyPageAbove\",value:function getKeyPageAbove(key){var menu=this.ref.current;var item=this.getItem(key);if(!item)return null;var pageY=Math.max(0,item.offsetTop+item.offsetHeight-menu.offsetHeight);while(item&&item.offsetTop>pageY){key=this.getKeyAbove(key);item=this.getItem(key);}return key;}},{key:\"getKeyPageBelow\",value:function getKeyPageBelow(key){var menu=this.ref.current;var item=this.getItem(key);if(!item)return null;var pageY=Math.min(menu.scrollHeight,item.offsetTop-item.offsetHeight+menu.offsetHeight);while(item&&item.offsetTop<pageY){key=this.getKeyBelow(key);item=this.getItem(key);}return key;}},{key:\"getKeyForSearch\",value:function getKeyForSearch(search,fromKey){if(!this.collator)return null;var collection=this.collection;var key=fromKey||this.getFirstKey();while(key!=null){var item=collection.getItem(key);var substring=item.textValue.slice(0,search.length);if(item.textValue&&this.collator.compare(substring,search)===0)return key;key=this.getKeyBelow(key);}return null;}}]);return $2a25aae57d74318e$export$a05409b8bb224a5a;}();function $982254629710d113$export$b95089534ab7c1fd(props){var selectionManager=props.selectionManager,collection=props.collection,disabledKeys=props.disabledKeys,ref=props.ref,keyboardDelegate=props.keyboardDelegate,autoFocus=props.autoFocus,shouldFocusWrap=props.shouldFocusWrap,isVirtualized=props.isVirtualized,disallowEmptySelection=props.disallowEmptySelection,_props$selectOnFocus=props.selectOnFocus,selectOnFocus=_props$selectOnFocus===void 0?selectionManager.selectionBehavior==='replace':_props$selectOnFocus,disallowTypeAhead=props.disallowTypeAhead,shouldUseVirtualFocus=props.shouldUseVirtualFocus,allowsTabNavigation=props.allowsTabNavigation;var collator=$eCAIO$useCollator({usage:'search',sensitivity:'base'});var disabledBehavior=selectionManager.disabledBehavior;var delegate=$eCAIO$useMemo(function(){return keyboardDelegate||new $2a25aae57d74318e$export$a05409b8bb224a5a(collection,disabledBehavior==='selection'?new Set():disabledKeys,ref,collator);},[keyboardDelegate,collection,disabledKeys,ref,collator,disabledBehavior]);var _$ae20dd8cbca75726$ex=$ae20dd8cbca75726$export$d6daf82dcd84e87c({ref:ref,selectionManager:selectionManager,keyboardDelegate:delegate,autoFocus:autoFocus,shouldFocusWrap:shouldFocusWrap,disallowEmptySelection:disallowEmptySelection,selectOnFocus:selectOnFocus,disallowTypeAhead:disallowTypeAhead,shouldUseVirtualFocus:shouldUseVirtualFocus,allowsTabNavigation:allowsTabNavigation,isVirtualized:isVirtualized,scrollRef:ref}),collectionProps=_$ae20dd8cbca75726$ex.collectionProps;return{listProps:collectionProps};}export{$ae20dd8cbca75726$export$d6daf82dcd84e87c as useSelectableCollection,$880e95eb8b93ba9a$export$ecf600387e221c37 as useSelectableItem,$982254629710d113$export$b95089534ab7c1fd as useSelectableList,$2a25aae57d74318e$export$a05409b8bb224a5a as ListKeyboardDelegate,$fb3050f43d946246$export$e32c88dfddc6e1d8 as useTypeSelect};","map":{"version":3,"sources":["packages/@react-aria/selection/src/useSelectableCollection.ts","packages/@react-aria/selection/src/utils.ts","packages/@react-aria/selection/src/useTypeSelect.ts","packages/@react-aria/selection/src/useSelectableItem.ts","packages/@react-aria/selection/src/useSelectableList.ts","packages/@react-aria/selection/src/ListKeyboardDelegate.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, FocusStrategy, KeyboardDelegate} from '@react-types/shared';\nimport {FocusEvent, Key, KeyboardEvent, RefObject, useEffect, useRef} from 'react';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, scrollIntoView, useEvent} from '@react-aria/utils';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useLocale} from '@react-aria/i18n';\nimport {useTypeSelect} from './useTypeSelect';\n\nexport interface AriaSelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement>,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean,\n  /**\n   * Whether the collection items are contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * The ref attached to the scrollable body. Used to provide automatic scrolling on item focus for non-virtualized collections.\n   * If not provided, defaults to the collection ref.\n   */\n  scrollRef?: RefObject<HTMLElement>\n}\n\nexport interface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: DOMAttributes\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(options: AriaSelectableCollectionOptions): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    selectOnFocus = manager.selectionBehavior === 'replace',\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false,\n    isVirtualized,\n    // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref\n  } = options;\n  let {direction} = useLocale();\n\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n    if (e.altKey && e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (!ref.current.contains(e.target as Element)) {\n      return;\n    }\n\n    const navigateToKey = (key: Key | undefined, childFocus?: FocusStrategy) => {\n      if (key != null) {\n        manager.setFocusedKey(key, childFocus);\n\n        if (e.shiftKey && manager.selectionMode === 'multiple') {\n          manager.extendSelection(key);\n        } else if (selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown': {\n        if (delegate.getKeyBelow) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyBelow(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        if (delegate.getKeyAbove) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyAbove(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if (delegate.getKeyLeftOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n          navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        if (delegate.getKeyRightOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n          navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n        }\n        break;\n      }\n      case 'Home':\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          let firstKey = delegate.getFirstKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(firstKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(firstKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(firstKey);\n          }\n        }\n        break;\n      case 'End':\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(lastKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(lastKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(lastKey);\n          }\n        }\n        break;\n      case 'PageDown':\n        if (delegate.getKeyPageBelow) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'PageUp':\n        if (delegate.getKeyPageAbove) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'a':\n        if (isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case 'Escape':\n        e.preventDefault();\n        if (!disallowEmptySelection) {\n          manager.clearSelection();\n        }\n        break;\n      case 'Tab': {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n            let next: FocusableElement;\n            let last: FocusableElement;\n            do {\n              last = walker.lastChild() as FocusableElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              focusWithoutScrolling(next);\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  // Store the scroll position so we can restore it later.\n  let scrollPos = useRef({top: 0, left: 0});\n  useEvent(scrollRef, 'scroll', isVirtualized ? null : () => {\n    scrollPos.current = {\n      top: scrollRef.current.scrollTop,\n      left: scrollRef.current.scrollLeft\n    };\n  });\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      let navigateToFirstKey = (key: Key | undefined) => {\n        if (key != null) {\n          manager.setFocusedKey(key);\n          if (selectOnFocus) {\n            manager.replaceSelection(key);\n          }\n        }\n      };\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      if (relatedTarget && (e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)) {\n        navigateToFirstKey(manager.lastSelectedKey ?? delegate.getLastKey());\n      } else {\n        navigateToFirstKey(manager.firstSelectedKey ?? delegate.getFirstKey());\n      }\n    } else if (!isVirtualized) {\n      // Restore the scroll position to what it was before.\n      scrollRef.current.scrollTop = scrollPos.current.top;\n      scrollRef.current.scrollLeft = scrollPos.current.left;\n\n      // Refocus and scroll the focused item into view if it exists within the scrollable region.\n      let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`) as HTMLElement;\n      if (element) {\n        // This prevents a flash of focus on the first/last element in the collection\n        focusWithoutScrolling(element);\n        scrollIntoView(scrollRef.current, element);\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  const autoFocusRef = useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      let focusedKey = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === 'first') {\n        focusedKey = delegate.getFirstKey();\n      } if (autoFocus === 'last') {\n        focusedKey = delegate.getLastKey();\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        focusedKey = selectedKeys.values().next().value;\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus) {\n        focusSafely(ref.current);\n      }\n    }\n    autoFocusRef.current = false;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  useEffect(() => {\n    if (!isVirtualized && manager.focusedKey && scrollRef?.current) {\n      let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`) as HTMLElement;\n      if (element) {\n        scrollIntoView(scrollRef.current, element);\n      }\n    }\n  }, [isVirtualized, scrollRef, manager.focusedKey]);\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e) {\n      // Ignore events that bubbled through portals.\n      if (e.currentTarget.contains(e.target)) {\n        // Prevent focus going to the collection when clicking on the scrollbar.\n        e.preventDefault();\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n  // to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  return {\n    collectionProps: {\n      ...handlers,\n      tabIndex\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAppleDevice} from '@react-aria/utils';\nimport {isMac} from '@react-aria/utils';\n\ninterface Event {\n  altKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport function isNonContiguousSelectionModifier(e: Event) {\n  // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n  // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n  return isAppleDevice() ? e.altKey : e.ctrlKey;\n}\n\nexport function isCtrlKeyPressed(e: Event) {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, KeyboardDelegate} from '@react-types/shared';\nimport {Key, KeyboardEvent, useRef} from 'react';\nimport {MultipleSelectionManager} from '@react-stately/selection';\n\n/**\n * Controls how long to wait before clearing the typeahead buffer.\n */\nconst TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000; // 1 second\n\nexport interface AriaTypeSelectOptions {\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * Called when an item is focused by typing.\n   */\n  onTypeSelect?: (key: Key) => void\n}\n\nexport interface TypeSelectAria {\n  /**\n   * Props to be spread on the owner of the options.\n   */\n  typeSelectProps: DOMAttributes\n}\n\n/**\n * Handles typeahead interactions with collections.\n */\nexport function useTypeSelect(options: AriaTypeSelectOptions): TypeSelectAria {\n  let {keyboardDelegate, selectionManager, onTypeSelect} = options;\n  let state = useRef({\n    search: '',\n    timeout: null\n  }).current;\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    let character = getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey) {\n      return;\n    }\n\n    // Do not propagate the Spacebar event if it's meant to be part of the search.\n    // When we time out, the search term becomes empty, hence the check on length.\n    // Trimming is to account for the case of pressing the Spacebar more than once,\n    // which should cycle through the selection/deselection of the focused item.\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) {\n        e.stopPropagation();\n      }\n    }\n\n    state.search += character;\n\n    // Use the delegate to find a key to focus.\n    // Prioritize items after the currently focused item, falling back to searching the whole list.\n    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n\n    // If no key found, search from the top.\n    if (key == null) {\n      key = keyboardDelegate.getKeyForSearch(state.search);\n    }\n\n    if (key != null) {\n      selectionManager.setFocusedKey(key);\n      if (onTypeSelect) {\n        onTypeSelect(key);\n      }\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(() => {\n      state.search = '';\n    }, TYPEAHEAD_DEBOUNCE_WAIT_MS);\n  };\n\n  return {\n    typeSelectProps: {\n      // Using a capturing listener to catch the keydown event before\n      // other hooks in order to handle the Spacebar event.\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n    }\n  };\n}\n\nfunction getStringForKey(key: string) {\n  // If the key is of length 1, it is an ASCII value.\n  // Otherwise, if there are no ASCII characters in the key name,\n  // it is a Unicode character.\n  // See https://www.w3.org/TR/uievents-key/\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n    return key;\n  }\n\n  return '';\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, LongPressEvent, PressEvent} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {Key, RefObject, useEffect, useRef} from 'react';\nimport {mergeProps} from '@react-aria/utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {PressProps, useLongPress, usePress} from '@react-aria/interactions';\n\nexport interface SelectableItemOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A unique key for the item.\n   */\n  key: Key,\n  /**\n   * Ref to the item.\n   */\n  ref: RefObject<FocusableElement>,\n  /**\n   * By default, selection occurs on pointer down. This can be strange if selecting an\n   * item causes the UI to disappear immediately (e.g. menus).\n   */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Whether selection requires the pointer/mouse down and up events to occur on the same target or triggers selection on\n   * the target of the pointer/mouse up event.\n   */\n  allowsDifferentPressOrigin?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Function to focus the item.\n   */\n  focus?: () => void,\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void\n}\n\nexport interface SelectableItemStates {\n  /** Whether the item is currently in a pressed state. */\n  isPressed: boolean,\n  /** Whether the item is currently selected. */\n  isSelected: boolean,\n  /**\n   * Whether the item is non-interactive, i.e. both selection and actions are disabled and the item may\n   * not be focused. Dependent on `disabledKeys` and `disabledBehavior`.\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the item may be selected, dependent on `selectionMode`, `disabledKeys`, and `disabledBehavior`.\n   */\n  allowsSelection: boolean,\n  /**\n   * Whether the item has an action, dependent on `onAction`, `disabledKeys`,\n   * and `disabledBehavior`. It may also change depending on the current selection state\n   * of the list (e.g. when selection is primary). This can be used to enable or disable hover\n   * styles or other visual indications of interactivity.\n   */\n  hasAction: boolean\n}\n\nexport interface SelectableItemAria extends SelectableItemStates {\n  /**\n   * Props to be spread on the item root node.\n   */\n  itemProps: DOMAttributes\n}\n\n/**\n * Handles interactions with an item in a selectable collection.\n */\nexport function useSelectableItem(options: SelectableItemOptions): SelectableItemAria {\n  let {\n    selectionManager: manager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    isVirtualized,\n    shouldUseVirtualFocus,\n    focus,\n    isDisabled,\n    onAction,\n    allowsDifferentPressOrigin\n  } = options;\n\n  let onSelect = (e: PressEvent | LongPressEvent | PointerEvent) => {\n    if (e.pointerType === 'keyboard' && isNonContiguousSelectionModifier(e)) {\n      manager.toggleSelection(key);\n    } else {\n      if (manager.selectionMode === 'none') {\n        return;\n      }\n\n      if (manager.selectionMode === 'single') {\n        if (manager.isSelected(key) && !manager.disallowEmptySelection) {\n          manager.toggleSelection(key);\n        } else {\n          manager.replaceSelection(key);\n        }\n      } else if (e && e.shiftKey) {\n        manager.extendSelection(key);\n      } else if (manager.selectionBehavior === 'toggle' || (e && (isCtrlKeyPressed(e) || e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n        // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        manager.toggleSelection(key);\n      } else {\n        manager.replaceSelection(key);\n      }\n    }\n  };\n\n  // Focus the associated DOM node when this item becomes the focusedKey\n  useEffect(() => {\n    let isFocused = key === manager.focusedKey;\n    if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n      if (focus) {\n        focus();\n      } else {\n        focusSafely(ref.current);\n      }\n    }\n  }, [ref, key, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n\n  // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n  // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n  let itemProps: SelectableItemAria['itemProps'] = {};\n  if (!shouldUseVirtualFocus) {\n    itemProps = {\n      tabIndex: key === manager.focusedKey ? 0 : -1,\n      onFocus(e) {\n        if (e.target === ref.current) {\n          manager.setFocusedKey(key);\n        }\n      }\n    };\n  }\n\n\n  // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n  // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n  // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n  // With touch, onAction occurs on single tap, and long press enters selection mode.\n  isDisabled = isDisabled || manager.isDisabled(key);\n  let allowsSelection = !isDisabled && manager.canSelectItem(key);\n  let allowsActions = onAction && !isDisabled;\n  let hasPrimaryAction = allowsActions && (\n    manager.selectionBehavior === 'replace'\n      ? !allowsSelection\n      : manager.isEmpty\n  );\n  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n  let hasAction = hasPrimaryAction || hasSecondaryAction;\n  let modality = useRef(null);\n\n  let longPressEnabled = hasAction && allowsSelection;\n  let longPressEnabledOnPressStart = useRef(false);\n  let hadPrimaryActionOnPressStart = useRef(false);\n\n  // By default, selection occurs on pointer down. This can be strange if selecting an\n  // item causes the UI to disappear immediately (e.g. menus).\n  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n  // onPress requires a pointer down event on the same element as pointer up. For menus,\n  // we want to be able to have the pointer down on the trigger that opens the menu and\n  // the pointer up on the menu item rather than requiring a separate press.\n  // For keyboard events, selection still occurs on key down.\n  let itemPressProps: PressProps = {};\n  if (shouldSelectOnPressUp) {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      if (e.pointerType === 'keyboard' && (!hasAction || isSelectionKey())) {\n        onSelect(e);\n      }\n    };\n\n    // If allowsDifferentPressOrigin, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n    // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n    if (!allowsDifferentPressOrigin) {\n      itemPressProps.onPress = (e) => {\n        if (hasPrimaryAction || (hasSecondaryAction && e.pointerType !== 'mouse')) {\n          if (e.pointerType === 'keyboard' && !isActionKey()) {\n            return;\n          }\n\n          onAction();\n        } else if (e.pointerType !== 'keyboard') {\n          onSelect(e);\n        }\n      };\n    } else {\n      itemPressProps.onPressUp = (e) => {\n        if (e.pointerType !== 'keyboard') {\n          onSelect(e);\n        }\n      };\n\n      itemPressProps.onPress = hasPrimaryAction ? () => onAction() : null;\n    }\n  } else {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n\n      // Select on mouse down unless there is a primary action which will occur on mouse up.\n      // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n      // and the Enter key performs onAction on key up.\n      if (\n        (e.pointerType === 'mouse' && !hasPrimaryAction) ||\n        (e.pointerType === 'keyboard' && (!onAction || isSelectionKey()))\n      ) {\n        onSelect(e);\n      }\n    };\n\n    itemPressProps.onPress = (e) => {\n      // Selection occurs on touch up. Primary actions always occur on pointer up.\n      // Both primary and secondary actions occur on Enter key up. The only exception\n      // is secondary actions, which occur on double click with a mouse.\n      if (\n        e.pointerType === 'touch' ||\n        e.pointerType === 'pen' ||\n        e.pointerType === 'virtual' ||\n        (e.pointerType === 'keyboard' && hasAction && isActionKey()) ||\n        (e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current)\n      ) {\n        if (hasAction) {\n          onAction();\n        } else {\n          onSelect(e);\n        }\n      }\n    };\n  }\n\n  if (!isVirtualized) {\n    itemProps['data-key'] = key;\n  }\n\n  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n  let {pressProps, isPressed} = usePress(itemPressProps);\n\n  // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n  let onDoubleClick = hasSecondaryAction ? (e) => {\n    if (modality.current === 'mouse') {\n      e.stopPropagation();\n      e.preventDefault();\n      onAction();\n    }\n  } : undefined;\n\n  // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n  // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n  // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n  let {longPressProps} = useLongPress({\n    isDisabled: !longPressEnabled,\n    onLongPress(e) {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n        manager.setSelectionBehavior('toggle');\n      }\n    }\n  });\n\n  // Prevent native drag and drop on long press if we also select on long press.\n  // Once the user is in selection mode, they can long press again to drag.\n  // Use a capturing listener to ensure this runs before useDrag, regardless of\n  // the order the props get merged.\n  let onDragStartCapture = e => {\n    if (modality.current === 'touch' && longPressEnabledOnPressStart.current) {\n      e.preventDefault();\n    }\n  };\n\n  return {\n    itemProps: mergeProps(\n      itemProps,\n      allowsSelection || hasPrimaryAction ? pressProps : {},\n      longPressEnabled ? longPressProps : {},\n      {onDoubleClick, onDragStartCapture}\n    ),\n    isPressed,\n    isSelected: manager.isSelected(key),\n    isDisabled,\n    allowsSelection,\n    hasAction\n  };\n}\n\nfunction isActionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === 'Enter';\n}\n\nfunction isSelectionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === ' ' || event?.code === 'Space';\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, DOMAttributes, FocusStrategy, KeyboardDelegate, Node} from '@react-types/shared';\nimport {Key, RefObject, useMemo} from 'react';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useCollator} from '@react-aria/i18n';\nimport {useSelectableCollection} from './useSelectableCollection';\n\nexport interface AriaSelectableListOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>,\n  /**\n   * A ref to the item.\n   */\n  ref?: RefObject<HTMLElement>,\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean\n}\n\nexport interface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: DOMAttributes\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: AriaSelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    autoFocus,\n    shouldFocusWrap,\n    isVirtualized,\n    disallowEmptySelection,\n    selectOnFocus = selectionManager.selectionBehavior === 'replace',\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let disabledBehavior = selectionManager.disabledBehavior;\n  let delegate = useMemo(() => (\n    keyboardDelegate || new ListKeyboardDelegate(collection, disabledBehavior === 'selection' ? new Set() : disabledKeys, ref, collator)\n  ), [keyboardDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus,\n    shouldFocusWrap,\n    disallowEmptySelection,\n    selectOnFocus,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n    isVirtualized,\n    scrollRef: ref\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, KeyboardDelegate, Node} from '@react-types/shared';\nimport {Key, RefObject} from 'react';\n\nexport class ListKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private disabledKeys: Set<Key>;\n  private ref: RefObject<HTMLElement>;\n  private collator: Intl.Collator;\n\n  constructor(collection: Collection<Node<T>>, disabledKeys: Set<Key>, ref: RefObject<HTMLElement>, collator?: Intl.Collator) {\n    this.collection = collection;\n    this.disabledKeys = disabledKeys;\n    this.ref = ref;\n    this.collator = collator;\n  }\n\n  getKeyBelow(key: Key) {\n    key = this.collection.getKeyAfter(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    key = this.collection.getKeyBefore(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  getKeyPageAbove(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n\n    while (item && item.offsetTop > pageY) {\n      key = this.getKeyAbove(key);\n      item = this.getItem(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n\n    while (item && item.offsetTop < pageY) {\n      key = this.getKeyBelow(key);\n      item = this.getItem(key);\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey || this.getFirstKey();\n    while (key != null) {\n      let item = collection.getItem(key);\n      let substring = item.textValue.slice(0, search.length);\n      if (item.textValue && this.collator.compare(substring, search) === 0) {\n        return key;\n      }\n\n      key = this.getKeyBelow(key);\n    }\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}