{"ast":null,"code":"'use strict';var React=require('react');var Platform=require(\"../../Utilities/Platform\");var _require=require(\"../../Renderer/shims/ReactNative\"),findNodeHandle=_require.findNodeHandle;import{Commands as AndroidTextInputCommands}from\"../../Components/TextInput/AndroidTextInputNativeComponent\";import{Commands as iOSTextInputCommands}from\"../../Components/TextInput/RCTSingelineTextInputNativeComponent\";var currentlyFocusedInputRef=null;var inputs=new Set();function currentlyFocusedInput(){return currentlyFocusedInputRef;}function currentlyFocusedField(){if(__DEV__){console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');}return findNodeHandle(currentlyFocusedInputRef);}function focusInput(textField){if(currentlyFocusedInputRef!==textField&&textField!=null){currentlyFocusedInputRef=textField;}}function blurInput(textField){if(currentlyFocusedInputRef===textField&&textField!=null){currentlyFocusedInputRef=null;}}function focusField(textFieldID){if(__DEV__){console.error('focusField no longer works. Use focusInput');}return;}function blurField(textFieldID){if(__DEV__){console.error('blurField no longer works. Use blurInput');}return;}function focusTextInput(textField){if(typeof textField==='number'){if(__DEV__){console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');}return;}if(currentlyFocusedInputRef!==textField&&textField!=null){focusInput(textField);if(Platform.OS==='ios'){iOSTextInputCommands.focus(textField);}else if(Platform.OS==='android'){AndroidTextInputCommands.focus(textField);}}}function blurTextInput(textField){if(typeof textField==='number'){if(__DEV__){console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');}return;}if(currentlyFocusedInputRef===textField&&textField!=null){blurInput(textField);if(Platform.OS==='ios'){iOSTextInputCommands.blur(textField);}else if(Platform.OS==='android'){AndroidTextInputCommands.blur(textField);}}}function registerInput(textField){if(typeof textField==='number'){if(__DEV__){console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');}return;}inputs.add(textField);}function unregisterInput(textField){if(typeof textField==='number'){if(__DEV__){console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');}return;}inputs.delete(textField);}function isTextInput(textField){if(typeof textField==='number'){if(__DEV__){console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');}return false;}return inputs.has(textField);}module.exports={currentlyFocusedInput:currentlyFocusedInput,focusInput:focusInput,blurInput:blurInput,currentlyFocusedField:currentlyFocusedField,focusField:focusField,blurField:blurField,focusTextInput:focusTextInput,blurTextInput:blurTextInput,registerInput:registerInput,unregisterInput:unregisterInput,isTextInput:isTextInput};","map":{"version":3,"names":["React","require","Platform","findNodeHandle","Commands","AndroidTextInputCommands","iOSTextInputCommands","currentlyFocusedInputRef","inputs","Set","currentlyFocusedInput","currentlyFocusedField","__DEV__","console","error","focusInput","textField","blurInput","focusField","textFieldID","blurField","focusTextInput","OS","focus","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","has","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\n'use strict';\n\nconst React = require('react');\nconst Platform = require('../../Utilities/Platform');\nconst {findNodeHandle} = require('../../Renderer/shims/ReactNative');\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n"],"mappings":"AAcA,YAAY,CAEZ,GAAMA,MAAK,CAAGC,OAAO,CAAC,OAAO,CAAC,CAC9B,GAAMC,SAAQ,CAAGD,OAAO,4BAA4B,CACpD,aAAyBA,OAAO,oCAAoC,CAA7DE,cAAc,UAAdA,cAAc,CACrB,OAAQC,QAAQ,GAAIC,yBAAwB,kEAC5C,OAAQD,QAAQ,GAAIE,qBAAoB,uEAKxC,GAAIC,yBAAuC,CAAG,IAAI,CAClD,GAAMC,OAAM,CAAG,GAAIC,IAAG,EAAE,CAExB,QAASC,sBAAqB,EAAkB,CAC9C,MAAOH,yBAAwB,CACjC,CAMA,QAASI,sBAAqB,EAAY,CACxC,GAAIC,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,wGAAwG,CACzG,CACH,CAEA,MAAOX,eAAc,CAACI,wBAAwB,CAAC,CACjD,CAEA,QAASQ,WAAU,CAACC,SAAwB,CAAQ,CAClD,GAAIT,wBAAwB,GAAKS,SAAS,EAAIA,SAAS,EAAI,IAAI,CAAE,CAC/DT,wBAAwB,CAAGS,SAAS,CACtC,CACF,CAEA,QAASC,UAAS,CAACD,SAAwB,CAAQ,CACjD,GAAIT,wBAAwB,GAAKS,SAAS,EAAIA,SAAS,EAAI,IAAI,CAAE,CAC/DT,wBAAwB,CAAG,IAAI,CACjC,CACF,CAEA,QAASW,WAAU,CAACC,WAAoB,CAAQ,CAC9C,GAAIP,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC,CAC7D,CAEA,OACF,CAEA,QAASM,UAAS,CAACD,WAAoB,CAAE,CACvC,GAAIP,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC,CAC3D,CAEA,OACF,CAOA,QAASO,eAAc,CAACL,SAAwB,CAAE,CAChD,GAAI,MAAOA,UAAS,GAAK,QAAQ,CAAE,CACjC,GAAIJ,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,yFAAyF,CAC1F,CACH,CAEA,OACF,CAEA,GAAIP,wBAAwB,GAAKS,SAAS,EAAIA,SAAS,EAAI,IAAI,CAAE,CAC/DD,UAAU,CAACC,SAAS,CAAC,CACrB,GAAId,QAAQ,CAACoB,EAAE,GAAK,KAAK,CAAE,CAMzBhB,oBAAoB,CAACiB,KAAK,CAACP,SAAS,CAAC,CACvC,CAAC,IAAM,IAAId,QAAQ,CAACoB,EAAE,GAAK,SAAS,CAAE,CACpCjB,wBAAwB,CAACkB,KAAK,CAACP,SAAS,CAAC,CAC3C,CACF,CACF,CAOA,QAASQ,cAAa,CAACR,SAAwB,CAAE,CAC/C,GAAI,MAAOA,UAAS,GAAK,QAAQ,CAAE,CACjC,GAAIJ,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,yFAAyF,CAC1F,CACH,CAEA,OACF,CAEA,GAAIP,wBAAwB,GAAKS,SAAS,EAAIA,SAAS,EAAI,IAAI,CAAE,CAC/DC,SAAS,CAACD,SAAS,CAAC,CACpB,GAAId,QAAQ,CAACoB,EAAE,GAAK,KAAK,CAAE,CAMzBhB,oBAAoB,CAACmB,IAAI,CAACT,SAAS,CAAC,CACtC,CAAC,IAAM,IAAId,QAAQ,CAACoB,EAAE,GAAK,SAAS,CAAE,CACpCjB,wBAAwB,CAACoB,IAAI,CAACT,SAAS,CAAC,CAC1C,CACF,CACF,CAEA,QAASU,cAAa,CAACV,SAAuB,CAAE,CAC9C,GAAI,MAAOA,UAAS,GAAK,QAAQ,CAAE,CACjC,GAAIJ,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,wFAAwF,CACzF,CACH,CAEA,OACF,CAEAN,MAAM,CAACmB,GAAG,CAACX,SAAS,CAAC,CACvB,CAEA,QAASY,gBAAe,CAACZ,SAAuB,CAAE,CAChD,GAAI,MAAOA,UAAS,GAAK,QAAQ,CAAE,CACjC,GAAIJ,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,0FAA0F,CAC3F,CACH,CAEA,OACF,CACAN,MAAM,CAACqB,MAAM,CAACb,SAAS,CAAC,CAC1B,CAEA,QAASc,YAAW,CAACd,SAAuB,CAAW,CACrD,GAAI,MAAOA,UAAS,GAAK,QAAQ,CAAE,CACjC,GAAIJ,OAAO,CAAE,CACXC,OAAO,CAACC,KAAK,CACX,sFAAsF,CACvF,CACH,CAEA,MAAO,MAAK,CACd,CAEA,MAAON,OAAM,CAACuB,GAAG,CAACf,SAAS,CAAC,CAC9B,CAEAgB,MAAM,CAACC,OAAO,CAAG,CACfvB,qBAAqB,CAArBA,qBAAqB,CACrBK,UAAU,CAAVA,UAAU,CACVE,SAAS,CAATA,SAAS,CAETN,qBAAqB,CAArBA,qBAAqB,CACrBO,UAAU,CAAVA,UAAU,CACVE,SAAS,CAATA,SAAS,CACTC,cAAc,CAAdA,cAAc,CACdG,aAAa,CAAbA,aAAa,CACbE,aAAa,CAAbA,aAAa,CACbE,eAAe,CAAfA,eAAe,CACfE,WAAW,CAAXA,WACF,CAAC"},"metadata":{},"sourceType":"module"}