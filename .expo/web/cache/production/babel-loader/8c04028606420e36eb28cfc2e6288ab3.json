{"ast":null,"code":"import{useSlotId as $iD7q0$useSlotId,mergeProps as $iD7q0$mergeProps,useId as $iD7q0$useId,useLabels as $iD7q0$useLabels}from\"@react-aria/utils\";function $d191a55c9702f145$export$8467354a121f1b9f(props){var id=props.id,label=props.label,ariaLabelledby=props['aria-labelledby'],ariaLabel=props['aria-label'],_props$labelElementTy=props.labelElementType,labelElementType=_props$labelElementTy===void 0?'label':_props$labelElementTy;id=$iD7q0$useId(id);var labelId=$iD7q0$useId();var labelProps={};if(label){ariaLabelledby=ariaLabelledby?ariaLabelledby+\" \"+labelId:labelId;labelProps={id:labelId,htmlFor:labelElementType==='label'?id:undefined};}else if(!ariaLabelledby&&!ariaLabel)console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');var fieldProps=$iD7q0$useLabels({id:id,'aria-label':ariaLabel,'aria-labelledby':ariaLabelledby});return{labelProps:labelProps,fieldProps:fieldProps};}function $2baaea4c71418dea$export$294aa081a6c6f55d(props){var description=props.description,errorMessage=props.errorMessage,validationState=props.validationState;var _$d191a55c9702f145$ex=$d191a55c9702f145$export$8467354a121f1b9f(props),labelProps=_$d191a55c9702f145$ex.labelProps,fieldProps=_$d191a55c9702f145$ex.fieldProps;var descriptionId=$iD7q0$useSlotId([Boolean(description),Boolean(errorMessage),validationState]);var errorMessageId=$iD7q0$useSlotId([Boolean(description),Boolean(errorMessage),validationState]);fieldProps=$iD7q0$mergeProps(fieldProps,{'aria-describedby':[descriptionId,errorMessageId,props['aria-describedby']].filter(Boolean).join(' ')||undefined});return{labelProps:labelProps,fieldProps:fieldProps,descriptionProps:{id:descriptionId},errorMessageProps:{id:errorMessageId}};}export{$2baaea4c71418dea$export$294aa081a6c6f55d as useField,$d191a55c9702f145$export$8467354a121f1b9f as useLabel};","map":{"version":3,"sources":["packages/@react-aria/label/src/useField.ts","packages/@react-aria/label/src/useLabel.ts"],"names":[],"mappings":"yJCoCgB,0CAAQ,CAAC,KAAqB,CAAa,CACzD,GACE,GAAE,CAKA,KAAK,CANJ,EAAA,CAEH,KAAK,CAIH,KAAK,CALL,KAAA,CAEiB,cAAc,CAG/B,KAAK,CAHP,iBAAiB,EACH,SAAS,CAErB,KAAK,CAFP,YAAY,wBAEV,KAAK,CAFgB,gBAAA,CACvB,gBAAgB,gCAAG,OAAO,uBAG5B,EAAE,CAAG,YAAK,CAAC,EAAE,CAAA,CACb,GAAI,QAAO,CAAG,YAAK,EAAA,CACnB,GAAI,WAAU,CAAG,CAAC,CAAC,CACnB,GAAI,KAAK,CAAE,CACT,cAAc,CAAG,cAAc,CAAM,cAAc,KAAI,OAAO,CAAK,OAAO,CAC1E,UAAU,CAAG,CACX,EAAE,CAAE,OAAO,CACX,OAAO,CAAE,gBAAgB,GAAK,OAAO,CAAG,EAAE,CAAG,SAC/C,CAAC,CACH,CAAC,IAAM,IAAE,CAAG,cAAc,EAAA,CAAK,SAAS,CACtC,OAAO,CAAC,IAAI,CAAC,sHAAsH,CAAA,CAGrI,GAAI,WAAU,CAAG,gBAAS,CAAC,C,GACzB,EAAE,CACF,YAAY,CAAE,SAAS,CACvB,iBAAiB,CAAE,cACrB,CAAC,CAAA,CAED,MAAO,C,WACL,UAAU,C,WACV,UACF,CAAC,CACH,C,QDtCgB,0CAAQ,CAAC,KAAqB,CAAa,CACzD,GAAK,YAAW,CAAmC,KAAK,CAAnD,WAAA,CAAa,YAAY,CAAqB,KAAK,CAAxC,YAAA,CAAgB,eAAe,CAAI,KAAK,CAA1B,eAAA,CAC9B,0BAA+B,yCAAQ,CAAC,KAAK,CAAA,CAAxC,UAAU,uBAAV,UAAA,CAAY,UAAU,uBAAZ,UAAA,CAEf,GAAI,cAAa,CAAG,gBAAS,CAAC,CAAC,OAAO,CAAC,WAAW,CAAA,CAAG,OAAO,CAAC,YAAY,CAAA,CAAG,eAAe,CAAC,CAAA,CAC5F,GAAI,eAAc,CAAG,gBAAS,CAAC,CAAC,OAAO,CAAC,WAAW,CAAA,CAAG,OAAO,CAAC,YAAY,CAAA,CAAG,eAAe,CAAC,CAAA,CAE7F,UAAU,CAAG,iBAAU,CAAC,UAAU,CAAE,CAClC,kBAAkB,CAAE,CAClB,aAAa,CAEb,cAAc,CACd,KAAK,CAAC,kBAAkB,CAAA,CACzB,CAAC,MAAM,CAAC,OAAO,CAAA,CAAE,IAAI,CAAC,GAAG,CAAA,EAAK,SACjC,CAAC,CAAA,CAED,MAAO,C,WACL,UAAU,C,WACV,UAAU,CACV,gBAAgB,CAAE,CAChB,EAAE,CAAE,aACN,CAAC,CACD,iBAAiB,CAAE,CACjB,EAAE,CAAE,cACN,CACF,CAAC,CACH,C","sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, HelpTextProps, Validation} from '@react-types/shared';\nimport {LabelAria, LabelAriaProps, useLabel} from './useLabel';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\n\nexport interface AriaFieldProps extends LabelAriaProps, HelpTextProps, Omit<Validation, 'isRequired'> {}\n\nexport interface FieldAria extends LabelAria {\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for input fields.\n * Fields accept user input, gain context from their label, and may display a description or error message.\n * @param props - Props for the Field.\n */\nexport function useField(props: AriaFieldProps): FieldAria {\n  let {description, errorMessage, validationState} = props;\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let descriptionId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n  let errorMessageId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n\n  fieldProps = mergeProps(fieldProps, {\n    'aria-describedby': [\n      descriptionId,\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId,\n      props['aria-describedby']\n    ].filter(Boolean).join(' ') || undefined\n  });\n\n  return {\n    labelProps,\n    fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: DOMAttributes | LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}