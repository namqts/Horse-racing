{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"groupProps\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{clamp,mergeProps,useGlobalListeners}from'@react-aria/utils';import{getSliderThumbId,sliderIds}from\"./utils\";import{useRef}from'react';import{setInteractionModality}from'@react-aria/interactions';import{useLabel}from'@react-aria/label';import{mapDomPropsToRN,isRTL}from'@react-native-aria/utils';import{useMove}from\"./useMove\";function useSliderWeb(props,state,trackLayout){var _labelProps$id;var _useLabel=useLabel(props),labelProps=_useLabel.labelProps,fieldProps=_useLabel.fieldProps;var isVertical=props.orientation==='vertical';sliderIds.set(state,(_labelProps$id=labelProps.id)!==null&&_labelProps$id!==void 0?_labelProps$id:fieldProps.id);var direction=isRTL()?'rtl':undefined;var _useGlobalListeners=useGlobalListeners(),addGlobalListener=_useGlobalListeners.addGlobalListener,removeGlobalListener=_useGlobalListeners.removeGlobalListener;var realTimeTrackDraggingIndex=useRef(null);var stateRef=useRef(null);stateRef.current=state;var reverseX=direction==='rtl';var currentPosition=useRef(null);var _useMove=useMove({onMoveStart:function onMoveStart(){currentPosition.current=null;},onMove:function onMove(_ref){var deltaX=_ref.deltaX,deltaY=_ref.deltaY;var size=isVertical?trackLayout.height:trackLayout.width;if(currentPosition.current==null){currentPosition.current=stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current)*size;}var delta=isVertical?deltaY:deltaX;if(isVertical||reverseX){delta=-delta;}currentPosition.current+=delta;if(realTimeTrackDraggingIndex.current!=null){var percent=clamp(currentPosition.current/size,0,1);stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current,percent);}},onMoveEnd:function onMoveEnd(){if(realTimeTrackDraggingIndex.current!=null){stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current,false);realTimeTrackDraggingIndex.current=null;}}}),moveProps=_useMove.moveProps;var currentPointer=useRef(undefined);var onDownTrack=function onDownTrack(e,id,clientX,clientY){if(!props.isDisabled&&state.values.every(function(_,i){return!state.isThumbDragging(i);})){var size=isVertical?trackLayout.height:trackLayout.width;var trackPosition=trackLayout[isVertical?'top':'left'];var clickPosition=isVertical?clientY:clientX;var offset=clickPosition-trackPosition;var percent=offset/size;if(direction==='rtl'||isVertical){percent=1-percent;}var value=state.getPercentValue(percent);var closestThumb;var split=state.values.findIndex(function(v){return value-v<0;});if(split===0){closestThumb=split;}else if(split===-1){closestThumb=state.values.length-1;}else{var lastLeft=state.values[split-1];var firstRight=state.values[split];if(Math.abs(lastLeft-value)<Math.abs(firstRight-value)){closestThumb=split-1;}else{closestThumb=split;}}if(closestThumb>=0&&state.isThumbEditable(closestThumb)){e.preventDefault();realTimeTrackDraggingIndex.current=closestThumb;state.setFocusedThumb(closestThumb);currentPointer.current=id;state.setThumbDragging(realTimeTrackDraggingIndex.current,true);state.setThumbValue(closestThumb,value);addGlobalListener(window,'mouseup',onUpTrack,false);addGlobalListener(window,'touchend',onUpTrack,false);addGlobalListener(window,'pointerup',onUpTrack,false);}else{realTimeTrackDraggingIndex.current=null;}}};var onUpTrack=function onUpTrack(e){var _e$pointerId,_e$changedTouches;var id=(_e$pointerId=e.pointerId)!==null&&_e$pointerId!==void 0?_e$pointerId:(_e$changedTouches=e.changedTouches)===null||_e$changedTouches===void 0?void 0:_e$changedTouches[0].identifier;if(id===currentPointer.current){if(realTimeTrackDraggingIndex.current!=null){state.setThumbDragging(realTimeTrackDraggingIndex.current,false);realTimeTrackDraggingIndex.current=null;}removeGlobalListener(window,'mouseup',onUpTrack,false);removeGlobalListener(window,'touchend',onUpTrack,false);removeGlobalListener(window,'pointerup',onUpTrack,false);}};if(labelProps.htmlFor){delete labelProps.htmlFor;labelProps.onClick=function(){var _document$getElementB;(_document$getElementB=document.getElementById(getSliderThumbId(state,0)))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();setInteractionModality('keyboard');};}return{labelProps:labelProps,groupProps:_objectSpread({role:'group'},fieldProps),trackProps:mergeProps({onMouseDown:function onMouseDown(e){if(e.button!==0||e.altKey||e.ctrlKey||e.metaKey){return;}onDownTrack(e,undefined,e.clientX,e.clientY);},onPointerDown:function onPointerDown(e){if(e.pointerType==='mouse'&&(e.button!==0||e.altKey||e.ctrlKey||e.metaKey)){return;}onDownTrack(e,e.pointerId,e.clientX,e.clientY);},onTouchStart:function onTouchStart(e){onDownTrack(e,e.changedTouches[0].identifier,e.changedTouches[0].clientX,e.changedTouches[0].clientY);}},moveProps),outputProps:{'htmlFor':state.values.map(function(_,index){return getSliderThumbId(state,index);}).join(' '),'aria-live':'off'}};}export var useSlider=function useSlider(props,state,ref){var _useSliderWeb=useSliderWeb(props,state,ref),webGroupProps=_useSliderWeb.groupProps,rest=_objectWithoutProperties(_useSliderWeb,_excluded);var groupProps=mapDomPropsToRN(webGroupProps);var labelProps=mapDomPropsToRN(rest.labelProps);return _objectSpread(_objectSpread({groupProps:groupProps},rest),{},{labelProps:labelProps});};","map":{"version":3,"sources":["useSlider.web.ts"],"names":["clamp","mergeProps","useGlobalListeners","getSliderThumbId","sliderIds","useRef","setInteractionModality","useLabel","mapDomPropsToRN","isRTL","useMove","useSliderWeb","props","state","trackLayout","labelProps","fieldProps","isVertical","orientation","set","id","direction","undefined","addGlobalListener","removeGlobalListener","realTimeTrackDraggingIndex","stateRef","current","reverseX","currentPosition","moveProps","onMoveStart","onMove","deltaX","deltaY","size","height","width","getThumbPercent","delta","percent","setThumbPercent","onMoveEnd","setThumbDragging","currentPointer","onDownTrack","e","clientX","clientY","isDisabled","values","every","_","i","isThumbDragging","trackPosition","clickPosition","offset","value","getPercentValue","closestThumb","split","findIndex","v","length","lastLeft","firstRight","Math","abs","isThumbEditable","preventDefault","setFocusedThumb","setThumbValue","window","onUpTrack","pointerId","changedTouches","identifier","htmlFor","onClick","getElementById","focus","groupProps","role","trackProps","onMouseDown","button","altKey","ctrlKey","metaKey","onPointerDown","pointerType","onTouchStart","outputProps","map","index","join","useSlider","ref","webGroupProps","rest"],"mappings":"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","sourcesContent":["import { AriaSliderProps } from '@react-types/slider';\nimport { clamp, mergeProps, useGlobalListeners } from '@react-aria/utils';\nimport { getSliderThumbId, sliderIds } from './utils';\nimport React, { useRef } from 'react';\nimport { setInteractionModality } from '@react-aria/interactions';\nimport { SliderState } from '@react-stately/slider';\nimport { useLabel } from '@react-aria/label';\nimport { mapDomPropsToRN, isRTL } from '@react-native-aria/utils';\nimport { useMove } from './useMove';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: any;\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: any;\n\n  /** Props for the track element. */\n  trackProps: any;\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: any;\n}\n\nfunction useSliderWeb(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackLayout: {\n    height: number;\n    width: number;\n    top: number;\n    left: number;\n    x: number;\n    y: number;\n  }\n): SliderAria {\n  let { labelProps, fieldProps } = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  const direction = isRTL() ? 'rtl' : undefined;\n\n  let { addGlobalListener, removeGlobalListener } = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = direction === 'rtl';\n  const currentPosition = useRef<number>(null);\n  const { moveProps } = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({ deltaX, deltaY }) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) *\n          size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (isVertical || reverseX) {\n        delta = -delta;\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(\n          realTimeTrackDraggingIndex.current,\n          percent\n        );\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(\n          realTimeTrackDraggingIndex.current,\n          false\n        );\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (\n    e: React.UIEvent,\n    id: number,\n    clientX: number,\n    clientY: number\n  ) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      !props.isDisabled &&\n      state.values.every((_, i) => !state.isThumbDragging(i))\n    ) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n      // Find the closest thumb\n      const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (direction === 'rtl' || isVertical) {\n        percent = 1 - percent;\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex((v) => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  if (labelProps.htmlFor) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps,\n    },\n    trackProps: mergeProps(\n      {\n        onMouseDown(e: React.MouseEvent<HTMLElement>) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e: React.PointerEvent<HTMLElement>) {\n          if (\n            e.pointerType === 'mouse' &&\n            (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n          ) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e: React.TouchEvent<HTMLElement>) {\n          onDownTrack(\n            e,\n            e.changedTouches[0].identifier,\n            e.changedTouches[0].clientX,\n            e.changedTouches[0].clientY\n          );\n        },\n      },\n      moveProps\n    ),\n    outputProps: {\n      'htmlFor': state.values\n        .map((_, index) => getSliderThumbId(state, index))\n        .join(' '),\n      'aria-live': 'off',\n    },\n  };\n}\n\nexport const useSlider = (props: any, state: any, ref: any) => {\n  let { groupProps: webGroupProps, ...rest } = useSliderWeb(props, state, ref);\n  let groupProps = mapDomPropsToRN(webGroupProps);\n  let labelProps = mapDomPropsToRN(rest.labelProps);\n  return { groupProps, ...rest, labelProps };\n};\n"]},"metadata":{},"sourceType":"module"}