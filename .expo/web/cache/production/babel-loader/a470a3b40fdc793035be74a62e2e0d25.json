{"ast":null,"code":"import{useTheme}from\"./useTheme\";import get from'lodash.get';export function useToken(property,token,fallback){var theme=useTheme();if(Array.isArray(token)){var fallbackArr=[];if(fallback){fallbackArr=Array.isArray(fallback)?fallback:[fallback];}return token.map(function(innerToken,index){var _fallbackArr$index;var path=\"\".concat(property,\".\").concat(innerToken);return get(theme,path,(_fallbackArr$index=fallbackArr[index])!==null&&_fallbackArr$index!==void 0?_fallbackArr$index:innerToken);});}var path=\"\".concat(property,\".\").concat(token);return get(theme,path,fallback!==null&&fallback!==void 0?fallback:token);}","map":{"version":3,"sources":["useToken.ts"],"names":["useTheme","get","useToken","property","token","fallback","theme","Array","isArray","fallbackArr","map","innerToken","index","path"],"mappings":"AAAA,OAASA,QAAT,kBACA,MAAOC,IAAP,KAAgB,YAAhB,CAEA,MAAO,SAASC,SAAT,CACLC,QADK,CAELC,KAFK,CAGLC,QAHK,CAIL,CACA,GAAMC,MAAK,CAAGN,QAAQ,EAAtB,CACA,GAAIO,KAAK,CAACC,OAAND,CAAcH,KAAdG,CAAJ,CAA0B,CACxB,GAAIE,YAAgB,CAAG,EAAvB,CACA,GAAIJ,QAAJ,CAAc,CACZI,WAAW,CAAGF,KAAK,CAACC,OAAND,CAAcF,QAAdE,CAAAA,CAA0BF,QAA1BE,CAAqC,CAACF,QAAD,CAAnDI,CACD,CACD,MAAO,MAAK,CAACC,GAAN,CAAU,SAACC,UAAD,CAAaC,KAAb,CAAuB,CAAA,GAAA,mBAAA,CACtC,GAAMC,KAAI,CAAA,EAAA,CAAA,MAAA,CAAMV,QAAN,CAAA,GAAA,CAAA,CAAA,MAAA,CAAkBQ,UAAlB,CAAV,CACA,MAAOV,IAAG,CAACK,KAAD,CAAQO,IAAR,CAAA,CAAA,kBAAA,CAAcJ,WAAW,CAACG,KAAD,CAAzB,IAAA,IAAA,EAAA,kBAAA,GAAA,IAAA,EAAA,CAAA,kBAAA,CAAoCD,UAApC,CAAV,CACD,CAHM,CAAP,CAID,CAED,GAAME,KAAI,CAAA,EAAA,CAAA,MAAA,CAAMV,QAAN,CAAA,GAAA,CAAA,CAAA,MAAA,CAAkBC,KAAlB,CAAV,CACA,MAAOH,IAAG,CAACK,KAAD,CAAQO,IAAR,CAAcR,QAAd,GAAA,IAAA,EAAcA,QAAd,GAAA,IAAA,EAAA,CAAcA,QAAd,CAA0BD,KAA1B,CAAV,CACD","sourcesContent":["import { useTheme } from './useTheme';\nimport get from 'lodash.get';\n\nexport function useToken<T extends string | number>(\n  property: string,\n  token: T | T[],\n  fallback?: T | T[]\n) {\n  const theme = useTheme();\n  if (Array.isArray(token)) {\n    let fallbackArr: T[] = [];\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n    return token.map((innerToken, index) => {\n      const path = `${property}.${innerToken}`;\n      return get(theme, path, fallbackArr[index] ?? innerToken);\n    });\n  }\n\n  const path = `${property}.${token}`;\n  return get(theme, path, fallback ?? token);\n}\n"]},"metadata":{},"sourceType":"module"}