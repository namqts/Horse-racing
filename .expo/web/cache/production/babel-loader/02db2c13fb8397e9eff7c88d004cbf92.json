{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{Platform}from'expo-modules-core';import{getRecoveryPropsToSave}from\"./ErroRecoveryStore\";import ExpoErrorRecovery from\"./ExpoErrorRecovery\";if(Platform.OS!=='web'){var globalHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler(function _callee(error,isFatal){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!ExpoErrorRecovery.saveRecoveryProps){_context.next=3;break;}_context.next=3;return _regeneratorRuntime.awrap(ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave()));case 3:globalHandler(error,isFatal);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);});}else if(Platform.OS==='web'&&Platform.isDOMAvailable){window.addEventListener('error',function(){ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());});}","map":{"version":3,"sources":["../src/ErrorRecovery.fx.ts"],"names":[],"mappings":"4DAAA,OAAS,QAAQ,KAAQ,mBAAmB,CAE5C,OAAS,sBAAsB,2BAC/B,MAAO,kBAAiB,2BAExB,GAAI,QAAQ,CAAC,EAAE,GAAK,KAAK,CAAE,CACzB,GAAM,cAAa,CAAG,UAAU,CAAC,gBAAgB,EAAE,CAGnD,UAAU,CAAC,gBAAgB,CAAC,iBAAO,KAAK,CAAE,OAAO,uHAC3C,iBAAiB,CAAC,iBAAiB,0EAC/B,iBAAiB,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC,SAErE,aAAa,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,qEAC/B,CAAC,C,CACH,IAAM,IAAI,QAAQ,CAAC,EAAE,GAAK,KAAK,EAAI,QAAQ,CAAC,cAAc,CAAE,CAC3D,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAE,UAAK,CACpC,iBAAiB,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC,CAC/D,CAAC,CAAC,CACH","sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}