{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isDisabled\"],_excluded2=[\"handleChange\",\"handleChangeWithoutCheck\",\"numberInputStepper\",\"numberInputValue\",\"isControlled\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{Input}from\"../../primitives/Input\";import{NumberInputContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var NumberInputFiled=function NumberInputFiled(_ref,ref){var isDisabled=_ref.isDisabled,props=_objectWithoutProperties(_ref,_excluded);var _React$useContext=React.useContext(NumberInputContext),handleChange=_React$useContext.handleChange,handleChangeWithoutCheck=_React$useContext.handleChangeWithoutCheck,numberInputStepper=_React$useContext.numberInputStepper,numberInputValue=_React$useContext.numberInputValue,isControlled=_React$useContext.isControlled,context=_objectWithoutProperties(_React$useContext,_excluded2);var changeHandler=function changeHandler(inputValue){var minusIndex=inputValue.indexOf('-');if(minusIndex!==-1&&minusIndex!==0){inputValue=inputValue.replace('-','');inputValue='-'+inputValue;}var value=parseInt(inputValue,10);if(isControlled)handleChange&&handleChange(value);else if(value)handleChangeWithoutCheck&&handleChangeWithoutCheck(value);else handleChangeWithoutCheck&&handleChangeWithoutCheck(0);};var blurHandler=function blurHandler(){if(numberInputValue)handleChange&&handleChange(numberInputValue);};if(useHasResponsiveProps(props)){return null;}return React.createElement(React.Fragment,null,React.createElement(Input,_extends({p:0,pl:2},context,props,{onBlur:function onBlur(){return blurHandler();},isDisabled:isDisabled||context.isDisabled,onChangeText:function onChangeText(inputValue){return changeHandler(inputValue);},keyboardType:\"numeric\",value:\"\".concat(numberInputValue),InputRightElement:numberInputStepper,ref:ref})));};export default React.memo(React.forwardRef(NumberInputFiled));","map":{"version":3,"sources":["NumberInputField.tsx"],"names":["React","Input","NumberInputContext","useHasResponsiveProps","NumberInputFiled","isDisabled","props","ref","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","useContext","changeHandler","inputValue","minusIndex","indexOf","replace","value","parseInt","blurHandler","memo","forwardRef"],"mappings":"ufAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,8BAEA,OAASC,kBAAT,iBACA,OAASC,qBAAT,4CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,MAEpBG,GAFuB,CAGpB,IAFDF,WAAF,MAAEA,UAAF,CAAiBC,KAAAA,0CAGjB,sBAUIN,KAAK,CAACc,UAANd,CAAiBE,kBAAjBF,CAVJ,CACEQ,YADI,mBACJA,YADI,CAEJC,wBAFI,mBAEJA,wBAFI,CAGJC,kBAHI,mBAGJA,kBAHI,CAIJC,gBAJI,mBAIJA,gBAJI,CAKJC,YALI,mBAKJA,YALI,CAMDC,OAAAA,wDAKL,GAAME,cAAa,CAAIC,QAAjBD,cAAa,CAAIC,UAAD,CAAqB,CACzC,GAAIC,WAAU,CAAGD,UAAU,CAACE,OAAXF,CAAmB,GAAnBA,CAAjB,CACA,GAAIC,UAAU,GAAK,CAAC,CAAhBA,EAAqBA,UAAU,GAAK,CAAxC,CAA2C,CACzCD,UAAU,CAAGA,UAAU,CAACG,OAAXH,CAAmB,GAAnBA,CAAwB,EAAxBA,CAAbA,CACAA,UAAU,CAAG,GAAA,CAAMA,UAAnBA,CACD,CACD,GAAMI,MAAK,CAAGC,QAAQ,CAACL,UAAD,CAAa,EAAb,CAAtB,CACA,GAAIJ,YAAJ,CAAkBJ,YAAY,EAAIA,YAAY,CAACY,KAAD,CAA5BZ,CAAlB,IACK,IAAIY,KAAJ,CAAWX,wBAAwB,EAAIA,wBAAwB,CAACW,KAAD,CAApDX,CAAX,IACAA,yBAAwB,EAAIA,wBAAwB,CAAC,CAAD,CAApDA,CACN,CAVD,CAWA,GAAMa,YAAW,CAAG,QAAdA,YAAW,EAAS,CACxB,GAAIX,gBAAJ,CAAsBH,YAAY,EAAIA,YAAY,CAACG,gBAAD,CAA5BH,CACvB,CAzBE,CA2BH,GAAIL,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,MAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CACE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,CAAA,CACE,CAAC,CAAE,CADL,CAEE,EAAE,CAAE,CAFN,CAAA,CAGMO,OAHN,CAIMP,KAJN,CAAA,CAKE,MAAM,CAAE,wBAAMgB,YAAW,EAL3B,GAME,UAAU,CAAEjB,UAAU,EAAIQ,OAAO,CAACR,UANpC,CAOE,YAAY,CAAGW,sBAAAA,UAAD,QAAqBD,cAAa,CAACC,UAAD,CAPlD,GAQE,YAAY,CAAC,SARf,CASE,KAAK,CAAA,EAAA,CAAA,MAAA,CAAKL,gBAAL,CATP,CAUE,iBAAiB,CAAED,kBAVrB,CAWE,GAAG,CAAEH,GAXP,CAAA,CAAA,CADF,CADF,CAiBD,CAlDD,CAoDA,cAAeP,MAAK,CAACuB,IAANvB,CAAWA,KAAK,CAACwB,UAANxB,CAAiBI,gBAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      <Input\n        p={0}\n        pl={2}\n        {...context}\n        {...props}\n        onBlur={() => blurHandler()}\n        isDisabled={isDisabled || context.isDisabled}\n        onChangeText={(inputValue: any) => changeHandler(inputValue)}\n        keyboardType=\"numeric\"\n        value={`${numberInputValue}`}\n        InputRightElement={numberInputStepper}\n        ref={ref}\n      />\n    </>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"]},"metadata":{},"sourceType":"module"}