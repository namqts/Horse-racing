{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends2 from\"@babel/runtime/helpers/extends\";var _excluded=[\"label\",\"icon\",\"renderInPortal\",\"placement\",\"placementProps\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Button}from\"../../primitives/Button\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{OverlayContainer}from'@react-native-aria/overlays';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{extractInObject}from\"../../../theme/tools/utils\";var Fab=function Fab(_ref,ref){var props=_extends2({},_ref);var _extractInObject=extractInObject(props,['variant','_pressed','_hover','_text','_focus','_stack','_loading','_disabled','_spinner']),_extractInObject2=_slicedToArray(_extractInObject,2),buttonProps=_extractInObject2[0],remainingProps=_extractInObject2[1];var themeProps=usePropsResolution('FAB',remainingProps);var label=themeProps.label,icon=themeProps.icon,renderInPortal=themeProps.renderInPortal,placement=themeProps.placement,placementProps=themeProps.placementProps,newProps=_objectWithoutProperties(themeProps,_excluded);var fabComponent=React.createElement(Button,_extends({},buttonProps,placementProps[placement],{ref:ref,startIcon:icon},newProps),label);if(useHasResponsiveProps(props)){return null;}return renderInPortal?React.createElement(OverlayContainer,null,fabComponent):fabComponent;};export default memo(forwardRef(Fab));","map":{"version":3,"sources":["Fab.tsx"],"names":["React","memo","forwardRef","Button","usePropsResolution","OverlayContainer","useHasResponsiveProps","extractInObject","Fab","props","ref","buttonProps","remainingProps","themeProps","label","icon","renderInPortal","placement","placementProps","newProps","fabComponent"],"mappings":"gjBAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,OAASC,MAAT,+BAEA,OAASC,kBAAT,oCACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,OAASC,qBAAT,4CACA,OAASC,eAAT,kCAEA,GAAMC,IAAG,CAAG,QAANA,IAAG,MAA6BE,GAA1B,CAAuC,IAAjCD,MAAAA,oBAEhB,qBAAsCF,eAAe,CAACE,KAAD,CAAQ,CAC3D,SAD2D,CAE3D,UAF2D,CAG3D,QAH2D,CAI3D,OAJ2D,CAK3D,QAL2D,CAM3D,QAN2D,CAO3D,UAP2D,CAQ3D,WAR2D,CAS3D,UAT2D,CAAR,CAArD,sDAAOE,WAAD,sBAAcC,cAAd,sBAWN,GAAMC,WAAU,CAAGT,kBAAkB,CAAC,KAAD,CAAQQ,cAAR,CAArC,CAEA,GACEE,MADI,CAOFD,UAPJ,CACEC,KADI,CAEJC,IAFI,CAOFF,UAPJ,CAEEE,IAFI,CAGJC,cAHI,CAOFH,UAPJ,CAGEG,cAHI,CAIJC,SAJI,CAOFJ,UAPJ,CAIEI,SAJI,CAKJC,cALI,CAOFL,UAPJ,CAKEK,cALI,CAMDC,QAAAA,0BACDN,UAPJ,YASA,GAAMO,aAAY,CAChB,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMT,WADN,CAEMO,cAAc,CAACD,SAAD,CAFpB,CAAA,CAGE,GAAG,CAAEP,GAHP,CAIE,SAAS,CAAEK,IAJb,CAAA,CAKMI,QALN,CAAA,CAOGL,KAPH,CAzB+C,CAoCjD,GAAIR,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MAAOO,eAAc,CACnB,KAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,IAAA,CAAmBI,YAAnB,CADmB,CAGnBA,YAHF,CAKD,CA7CD,CA+CA,cAAenB,KAAI,CAACC,UAAU,CAACM,GAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IFabProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject } from '../../../theme/tools/utils';\n\nconst Fab = ({ ...props }: IFabProps, ref: any) => {\n  /** Extracting Button Specific Props */\n  const [buttonProps, remainingProps] = extractInObject(props, [\n    'variant',\n    '_pressed',\n    '_hover',\n    '_text',\n    '_focus',\n    '_stack',\n    '_loading',\n    '_disabled',\n    '_spinner',\n  ]);\n  const themeProps = usePropsResolution('FAB', remainingProps);\n\n  const {\n    label,\n    icon,\n    renderInPortal,\n    placement,\n    placementProps,\n    ...newProps\n  } = themeProps;\n\n  const fabComponent = (\n    <Button\n      {...buttonProps}\n      {...placementProps[placement]}\n      ref={ref}\n      startIcon={icon}\n      {...newProps}\n    >\n      {label}\n    </Button>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? (\n    <OverlayContainer>{fabComponent}</OverlayContainer>\n  ) : (\n    fabComponent\n  );\n};\n\nexport default memo(forwardRef(Fab));\n"]},"metadata":{},"sourceType":"module"}