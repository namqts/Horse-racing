{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"isDisabled\"],_excluded2=[\"numberInputValue\",\"step\",\"max\",\"handleChange\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{NBStepper}from\"./NumberInputStepper\";import{NumberInputContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var NumberIncrementStepper=function NumberIncrementStepper(_ref,ref){var children=_ref.children,pIsDisabled=_ref.isDisabled,props=_objectWithoutProperties(_ref,_excluded);var _React$useContext=React.useContext(NumberInputContext),_React$useContext$num=_React$useContext.numberInputValue,numberInputValue=_React$useContext$num===void 0?0:_React$useContext$num,_React$useContext$ste=_React$useContext.step,step=_React$useContext$ste===void 0?1:_React$useContext$ste,_React$useContext$max=_React$useContext.max,max=_React$useContext$max===void 0?+Infinity:_React$useContext$max,handleChange=_React$useContext.handleChange,context=_objectWithoutProperties(_React$useContext,_excluded2);var isDisabled=pIsDisabled||context.isDisabled;var pressHandler=function pressHandler(){handleChange&&handleChange(numberInputValue+step);};if(useHasResponsiveProps(props)){return null;}return React.createElement(NBStepper,_extends({isIncrement:true,isDisabled:isDisabled,pressHandler:pressHandler,disablitityCheck:numberInputValue+step>max},props,{ref:ref}),children);};export default React.memo(React.forwardRef(NumberIncrementStepper));","map":{"version":3,"sources":["NumberIncrementStepper.tsx"],"names":["React","NBStepper","NumberInputContext","useHasResponsiveProps","NumberIncrementStepper","children","isDisabled","pIsDisabled","props","ref","numberInputValue","step","max","Infinity","handleChange","context","useContext","pressHandler","memo","forwardRef"],"mappings":"gdAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,OAASC,SAAT,4BACA,OAASC,kBAAT,iBACA,OAASC,qBAAT,4CAEA,GAAMC,uBAAsB,CAAG,QAAzBA,uBAAsB,MAE1BK,GAF6B,CAG1B,IAFDJ,SAAF,MAAEA,QAAF,CAAwBE,WAAxB,MAAYD,UAAU,CAAkBE,KAAAA,0CAGxC,sBAMyBR,KAAK,CAACgB,UAANhB,CAAiBE,kBAAjBF,CANzB,yCACEU,gBAAgB,CAAhBA,gBAAgB,gCAAG,CADf,+DAEJC,IAAI,CAAJA,IAAI,gCAAG,CAFH,+DAGJC,GAAG,CAAHA,GAAG,gCAAG,CAACC,QAHH,uBAIJC,YAJI,mBAIJA,YAJI,CAKDC,OAAAA,wDAGL,GAAMT,WAAU,CAAGC,WAAW,EAAIQ,OAAO,CAACT,UAA1C,CACA,GAAMW,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzBH,YAAY,EAAIA,YAAY,CAACJ,gBAAgB,CAAGC,IAApB,CAA5BG,CACD,CAZE,CAcH,GAAIX,qBAAqB,CAACK,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,MAAA,CAAA,aAAA,CAAC,SAAD,CAAA,QAAA,CAAA,CACE,WAAW,CAAA,IADb,CAEE,UAAU,CAAEF,UAFd,CAGE,YAAY,CAAEW,YAHhB,CAIE,gBAAgB,CAAEP,gBAAgB,CAAGC,IAAnBD,CAA0BE,GAJ9C,CAAA,CAKMJ,KALN,CAAA,CAME,GAAG,CAAEC,GANP,CAAA,CAAA,CAQGJ,QARH,CADF,CAYD,CAhCD,CAiCA,cAAeL,MAAK,CAACkB,IAANlB,CAAWA,KAAK,CAACmB,UAANnB,CAAiBI,sBAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport type { INumberInputContext, INumberInputStepperProps } from './types';\nimport { NBStepper } from './NumberInputStepper';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberIncrementStepper = (\n  { children, isDisabled: pIsDisabled, ...props }: INumberInputStepperProps,\n  ref?: any\n) => {\n  const {\n    numberInputValue = 0,\n    step = 1,\n    max = +Infinity,\n    handleChange,\n    ...context\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  const isDisabled = pIsDisabled || context.isDisabled;\n  const pressHandler = () => {\n    handleChange && handleChange(numberInputValue + step);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <NBStepper\n      isIncrement\n      isDisabled={isDisabled}\n      pressHandler={pressHandler}\n      disablitityCheck={numberInputValue + step > max}\n      {...props}\n      ref={ref}\n    >\n      {children}\n    </NBStepper>\n  );\n};\nexport default React.memo(React.forwardRef(NumberIncrementStepper));\n"]},"metadata":{},"sourceType":"module"}