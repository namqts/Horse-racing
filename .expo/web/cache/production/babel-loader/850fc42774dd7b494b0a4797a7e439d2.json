{"ast":null,"code":"import{MessageDictionary,MessageFormatter}from'@internationalized/message';import{useCallback,useMemo}from'react';import{useLocale}from\"../\";var cache=new WeakMap();function getCachedDictionary(strings){var dictionary=cache.get(strings);if(!dictionary){dictionary=new MessageDictionary(strings);cache.set(strings,dictionary);}return dictionary;}export function useMessageFormatter(strings){var _useLocale=useLocale(),locale=_useLocale.locale;var dictionary=useMemo(function(){return getCachedDictionary(strings);},[strings]);var formatter=useMemo(function(){return new MessageFormatter(locale,dictionary);},[locale,dictionary]);return useCallback(function(key,variables){return formatter.format(key,variables);},[formatter]);}","map":{"version":3,"names":["MessageDictionary","MessageFormatter","useCallback","useMemo","useLocale","cache","WeakMap","getCachedDictionary","strings","dictionary","get","set","useMessageFormatter","locale","formatter","key","variables","format"],"sources":["D:/Horse-racing/node_modules/@react-aria/i18n/dist/useMessageFormatter.module.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { MessageDictionary, MessageFormatter } from '@internationalized/message';\nimport { useCallback, useMemo } from 'react';\nimport { useLocale } from '../';\nconst cache = new WeakMap();\n\nfunction getCachedDictionary(strings) {\n  let dictionary = cache.get(strings);\n\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n * @deprecated - use useLocalizedStringFormatter instead.\n */\n\n\nexport function useMessageFormatter(strings) {\n  let {\n    locale\n  } = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  let formatter = useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n"],"mappings":"AAWA,OAASA,iBAAiB,CAAEC,gBAAgB,KAAQ,4BAA4B,CAChF,OAASC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CAC5C,OAASC,SAAS,WAClB,GAAMC,MAAK,CAAG,GAAIC,QAAO,EAAE,CAE3B,QAASC,oBAAmB,CAACC,OAAO,CAAE,CACpC,GAAIC,WAAU,CAAGJ,KAAK,CAACK,GAAG,CAACF,OAAO,CAAC,CAEnC,GAAI,CAACC,UAAU,CAAE,CACfA,UAAU,CAAG,GAAIT,kBAAiB,CAACQ,OAAO,CAAC,CAC3CH,KAAK,CAACM,GAAG,CAACH,OAAO,CAAEC,UAAU,CAAC,CAChC,CAEA,MAAOA,WAAU,CACnB,CASA,MAAO,SAASG,oBAAmB,CAACJ,OAAO,CAAE,CAC3C,eAEIJ,SAAS,EAAE,CADbS,MAAM,YAANA,MAAM,CAER,GAAIJ,WAAU,CAAGN,OAAO,CAAC,iBAAMI,oBAAmB,CAACC,OAAO,CAAC,GAAE,CAACA,OAAO,CAAC,CAAC,CACvE,GAAIM,UAAS,CAAGX,OAAO,CAAC,iBAAM,IAAIF,iBAAgB,CAACY,MAAM,CAAEJ,UAAU,CAAC,GAAE,CAACI,MAAM,CAAEJ,UAAU,CAAC,CAAC,CAC7F,MAAOP,YAAW,CAAC,SAACa,GAAG,CAAEC,SAAS,QAAKF,UAAS,CAACG,MAAM,CAACF,GAAG,CAAEC,SAAS,CAAC,GAAE,CAACF,SAAS,CAAC,CAAC,CACvF"},"metadata":{},"sourceType":"module"}