{"ast":null,"code":"'use strict';var Buffer=require('safe-buffer').Buffer;var Transform=require('readable-stream').Transform;var inherits=require('inherits');function throwIfNotStringOrBuffer(val,prefix){if(!Buffer.isBuffer(val)&&typeof val!=='string'){throw new TypeError(prefix+' must be a string or a buffer');}}function HashBase(blockSize){Transform.call(this);this._block=Buffer.allocUnsafe(blockSize);this._blockSize=blockSize;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false;}inherits(HashBase,Transform);HashBase.prototype._transform=function(chunk,encoding,callback){var error=null;try{this.update(chunk,encoding);}catch(err){error=err;}callback(error);};HashBase.prototype._flush=function(callback){var error=null;try{this.push(this.digest());}catch(err){error=err;}callback(error);};HashBase.prototype.update=function(data,encoding){throwIfNotStringOrBuffer(data,'Data');if(this._finalized)throw new Error('Digest already called');if(!Buffer.isBuffer(data))data=Buffer.from(data,encoding);var block=this._block;var offset=0;while(this._blockOffset+data.length-offset>=this._blockSize){for(var i=this._blockOffset;i<this._blockSize;){block[i++]=data[offset++];}this._update();this._blockOffset=0;}while(offset<data.length){block[this._blockOffset++]=data[offset++];}for(var j=0,carry=data.length*8;carry>0;++j){this._length[j]+=carry;carry=this._length[j]/0x0100000000|0;if(carry>0)this._length[j]-=0x0100000000*carry;}return this;};HashBase.prototype._update=function(){throw new Error('_update is not implemented');};HashBase.prototype.digest=function(encoding){if(this._finalized)throw new Error('Digest already called');this._finalized=true;var digest=this._digest();if(encoding!==undefined)digest=digest.toString(encoding);this._block.fill(0);this._blockOffset=0;for(var i=0;i<4;++i){this._length[i]=0;}return digest;};HashBase.prototype._digest=function(){throw new Error('_digest is not implemented');};module.exports=HashBase;","map":{"version":3,"names":["Buffer","require","Transform","inherits","throwIfNotStringOrBuffer","val","prefix","isBuffer","TypeError","HashBase","blockSize","call","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","prototype","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","data","Error","from","block","offset","length","i","_update","j","carry","_digest","undefined","toString","fill","module","exports"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/hash-base/index.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}