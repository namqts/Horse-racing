{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"trigger\",\"closeOnSelect\",\"children\",\"onOpen\",\"onClose\",\"isOpen\",\"defaultIsOpen\",\"placement\"],_excluded2=[\"_overlay\",\"_presenceTransition\",\"_backdrop\",\"useRNModal\"],_excluded3=[\"menuRef\",\"children\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{Popper}from\"../Popper\";import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{useControllableState}from\"../../../hooks\";import{useMenuTrigger,useMenu,useMenuTypeahead}from\"./useMenu\";import Backdrop from\"../Backdrop\";import{PresenceTransition}from\"../Transitions\";import{FocusScope}from'@react-native-aria/focus';import{MenuContext}from\"./MenuContext\";import{Overlay}from\"../../primitives/Overlay\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Menu=function Menu(_ref,ref){var trigger=_ref.trigger,_ref$closeOnSelect=_ref.closeOnSelect,closeOnSelect=_ref$closeOnSelect===void 0?true:_ref$closeOnSelect,children=_ref.children,onOpen=_ref.onOpen,onClose=_ref.onClose,isOpenProp=_ref.isOpen,defaultIsOpen=_ref.defaultIsOpen,_ref$placement=_ref.placement,placement=_ref$placement===void 0?'bottom left':_ref$placement,props=_objectWithoutProperties(_ref,_excluded);var triggerRef=React.useRef(null);var _useControllableState=useControllableState({value:isOpenProp,defaultValue:defaultIsOpen,onChange:function onChange(value){value?onOpen&&onOpen():onClose&&onClose();}}),_useControllableState2=_slicedToArray(_useControllableState,2),isOpen=_useControllableState2[0],setIsOpen=_useControllableState2[1];var _usePropsResolution=usePropsResolution('Menu',props),_overlay=_usePropsResolution._overlay,_presenceTransition=_usePropsResolution._presenceTransition,_backdrop=_usePropsResolution._backdrop,useRNModal=_usePropsResolution.useRNModal,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var handleOpen=React.useCallback(function(){setIsOpen(true);},[setIsOpen]);var handleClose=React.useCallback(function(){setIsOpen(false);},[setIsOpen]);var triggerProps=useMenuTrigger({handleOpen:handleOpen,isOpen:isOpen});var updatedTrigger=function updatedTrigger(){return trigger(_objectSpread(_objectSpread({},triggerProps),{},{ref:triggerRef,onPress:handleOpen}),{open:isOpen});};React.useEffect(function(){if(isOpen){AccessibilityInfo.announceForAccessibility('Popup window');}},[isOpen]);if(useHasResponsiveProps(resolvedProps)){return null;}return React.createElement(React.Fragment,null,updatedTrigger(),React.createElement(Overlay,_extends({isOpen:isOpen,onRequestClose:handleClose,useRNModalOnAndroid:true,useRNModal:useRNModal},_overlay,{unmountOnExit:true}),React.createElement(PresenceTransition,_extends({visible:isOpen},_presenceTransition),React.createElement(Popper,_extends({triggerRef:triggerRef,onClose:handleClose,placement:placement},resolvedProps),React.createElement(Backdrop,_extends({onPress:handleClose},_backdrop)),React.createElement(Popper.Content,{isOpen:isOpen},React.createElement(MenuContext.Provider,{value:{closeOnSelect:closeOnSelect,onClose:handleClose}},React.createElement(FocusScope,{contain:true,restoreFocus:true,autoFocus:true},React.createElement(MenuContent,_extends({menuRef:ref},resolvedProps),children))))))));};var MenuContent=function MenuContent(_ref2){var menuRef=_ref2.menuRef,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded3);var menuProps=useMenu();var typeaheadProps=useMenuTypeahead(menuProps);return React.createElement(Box,_extends({},props,menuProps,typeaheadProps,{ref:menuRef}),React.createElement(ScrollView,null,children));};export default memo(forwardRef(Menu));","map":{"version":3,"sources":["Menu.tsx"],"names":["React","memo","forwardRef","Box","usePropsResolution","Popper","useControllableState","useMenuTrigger","useMenu","useMenuTypeahead","Backdrop","PresenceTransition","FocusScope","MenuContext","Overlay","useHasResponsiveProps","Menu","trigger","closeOnSelect","children","onOpen","onClose","isOpen","isOpenProp","defaultIsOpen","placement","props","ref","triggerRef","useRef","setIsOpen","value","defaultValue","onChange","_overlay","_presenceTransition","_backdrop","useRNModal","resolvedProps","handleOpen","useCallback","handleClose","triggerProps","updatedTrigger","onPress","open","useEffect","AccessibilityInfo","announceForAccessibility","MenuContent","menuRef","menuProps","typeaheadProps"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IMenuProps } from './types';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Popper } from '../Popper';\nimport { AccessibilityInfo, ScrollView } from 'react-native';\nimport { useControllableState } from '../../../hooks';\nimport { useMenuTrigger, useMenu, useMenuTypeahead } from './useMenu';\nimport Backdrop from '../Backdrop';\nimport { PresenceTransition } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { MenuContext } from './MenuContext';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Menu = (\n  {\n    trigger,\n    closeOnSelect = true,\n    children,\n    onOpen,\n    onClose,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    placement = 'bottom left',\n    ...props\n  }: IMenuProps,\n  ref?: any\n) => {\n  const triggerRef = React.useRef(null);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const {\n    _overlay,\n    _presenceTransition,\n    _backdrop,\n    useRNModal,\n    ...resolvedProps\n  } = usePropsResolution('Menu', props);\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const handleClose = React.useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const triggerProps = useMenuTrigger({\n    handleOpen,\n    isOpen,\n  });\n\n  const updatedTrigger = () => {\n    return trigger(\n      {\n        ...triggerProps,\n        ref: triggerRef,\n        onPress: handleOpen,\n      },\n      { open: isOpen }\n    );\n  };\n\n  React.useEffect(() => {\n    if (isOpen) {\n      AccessibilityInfo.announceForAccessibility('Popup window');\n    }\n  }, [isOpen]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  return (\n    <>\n      {updatedTrigger()}\n      <Overlay\n        isOpen={isOpen}\n        onRequestClose={handleClose}\n        useRNModalOnAndroid\n        useRNModal={useRNModal}\n        {..._overlay}\n        unmountOnExit\n      >\n        <PresenceTransition visible={isOpen} {..._presenceTransition}>\n          <Popper\n            triggerRef={triggerRef}\n            onClose={handleClose}\n            placement={placement}\n            {...resolvedProps}\n          >\n            <Backdrop onPress={handleClose} {..._backdrop} />\n            <Popper.Content isOpen={isOpen}>\n              <MenuContext.Provider\n                value={{ closeOnSelect, onClose: handleClose }}\n              >\n                <FocusScope contain restoreFocus autoFocus>\n                  <MenuContent menuRef={ref} {...resolvedProps}>\n                    {children}\n                  </MenuContent>\n                </FocusScope>\n              </MenuContext.Provider>\n            </Popper.Content>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </>\n  );\n};\n\nconst MenuContent = ({\n  menuRef,\n  children,\n  ...props\n}: Omit<IMenuProps, 'trigger'> & { menuRef: any }) => {\n  const menuProps = useMenu();\n  const typeaheadProps = useMenuTypeahead(menuProps);\n\n  return (\n    <Box {...props} {...menuProps} {...typeaheadProps} ref={menuRef}>\n      <ScrollView>{children}</ScrollView>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Menu));\n"]},"metadata":{},"sourceType":"module"}