{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from'react';export function useControllableProp(prop,state){var _React$useRef=React.useRef(prop!==undefined),isControlled=_React$useRef.current;var value=isControlled&&typeof prop!=='undefined'?prop:state;return[isControlled,value];}export function useControllableState(props){var valueProp=props.value,defaultValue=props.defaultValue,onChange=props.onChange;var _React$useState=React.useState(defaultValue),_React$useState2=_slicedToArray(_React$useState,2),valueState=_React$useState2[0],setValue=_React$useState2[1];var isControlled=valueProp!==undefined;var value=isControlled?valueProp:valueState;var updateValue=React.useCallback(function(next){var nextValue=typeof next==='function'?next(value):next;if(!isControlled){setValue(nextValue);}onChange&&onChange(nextValue);},[isControlled,onChange,value]);return[value,updateValue];}","map":{"version":3,"sources":["useControllableProp.ts"],"names":["React","useControllableProp","prop","state","current","isControlled","useRef","undefined","value","useControllableState","props","valueProp","defaultValue","onChange","valueState","setValue","useState","updateValue","useCallback","next","nextValue"],"mappings":"iEAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,MAAO,SAASC,oBAAT,CAAgCC,IAAhC,CAAqDC,KAArD,CAA+D,CACpE,kBAAkCH,KAAK,CAACM,MAANN,CAAaE,IAAI,GAAKK,SAAtBP,CAAlC,CAAiBK,YAAAA,eAATD,OAAO,CACf,GAAMI,MAAK,CAAGH,YAAY,EAAI,MAAOH,KAAP,GAAgB,WAAhCG,CAA8CH,IAA9CG,CAAqDF,KAAnE,CACA,MAAO,CAACE,YAAD,CAAeG,KAAf,CAAP,CACD,CAyBD,MAAO,SAASC,qBAAT,CAAiCC,KAAjC,CAAsE,CAC3E,GAAeC,UAAT,CAA+CD,KAArD,CAAQF,KAAK,CAAaI,YAApB,CAA+CF,KAArD,CAA0BE,YAApB,CAAkCC,QAAAA,CAAaH,KAArD,CAAwCG,QAAAA,CAExC,oBAA+Bb,KAAK,CAACgB,QAANhB,CAAeY,YAAfZ,CAA/B,oDAAOc,UAAD,qBAAaC,QAAb,qBACN,GAAMV,aAAY,CAAGM,SAAS,GAAKJ,SAAnC,CAEA,GAAMC,MAAK,CAAGH,YAAY,CAAIM,SAAJ,CAAsBG,UAAhD,CAEA,GAAMG,YAAW,CAAG,KAAK,CAACC,WAAN,CACjBC,SAAAA,IAAD,CAAe,CACb,GAAMC,UAAS,CAAG,MAAOD,KAAP,GAAgB,UAAhB,CAA6BA,IAAI,CAACX,KAAD,CAAjC,CAA2CW,IAA7D,CACA,GAAI,CAACd,YAAL,CAAmB,CACjBU,QAAQ,CAACK,SAAD,CAARL,CACD,CACDF,QAAQ,EAAIA,QAAQ,CAACO,SAAD,CAApBP,CACD,CAPiB,CAQlB,CAACR,YAAD,CAAeQ,QAAf,CAAyBL,KAAzB,CARkB,CAApB,CAWA,MAAO,CAACA,KAAD,CAAQS,WAAR,CAAP,CACD","sourcesContent":["import React from 'react';\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const { current: isControlled } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value] as const;\n}\n\nexport interface UseControllableStateProps<T> {\n  /**\n   * The value to used in controlled mode\n   */\n  value?: T;\n  /**\n   * The initial value to be used, in uncontrolled mode\n   */\n  defaultValue?: T | (() => T);\n  /**\n   * The callback fired when the value changes\n   */\n  onChange?: (value: T) => void;\n  /**\n   * The component name (for warnings)\n   */\n  name?: string;\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const { value: valueProp, defaultValue, onChange } = props;\n\n  const [valueState, setValue] = React.useState(defaultValue as T);\n  const isControlled = valueProp !== undefined;\n\n  const value = isControlled ? (valueProp as T) : valueState;\n\n  const updateValue = React.useCallback(\n    (next: any) => {\n      const nextValue = typeof next === 'function' ? next(value) : next;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChange && onChange(nextValue);\n    },\n    [isControlled, onChange, value]\n  );\n\n  return [value, updateValue] as [T, React.Dispatch<React.SetStateAction<T>>];\n}\n"]},"metadata":{},"sourceType":"module"}