{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{usePropsResolution}from\"../../../hooks\";import React,{useContext,memo,forwardRef,useEffect}from'react';import{default as Box}from\"../../primitives/Box\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PopoverBody=function PopoverBody(props,ref){var resolvedProps=usePropsResolution('PopoverBody',props);var _useContext=useContext(PopoverContext),setBodyMounted=_useContext.setBodyMounted,bodyId=_useContext.bodyId;useEffect(function(){setBodyMounted(true);return function(){setBodyMounted(false);};},[setBodyMounted]);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({nativeID:bodyId},resolvedProps,{ref:ref}));};export default memo(forwardRef(PopoverBody));","map":{"version":3,"sources":["PopoverBody.tsx"],"names":["usePropsResolution","React","useContext","memo","forwardRef","useEffect","default","Box","PopoverContext","useHasResponsiveProps","PopoverBody","props","ref","resolvedProps","setBodyMounted","bodyId"],"mappings":"uRAAA,OAASA,kBAAT,sBACA,MAAOC,MAAP,EAAgBC,UAAhB,CAA4BC,IAA5B,CAAkCC,UAAlC,CAA8CC,SAA9C,KAA+D,OAA/D,CACA,OAASC,OAAO,GAAIC,IAApB,4BACA,OAASC,cAAT,wBACA,OAASC,qBAAT,4CAEA,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAD,CAAmBC,GAAnB,CAAiC,CACnD,GAAMC,cAAa,CAAGb,kBAAkB,CAAC,aAAD,CAAgBW,KAAhB,CAAxC,CACA,gBAAmCT,UAAU,CAACM,cAAD,CAA7C,CAAQM,cAAF,aAAEA,cAAF,CAAkBC,MAAAA,aAAAA,MAAAA,CAExBV,SAAS,CAAC,UAAM,CACdS,cAAc,CAAC,IAAD,CAAdA,CACA,MAAO,WAAM,CACXA,cAAc,CAAC,KAAD,CAAdA,CACD,CAFD,CAGD,CALQ,CAKN,CAACA,cAAD,CALM,CAJ0C,CAYnD,GAAIL,qBAAqB,CAACE,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,MAAA,CAAA,aAAA,CAAC,GAAD,CAAA,QAAA,CAAA,CAAK,QAAQ,CAAEI,MAAf,CAAA,CAA2BF,aAA3B,CAAA,CAA0C,GAAG,CAAED,GAA/C,CAAA,CAAA,CAAP,CACD,CAhBD,CAkBA,cAAeT,KAAI,CAACC,UAAU,CAACM,WAAD,CAAX,CAAnB","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]},"metadata":{},"sourceType":"module"}