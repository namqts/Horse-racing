{"ast":null,"code":"'use strict';var invariant=require('invariant');var customBubblingEventTypes={};var customDirectEventTypes={};exports.customBubblingEventTypes=customBubblingEventTypes;exports.customDirectEventTypes=customDirectEventTypes;var viewConfigCallbacks=new Map();var viewConfigs=new Map();function processEventTypes(viewConfig){var bubblingEventTypes=viewConfig.bubblingEventTypes,directEventTypes=viewConfig.directEventTypes;if(__DEV__){if(bubblingEventTypes!=null&&directEventTypes!=null){for(var topLevelType in directEventTypes){invariant(bubblingEventTypes[topLevelType]==null,'Event cannot be both direct and bubbling: %s',topLevelType);}}}if(bubblingEventTypes!=null){for(var _topLevelType in bubblingEventTypes){if(customBubblingEventTypes[_topLevelType]==null){customBubblingEventTypes[_topLevelType]=bubblingEventTypes[_topLevelType];}}}if(directEventTypes!=null){for(var _topLevelType2 in directEventTypes){if(customDirectEventTypes[_topLevelType2]==null){customDirectEventTypes[_topLevelType2]=directEventTypes[_topLevelType2];}}}}exports.register=function(name,callback){invariant(!viewConfigCallbacks.has(name),'Tried to register two views with the same name %s',name);invariant(typeof callback==='function','View config getter callback for component `%s` must be a function (received `%s`)',name,callback===null?'null':typeof callback);viewConfigCallbacks.set(name,callback);return name;};exports.get=function(name){var viewConfig;if(!viewConfigs.has(name)){var callback=viewConfigCallbacks.get(name);if(typeof callback!=='function'){invariant(false,'View config getter callback for component `%s` must be a function (received `%s`).%s',name,callback===null?'null':typeof callback,typeof name[0]==='string'&&/[a-z]/.test(name[0])?' Make sure to start component names with a capital letter.':'');}viewConfig=callback();processEventTypes(viewConfig);viewConfigs.set(name,viewConfig);viewConfigCallbacks.set(name,null);}else{viewConfig=viewConfigs.get(name);}invariant(viewConfig,'View config not found for name %s',name);return viewConfig;};","map":{"version":3,"names":["invariant","require","customBubblingEventTypes","customDirectEventTypes","exports","viewConfigCallbacks","Map","viewConfigs","processEventTypes","viewConfig","bubblingEventTypes","directEventTypes","__DEV__","topLevelType","register","name","callback","has","set","get","test"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/* eslint-disable react-internal/invariant-args */\n\n'use strict';\n\nimport type {\n  ReactNativeBaseComponentViewConfig,\n  ViewConfigGetter,\n} from './ReactNativeTypes';\n\nconst invariant = require('invariant');\n\n// Event configs\nconst customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    phasedRegistrationNames: $ReadOnly<{|\n      captured: string,\n      bubbled: string,\n    |}>,\n  |}>,\n  ...,\n} = {};\nconst customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    registrationName: string,\n  |}>,\n  ...,\n} = {};\n\nexports.customBubblingEventTypes = customBubblingEventTypes;\nexports.customDirectEventTypes = customDirectEventTypes;\n\nconst viewConfigCallbacks = new Map();\nconst viewConfigs = new Map();\n\nfunction processEventTypes(\n  viewConfig: ReactNativeBaseComponentViewConfig<>,\n): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexports.register = function(name: string, callback: ViewConfigGetter): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n};\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexports.get = function(name: string): ReactNativeBaseComponentViewConfig<> {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}