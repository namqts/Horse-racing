{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import{default as Box}from\"../../primitives/Box\";import{CheckIcon}from\"../../primitives/Icon/Icons\";var SizedIcon=function SizedIcon(_ref){var icon=_ref.icon,_icon=_ref._icon,isChecked=_ref.isChecked;return isChecked?icon?React.cloneElement(icon,_objectSpread({},_icon)):React.createElement(CheckIcon,_icon):React.createElement(Box,_icon);};export default SizedIcon;","map":{"version":3,"sources":["SizedIcon.tsx"],"names":["React","default","Box","CheckIcon","SizedIcon","icon","_icon","isChecked","cloneElement"],"mappings":"w0BAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,OAAO,GAAIC,IAApB,4BACA,OAASC,SAAT,mCAEA,GAAMC,UAAS,CAAG,QAAZA,UAAS,MAQT,IAPJC,KADiB,MACjBA,IADiB,CAEjBC,KAFiB,MAEjBA,KAFiB,CAGjBC,SAAAA,MAAAA,SAAAA,CAMA,MAAOA,UAAS,CACdF,IAAI,CACF,KAAK,CAACG,YAAN,CAAmBH,IAAnB,kBACKC,KAAAA,EAFH,CAKF,KAAA,CAAA,aAAA,CAAC,SAAD,CAAeA,KAAf,CANY,CASd,KAAA,CAAA,aAAA,CAAC,GAAD,CAASA,KAAT,CATF,CAWD,CApBD,CAsBA,cAAeF,UAAf","sourcesContent":["import React from 'react';\nimport { default as Box } from '../../primitives/Box';\nimport { CheckIcon } from '../../primitives/Icon/Icons';\n\nconst SizedIcon = ({\n  icon,\n  _icon,\n  isChecked,\n}: {\n  icon: JSX.Element;\n  _icon: any;\n  isChecked: boolean;\n}) => {\n  return isChecked ? (\n    icon ? (\n      React.cloneElement(icon, {\n        ..._icon,\n      })\n    ) : (\n      <CheckIcon {..._icon} />\n    )\n  ) : (\n    <Box {..._icon} />\n  );\n};\n\nexport default SizedIcon;\n"]},"metadata":{},"sourceType":"module"}