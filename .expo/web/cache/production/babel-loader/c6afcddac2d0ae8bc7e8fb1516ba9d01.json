{"ast":null,"code":"var xor=require('buffer-xor');function getBlock(self){self._prev=self._cipher.encryptBlock(self._prev);return self._prev;}exports.encrypt=function(self,chunk){while(self._cache.length<chunk.length){self._cache=Buffer.concat([self._cache,getBlock(self)]);}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad);};","map":{"version":3,"names":["xor","require","getBlock","self","_prev","_cipher","encryptBlock","exports","encrypt","chunk","_cache","length","Buffer","concat","pad","slice"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/browserify-aes/modes/ofb.js"],"sourcesContent":["var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n"],"mappings":"AAAA,GAAIA,IAAG,CAAGC,OAAO,CAAC,YAAY,CAAC,CAE/B,QAASC,SAAQ,CAAEC,IAAI,CAAE,CACvBA,IAAI,CAACC,KAAK,CAAGD,IAAI,CAACE,OAAO,CAACC,YAAY,CAACH,IAAI,CAACC,KAAK,CAAC,CAClD,MAAOD,KAAI,CAACC,KAAK,CACnB,CAEAG,OAAO,CAACC,OAAO,CAAG,SAAUL,IAAI,CAAEM,KAAK,CAAE,CACvC,MAAON,IAAI,CAACO,MAAM,CAACC,MAAM,CAAGF,KAAK,CAACE,MAAM,CAAE,CACxCR,IAAI,CAACO,MAAM,CAAGE,MAAM,CAACC,MAAM,CAAC,CAACV,IAAI,CAACO,MAAM,CAAER,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC5D,CAEA,GAAIW,IAAG,CAAGX,IAAI,CAACO,MAAM,CAACK,KAAK,CAAC,CAAC,CAAEN,KAAK,CAACE,MAAM,CAAC,CAC5CR,IAAI,CAACO,MAAM,CAAGP,IAAI,CAACO,MAAM,CAACK,KAAK,CAACN,KAAK,CAACE,MAAM,CAAC,CAC7C,MAAOX,IAAG,CAACS,KAAK,CAAEK,GAAG,CAAC,CACxB,CAAC"},"metadata":{},"sourceType":"script"}