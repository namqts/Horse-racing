{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{useRef as $Qsto2$useRef,useState as $Qsto2$useState,useMemo as $Qsto2$useMemo,useEffect as $Qsto2$useEffect}from\"react\";import{useControlledState as $Qsto2$useControlledState}from\"@react-stately/utils\";var $e40ea825a81a3709$export$52baac22726c72bf=function(_Set){_inherits($e40ea825a81a3709$export$52baac22726c72bf,_Set);var _super=_createSuper($e40ea825a81a3709$export$52baac22726c72bf);function $e40ea825a81a3709$export$52baac22726c72bf(keys,anchorKey,currentKey){var _this;_classCallCheck(this,$e40ea825a81a3709$export$52baac22726c72bf);_this=_super.call(this,keys);if(keys instanceof $e40ea825a81a3709$export$52baac22726c72bf){_this.anchorKey=anchorKey||keys.anchorKey;_this.currentKey=currentKey||keys.currentKey;}else{_this.anchorKey=anchorKey;_this.currentKey=currentKey;}return _this;}return _createClass($e40ea825a81a3709$export$52baac22726c72bf);}(_wrapNativeSuper(Set));function $7af3f5b51489e0b5$var$equalSets(setA,setB){if(setA.size!==setB.size)return false;for(var _iterator=_createForOfIteratorHelperLoose(setA),_step;!(_step=_iterator()).done;){var item=_step.value;if(!setB.has(item))return false;}return true;}function $7af3f5b51489e0b5$export$253fe78d46329472(props){var _props$selectionMode=props.selectionMode,selectionMode=_props$selectionMode===void 0?'none':_props$selectionMode,disallowEmptySelection=props.disallowEmptySelection,allowDuplicateSelectionEvents=props.allowDuplicateSelectionEvents,_props$selectionBehav=props.selectionBehavior,selectionBehaviorProp=_props$selectionBehav===void 0?'toggle':_props$selectionBehav,_props$disabledBehavi=props.disabledBehavior,disabledBehavior=_props$disabledBehavi===void 0?'all':_props$disabledBehavi;var isFocusedRef=$Qsto2$useRef(false);var _$Qsto2$useState=$Qsto2$useState(false),_$Qsto2$useState2=_slicedToArray(_$Qsto2$useState,2),_setFocused=_$Qsto2$useState2[1];var focusedKeyRef=$Qsto2$useRef(null);var childFocusStrategyRef=$Qsto2$useRef(null);var _$Qsto2$useState3=$Qsto2$useState(null),_$Qsto2$useState4=_slicedToArray(_$Qsto2$useState3,2),_setFocusedKey=_$Qsto2$useState4[1];var selectedKeysProp=$Qsto2$useMemo(function(){return $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys);},[props.selectedKeys]);var defaultSelectedKeys=$Qsto2$useMemo(function(){return $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys,new $e40ea825a81a3709$export$52baac22726c72bf());},[props.defaultSelectedKeys]);var _$Qsto2$useControlled=$Qsto2$useControlledState(selectedKeysProp,defaultSelectedKeys,props.onSelectionChange),_$Qsto2$useControlled2=_slicedToArray(_$Qsto2$useControlled,2),selectedKeys=_$Qsto2$useControlled2[0],_setSelectedKeys=_$Qsto2$useControlled2[1];var disabledKeysProp=$Qsto2$useMemo(function(){return props.disabledKeys?new Set(props.disabledKeys):new Set();},[props.disabledKeys]);var _$Qsto2$useState5=$Qsto2$useState(selectionBehaviorProp),_$Qsto2$useState6=_slicedToArray(_$Qsto2$useState5,2),selectionBehavior=_$Qsto2$useState6[0],setSelectionBehavior=_$Qsto2$useState6[1];if(selectionBehaviorProp==='replace'&&selectionBehavior==='toggle'&&typeof selectedKeys==='object'&&selectedKeys.size===0)setSelectionBehavior('replace');var lastSelectionBehavior=$Qsto2$useRef(selectionBehaviorProp);$Qsto2$useEffect(function(){if(selectionBehaviorProp!==lastSelectionBehavior.current){setSelectionBehavior(selectionBehaviorProp);lastSelectionBehavior.current=selectionBehaviorProp;}},[selectionBehaviorProp]);return{selectionMode:selectionMode,disallowEmptySelection:disallowEmptySelection,selectionBehavior:selectionBehavior,setSelectionBehavior:setSelectionBehavior,get isFocused(){return isFocusedRef.current;},setFocused:function setFocused(f){isFocusedRef.current=f;_setFocused(f);},get focusedKey(){return focusedKeyRef.current;},get childFocusStrategy(){return childFocusStrategyRef.current;},setFocusedKey:function setFocusedKey(k){var childFocusStrategy=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'first';focusedKeyRef.current=k;childFocusStrategyRef.current=childFocusStrategy;_setFocusedKey(k);},selectedKeys:selectedKeys,setSelectedKeys:function setSelectedKeys(keys){if(allowDuplicateSelectionEvents||!$7af3f5b51489e0b5$var$equalSets(keys,selectedKeys))_setSelectedKeys(keys);},disabledKeys:disabledKeysProp,disabledBehavior:disabledBehavior};}function $7af3f5b51489e0b5$var$convertSelection(selection,defaultValue){if(!selection)return defaultValue;return selection==='all'?'all':new $e40ea825a81a3709$export$52baac22726c72bf(selection);}var $d496c0a20b6e58ec$export$6c8a5aaad13c9852=function(){function $d496c0a20b6e58ec$export$6c8a5aaad13c9852(collection,state,options){_classCallCheck(this,$d496c0a20b6e58ec$export$6c8a5aaad13c9852);this.collection=collection;this.state=state;var ref;this.allowsCellSelection=(ref=options===null||options===void 0?void 0:options.allowsCellSelection)!==null&&ref!==void 0?ref:false;this._isSelectAll=null;}_createClass($d496c0a20b6e58ec$export$6c8a5aaad13c9852,[{key:\"selectionMode\",get:function get(){return this.state.selectionMode;}},{key:\"disallowEmptySelection\",get:function get(){return this.state.disallowEmptySelection;}},{key:\"selectionBehavior\",get:function get(){return this.state.selectionBehavior;}},{key:\"setSelectionBehavior\",value:function setSelectionBehavior(selectionBehavior){this.state.setSelectionBehavior(selectionBehavior);}},{key:\"isFocused\",get:function get(){return this.state.isFocused;}},{key:\"setFocused\",value:function setFocused(isFocused){this.state.setFocused(isFocused);}},{key:\"focusedKey\",get:function get(){return this.state.focusedKey;}},{key:\"childFocusStrategy\",get:function get(){return this.state.childFocusStrategy;}},{key:\"setFocusedKey\",value:function setFocusedKey(key,childFocusStrategy){if(key==null||this.collection.getItem(key))this.state.setFocusedKey(key,childFocusStrategy);}},{key:\"selectedKeys\",get:function get(){return this.state.selectedKeys==='all'?new Set(this.getSelectAllKeys()):this.state.selectedKeys;}},{key:\"rawSelection\",get:function get(){return this.state.selectedKeys;}},{key:\"isSelected\",value:function isSelected(key){if(this.state.selectionMode==='none')return false;key=this.getKey(key);return this.state.selectedKeys==='all'?this.canSelectItem(key):this.state.selectedKeys.has(key);}},{key:\"isEmpty\",get:function get(){return this.state.selectedKeys!=='all'&&this.state.selectedKeys.size===0;}},{key:\"isSelectAll\",get:function get(){if(this.isEmpty)return false;if(this.state.selectedKeys==='all')return true;if(this._isSelectAll!=null)return this._isSelectAll;var allKeys=this.getSelectAllKeys();var selectedKeys=this.state.selectedKeys;this._isSelectAll=allKeys.every(function(k){return selectedKeys.has(k);});return this._isSelectAll;}},{key:\"firstSelectedKey\",get:function get(){var first=null;for(var _iterator2=_createForOfIteratorHelperLoose(this.state.selectedKeys),_step2;!(_step2=_iterator2()).done;){var key=_step2.value;var item=this.collection.getItem(key);if(!first||(item===null||item===void 0?void 0:item.index)<first.index)first=item;}return first===null||first===void 0?void 0:first.key;}},{key:\"lastSelectedKey\",get:function get(){var last=null;for(var _iterator3=_createForOfIteratorHelperLoose(this.state.selectedKeys),_step3;!(_step3=_iterator3()).done;){var key=_step3.value;var item=this.collection.getItem(key);if(!last||(item===null||item===void 0?void 0:item.index)>last.index)last=item;}return last===null||last===void 0?void 0:last.key;}},{key:\"disabledKeys\",get:function get(){return this.state.disabledKeys;}},{key:\"disabledBehavior\",get:function get(){return this.state.disabledBehavior;}},{key:\"extendSelection\",value:function extendSelection(toKey){if(this.selectionMode==='none')return;if(this.selectionMode==='single'){this.replaceSelection(toKey);return;}toKey=this.getKey(toKey);var selection;if(this.state.selectedKeys==='all')selection=new $e40ea825a81a3709$export$52baac22726c72bf([toKey],toKey,toKey);else{var selectedKeys=this.state.selectedKeys;var anchorKey=selectedKeys.anchorKey||toKey;selection=new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys,anchorKey,toKey);for(var _iterator4=_createForOfIteratorHelperLoose(this.getKeyRange(anchorKey,selectedKeys.currentKey||toKey)),_step4;!(_step4=_iterator4()).done;){var key=_step4.value;selection.delete(key);}for(var _iterator5=_createForOfIteratorHelperLoose(this.getKeyRange(toKey,anchorKey)),_step5;!(_step5=_iterator5()).done;){var key1=_step5.value;if(this.canSelectItem(key1))selection.add(key1);}}this.state.setSelectedKeys(selection);}},{key:\"getKeyRange\",value:function getKeyRange(from,to){var fromItem=this.collection.getItem(from);var toItem=this.collection.getItem(to);if(fromItem&&toItem){if(fromItem.index<=toItem.index)return this.getKeyRangeInternal(from,to);return this.getKeyRangeInternal(to,from);}return[];}},{key:\"getKeyRangeInternal\",value:function getKeyRangeInternal(from,to){var keys=[];var key=from;while(key){var item=this.collection.getItem(key);if(item&&item.type==='item'||item.type==='cell'&&this.allowsCellSelection)keys.push(key);if(key===to)return keys;key=this.collection.getKeyAfter(key);}return[];}},{key:\"getKey\",value:function getKey(key){var item=this.collection.getItem(key);if(!item)return key;if(item.type==='cell'&&this.allowsCellSelection)return key;while(item.type!=='item'&&item.parentKey!=null){item=this.collection.getItem(item.parentKey);}if(!item||item.type!=='item')return null;return item.key;}},{key:\"toggleSelection\",value:function toggleSelection(key){if(this.selectionMode==='none')return;if(this.selectionMode==='single'&&!this.isSelected(key)){this.replaceSelection(key);return;}key=this.getKey(key);if(key==null)return;var keys=new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys==='all'?this.getSelectAllKeys():this.state.selectedKeys);if(keys.has(key))keys.delete(key);else if(this.canSelectItem(key)){keys.add(key);keys.anchorKey=key;keys.currentKey=key;}if(this.disallowEmptySelection&&keys.size===0)return;this.state.setSelectedKeys(keys);}},{key:\"replaceSelection\",value:function replaceSelection(key){if(this.selectionMode==='none')return;key=this.getKey(key);if(key==null)return;var selection=this.canSelectItem(key)?new $e40ea825a81a3709$export$52baac22726c72bf([key],key,key):new $e40ea825a81a3709$export$52baac22726c72bf();this.state.setSelectedKeys(selection);}},{key:\"setSelectedKeys\",value:function setSelectedKeys(keys){if(this.selectionMode==='none')return;var selection=new $e40ea825a81a3709$export$52baac22726c72bf();for(var _iterator6=_createForOfIteratorHelperLoose(keys),_step6;!(_step6=_iterator6()).done;){var key=_step6.value;key=this.getKey(key);if(key!=null){selection.add(key);if(this.selectionMode==='single')break;}}this.state.setSelectedKeys(selection);}},{key:\"getSelectAllKeys\",value:function getSelectAllKeys(){var _this2=this;var keys=[];var addKeys=function addKeys(key){while(key){if(_this2.canSelectItem(key)){var item=_this2.collection.getItem(key);if(item.type==='item')keys.push(key);if(item.hasChildNodes&&(_this2.allowsCellSelection||item.type!=='item'))addKeys(_toConsumableArray(item.childNodes)[0].key);}key=_this2.collection.getKeyAfter(key);}};addKeys(this.collection.getFirstKey());return keys;}},{key:\"selectAll\",value:function selectAll(){if(this.selectionMode==='multiple')this.state.setSelectedKeys('all');}},{key:\"clearSelection\",value:function clearSelection(){if(!this.disallowEmptySelection&&(this.state.selectedKeys==='all'||this.state.selectedKeys.size>0))this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());}},{key:\"toggleSelectAll\",value:function toggleSelectAll(){if(this.isSelectAll)this.clearSelection();else this.selectAll();}},{key:\"select\",value:function select(key,e){if(this.selectionMode==='none')return;if(this.selectionMode==='single'){if(this.isSelected(key)&&!this.disallowEmptySelection)this.toggleSelection(key);else this.replaceSelection(key);}else if(this.selectionBehavior==='toggle'||e&&(e.pointerType==='touch'||e.pointerType==='virtual'))this.toggleSelection(key);else this.replaceSelection(key);}},{key:\"isSelectionEqual\",value:function isSelectionEqual(selection){if(selection===this.state.selectedKeys)return true;var selectedKeys=this.selectedKeys;if(selection.size!==selectedKeys.size)return false;for(var _iterator7=_createForOfIteratorHelperLoose(selection),_step7;!(_step7=_iterator7()).done;){var key=_step7.value;if(!selectedKeys.has(key))return false;}for(var _iterator8=_createForOfIteratorHelperLoose(selectedKeys),_step8;!(_step8=_iterator8()).done;){var key2=_step8.value;if(!selection.has(key2))return false;}return true;}},{key:\"canSelectItem\",value:function canSelectItem(key){if(this.state.selectionMode==='none'||this.state.disabledKeys.has(key))return false;var item=this.collection.getItem(key);if(!item||item.type==='cell'&&!this.allowsCellSelection)return false;return true;}},{key:\"isDisabled\",value:function isDisabled(key){return this.state.disabledKeys.has(key)&&this.state.disabledBehavior==='all';}}]);return $d496c0a20b6e58ec$export$6c8a5aaad13c9852;}();export{$7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState,$d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager};","map":{"version":3,"sources":["packages/@react-stately/selection/src/useMultipleSelectionState.ts","packages/@react-stately/selection/src/Selection.ts","packages/@react-stately/selection/src/SelectionManager.ts"],"names":[],"mappings":"m9ECkBa,0CAAS,6I,mDAIR,IAAgC,CAAE,SAAe,CAAE,UAAgB,CAAE,2EAC/E,uBAAM,IAAI,EACV,GAAI,IAAI,WAAY,0CAAS,CAAE,CAC7B,MAAK,SAAS,CAAG,SAAS,EAAI,IAAI,CAAC,SAAS,CAC5C,MAAK,UAAU,CAAG,UAAU,EAAI,IAAI,CAAC,UAAU,CACjD,CAAC,IAAM,CACL,MAAK,SAAS,CAAG,SAAS,CAC1B,MAAK,UAAU,CAAG,UAAU,CAC9B,CAAC,aACH,CAAC,kFAb4B,GAAG,G,QDAzB,gCAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAC7B,GAAI,IAAI,CAAC,IAAI,GAAK,IAAI,CAAC,IAAI,CACzB,MAAO,MAAK,CAGd,kDAAiB,IAAI,mCAAE,IAAd,KAAI,aACX,GAAE,CAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAA,CAChB,MAAO,MAAK,CAEhB,CAEA,MAAO,KAAI,CACb,C,QAcgB,0CAAyB,CAAC,KAAkC,CAA0B,CACpG,yBAMI,KAAK,CANJ,aAAA,CACH,aAAa,+BAAG,MAAM,sBACtB,sBAAsB,CAIpB,KAAK,CALe,sBAAA,CAEtB,6BAA6B,CAG3B,KAAK,CAJe,6BAAA,uBAIpB,KAAK,CAFP,iBAAiB,CAAE,qBAAqB,gCAAG,QAAQ,6CAEjD,KAAK,CAF4C,gBAAA,CACnD,gBAAgB,gCAAG,KAAK,uBAK1B,GAAI,aAAY,CAAG,aAAM,CAAC,KAAK,CAAA,CAC/B,qBAAqB,eAAQ,CAAC,KAAK,CAAA,sDAA5B,WAAU,sBACjB,GAAI,cAAa,CAAG,aAAM,CAAC,IAAI,CAAA,CAC/B,GAAI,sBAAqB,CAAG,aAAM,CAAC,IAAI,CAAA,CACvC,sBAAwB,eAAQ,CAAC,IAAI,CAAA,uDAA9B,cAAa,sBACpB,GAAI,iBAAgB,CAAG,cAAO,CAAA,iBAAO,uCAAgB,CAAC,KAAK,CAAC,YAAY,CAAA,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA,CAC/F,GAAI,oBAAmB,CAAG,cAAO,CAAA,iBAAO,uCAAgB,CAAC,KAAK,CAAC,mBAAmB,CAAE,GAAI,0CAAS,EAAA,CAAA,GAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAA,CACjI,0BAAsC,yBAAkB,CACtD,gBAAgB,CAChB,mBAAmB,CACnB,KAAK,CAAC,iBAAiB,CAAA,gEAHpB,YAAY,2BAAE,gBAAe,2BAKlC,GAAI,iBAAgB,CAAG,cAAO,CAAA,iBAC5B,MAAK,CAAC,YAAY,CAAG,GAAI,IAAG,CAAC,KAAK,CAAC,YAAY,CAAA,CAAI,GAAI,IAAG,EAAA,GAC1D,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA,CACtB,sBAAgD,eAAQ,CAAC,qBAAqB,CAAA,uDAAzE,iBAAiB,sBAAE,oBAAoB,sBAI5C,GAAI,qBAAqB,GAAK,SAAS,EAAI,iBAAiB,GAAK,QAAQ,EAAI,MAAO,aAAY,GAAK,QAAQ,EAAI,YAAY,CAAC,IAAI,GAAK,CAAC,CACtI,oBAAoB,CAAC,SAAS,CAAA,CAIhC,GAAI,sBAAqB,CAAG,aAAM,CAAC,qBAAqB,CAAA,CACxD,gBAAS,CAAA,UAAO,CACd,GAAI,qBAAqB,GAAK,qBAAqB,CAAC,OAAO,CAAE,CAC3D,oBAAoB,CAAC,qBAAqB,CAAA,CAC1C,qBAAqB,CAAC,OAAO,CAAG,qBAAqB,CACvD,CACF,CAAC,CAAE,CAAC,qBAAqB,CAAC,CAAA,CAE1B,MAAO,C,cACL,aAAa,C,uBACb,sBAAsB,C,kBACtB,iBAAiB,C,qBACjB,oBAAoB,C,GAChB,UAAS,EAAG,CACd,MAAO,aAAY,CAAC,OAAO,CAC7B,CAAC,CACD,UAAU,qBAAC,CAAC,CAAE,CACZ,YAAY,CAAC,OAAO,CAAG,CAAC,CACxB,WAAU,CAAC,CAAC,CAAA,CACd,CAAC,C,GACG,WAAU,EAAG,CACf,MAAO,cAAa,CAAC,OAAO,CAC9B,CAAC,C,GACG,mBAAkB,EAAG,CACvB,MAAO,sBAAqB,CAAC,OAAO,CACtC,CAAC,CACD,aAAa,wBAAC,CAAC,CAAgC,IAA9B,mBAAkB,2DAAG,OAAO,CAC3C,aAAa,CAAC,OAAO,CAAG,CAAC,CACzB,qBAAqB,CAAC,OAAO,CAAG,kBAAkB,CAClD,cAAa,CAAC,CAAC,CAAA,CACjB,CAAC,C,aACD,YAAY,CACZ,eAAe,0BAAC,IAAI,CAAE,CACpB,GAAI,6BAA6B,EAAA,CAAK,+BAAS,CAAC,IAAI,CAAE,YAAY,CAAA,CAChE,gBAAe,CAAC,IAAI,CAAA,CAExB,CAAC,CACD,YAAY,CAAE,gBAAgB,C,iBAC9B,gBACF,CAAC,CACH,C,QAES,uCAAgB,CAAC,SAAgC,CAAE,YAAwB,CAAqB,CACvG,GAAE,CAAG,SAAS,CACZ,MAAO,aAAY,CAGrB,MAAO,UAAS,GAAK,KAAK,CACtB,KAAK,CACL,GAAI,0CAAS,CAAC,SAAS,CAAA,CAC7B,CAAC,GE/FY,0CAAgB,Y,mDAMf,UAAqC,CAAE,KAA6B,CAAE,OAAiC,CAAE,iEACnH,IAAI,CAAC,UAAU,CAAG,UAAU,CAC5B,IAAI,CAAC,KAAK,CAAG,KAAK,C,GACS,IAA4B,CAAvD,IAAI,CAAC,mBAAmB,CAAA,CAAG,GAA4B,CAA5B,OAAO,GAAA,IAAA,EAAP,OAAO,GAAP,IAAA,EAA4B,CAA5B,IAAA,EAA4B,CAA5B,OAAO,CAAE,mBAAmB,IAAA,IAAA,EAA5B,GAA4B,GAAA,IAAA,EAAA,CAA5B,GAA4B,CAAI,KAAK,CAChE,IAAI,CAAC,YAAY,CAAG,IAAI,CAC1B,CAAC,iFAIE,cACgC,CACjC,MAAO,KAAI,CAAC,KAAK,CAAC,aAAa,CACjC,CAAC,oCAIE,cACmC,CACpC,MAAO,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAC1C,CAAC,+BAIE,cACwC,CACzC,MAAO,KAAI,CAAC,KAAK,CAAC,iBAAiB,CACrC,CAAC,oCAKD,8BAAqB,iBAAoC,CAAE,CACzD,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,iBAAiB,CAAA,CACnD,CAAC,uBAIE,cACsB,CACvB,MAAO,KAAI,CAAC,KAAK,CAAC,SAAS,CAC7B,CAAC,0BAKD,oBAAW,SAAkB,CAAE,CAC7B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAA,CACjC,CAAC,wBAIE,cACmB,CACpB,MAAO,KAAI,CAAC,KAAK,CAAC,UAAU,CAC9B,CAAC,gCAE8E,cACvC,CACtC,MAAO,KAAI,CAAC,KAAK,CAAC,kBAAkB,CACtC,CAAC,6BAKD,uBAAc,GAAQ,CAAE,kBAAkC,CAAE,CAC1D,GAAI,GAAG,EAAI,IAAI,EAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CAC5C,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAE,kBAAkB,CAAA,CAEpD,CAAC,0BAIE,cAC0B,CAC3B,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,CACpC,GAAI,IAAG,CAAC,IAAI,CAAC,gBAAgB,EAAA,CAAA,CAC7B,IAAI,CAAC,KAAK,CAAC,YAAY,CAC7B,CAAC,0BAKE,cAC4B,CAC7B,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,CAChC,CAAC,0BAKD,oBAAW,GAAQ,CAAE,CACnB,GAAI,IAAI,CAAC,KAAK,CAAC,aAAa,GAAK,MAAM,CACrC,MAAO,MAAK,CAGd,GAAG,CAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAA,CACrB,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,CACpC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAA,CACtB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAA,CACrC,CAAC,qBAIE,cACoB,CACrB,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,EAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,GAAK,CAAC,CAChF,CAAC,yBAIE,cACwB,CACzB,GAAI,IAAI,CAAC,OAAO,CACd,MAAO,MAAK,CAGd,GAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,CACnC,MAAO,KAAI,CAGb,GAAI,IAAI,CAAC,YAAY,EAAI,IAAI,CAC3B,MAAO,KAAI,CAAC,YAAY,CAG1B,GAAI,QAAO,CAAG,IAAI,CAAC,gBAAgB,EAAA,CACnC,GAAI,aAAY,CAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAC1C,IAAI,CAAC,YAAY,CAAG,OAAO,CAAC,KAAK,CAAA,SAAC,CAAC,QAAI,aAAY,CAAC,GAAG,CAAC,CAAC,CAAA,G,CACzD,MAAO,KAAI,CAAC,YAAY,CAC1B,CAAC,8BAEG,cAA+B,CACjC,GAAI,MAAK,CAAyB,IAAI,CACtC,mDAAgB,IAAI,CAAC,KAAK,CAAC,YAAY,sCAAE,IAAhC,IAAG,cACV,GAAI,KAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAE,CAAG,KAAK,EAAA,CAAI,IAAI,GAAA,IAAA,EAAJ,IAAI,GAAJ,IAAA,EAAW,CAAX,IAAA,EAAW,CAAX,IAAI,CAAE,KAAK,EAAG,KAAK,CAAC,KAAK,CACrC,KAAK,CAAG,IAAI,CAEhB,CAEA,MAAO,MAAK,GAAA,IAAA,EAAL,KAAK,GAAL,IAAA,EAAU,CAAV,IAAA,EAAU,CAAV,KAAK,CAAE,GAAG,CACnB,CAAC,6BAEG,cAA8B,CAChC,GAAI,KAAI,CAAyB,IAAI,CACrC,mDAAgB,IAAI,CAAC,KAAK,CAAC,YAAY,sCAAE,IAAhC,IAAG,cACV,GAAI,KAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAE,CAAG,IAAI,EAAA,CAAI,IAAI,GAAA,IAAA,EAAJ,IAAI,GAAJ,IAAA,EAAW,CAAX,IAAA,EAAW,CAAX,IAAI,CAAE,KAAK,EAAG,IAAI,CAAC,KAAK,CACnC,IAAI,CAAG,IAAI,CAEf,CAEA,MAAO,KAAI,GAAA,IAAA,EAAJ,IAAI,GAAJ,IAAA,EAAS,CAAT,IAAA,EAAS,CAAT,IAAI,CAAE,GAAG,CAClB,CAAC,0BAEG,cAAyB,CAC3B,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,CAChC,CAAC,8BAEG,cAAqC,CACvC,MAAO,KAAI,CAAC,KAAK,CAAC,gBAAgB,CACpC,CAAC,+BAKD,yBAAgB,KAAU,CAAE,CAC1B,GAAI,IAAI,CAAC,aAAa,GAAK,MAAM,CAC/B,OAGF,GAAI,IAAI,CAAC,aAAa,GAAK,QAAQ,CAAE,CACnC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAA,CAC3B,OACF,CAEA,KAAK,CAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAA,CAEzB,GAAI,UAAS,CAGb,GAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,CACnC,SAAS,CAAG,GAAI,0CAAS,CAAC,CAAC,KAAK,CAAC,CAAE,KAAK,CAAE,KAAK,CAAA,CAAA,IAC1C,CACL,GAAI,aAAY,CAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAC1C,GAAI,UAAS,CAAG,YAAY,CAAC,SAAS,EAAI,KAAK,CAC/C,SAAS,CAAG,GAAI,0CAAS,CAAC,YAAY,CAAE,SAAS,CAAE,KAAK,CAAA,CACxD,mDAAgB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,YAAY,CAAC,UAAU,EAAI,KAAK,CAAA,0CAAnE,IAAG,cACV,SAAS,CAAC,MAAM,CAAC,GAAG,CAAA,CAAA,CAGtB,mDAAgB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE,SAAS,CAAA,0CAAxC,KAAG,cACV,GAAI,IAAI,CAAC,aAAa,CAAC,IAAG,CAAA,CACxB,SAAS,CAAC,GAAG,CAAC,IAAG,CAAA,CAAA,CAGvB,CAEA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAA,CACtC,CAAC,2BAEO,qBAAY,IAAS,CAAE,EAAO,CAAE,CACtC,GAAI,SAAQ,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAA,CAC3C,GAAI,OAAM,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAA,CACvC,GAAI,QAAQ,EAAI,MAAM,CAAE,CACtB,GAAI,QAAQ,CAAC,KAAK,EAAI,MAAM,CAAC,KAAK,CAChC,MAAO,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAE,EAAE,CAAA,CAG1C,MAAO,KAAI,CAAC,mBAAmB,CAAC,EAAE,CAAE,IAAI,CAAA,CAC1C,CAEA,MAAO,EAAE,CACX,CAAC,mCAEO,6BAAoB,IAAS,CAAE,EAAO,CAAE,CAC9C,GAAI,KAAI,CAAU,EAAE,CACpB,GAAI,IAAG,CAAG,IAAI,C,MACP,GAAG,CAAE,CACV,GAAI,KAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAI,IAAI,EAAI,IAAI,CAAC,IAAI,GAAK,MAAM,EAAK,IAAI,CAAC,IAAI,GAAK,MAAM,EAAI,IAAI,CAAC,mBAAmB,CACnF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA,CAGf,GAAI,GAAG,GAAK,EAAE,CACZ,MAAO,KAAI,CAGb,GAAG,CAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAA,CACvC,CAEA,MAAO,EAAE,CACX,CAAC,sBAEO,gBAAO,GAAQ,CAAE,CACvB,GAAI,KAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAE,CAAG,IAAI,CAEP,MAAO,IAAG,CAIZ,GAAI,IAAI,CAAC,IAAI,GAAK,MAAM,EAAI,IAAI,CAAC,mBAAmB,CAClD,MAAO,IAAG,C,MAIL,IAAI,CAAC,IAAI,GAAK,MAAM,EAAI,IAAI,CAAC,SAAS,EAAI,IAAI,EACnD,IAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAA,CAAA,CAG/C,GAAE,CAAG,IAAI,EAAI,IAAI,CAAC,IAAI,GAAK,MAAM,CAC/B,MAAO,KAAI,CAGb,MAAO,KAAI,CAAC,GAAG,CACjB,CAAC,+BAKD,yBAAgB,GAAQ,CAAE,CACxB,GAAI,IAAI,CAAC,aAAa,GAAK,MAAM,CAC/B,OAGF,GAAI,IAAI,CAAC,aAAa,GAAK,QAAQ,EAAA,CAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAA,CAAG,CAC5D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAA,CACzB,OACF,CAEA,GAAG,CAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAA,CACrB,GAAI,GAAG,EAAI,IAAI,CACb,OAGF,GAAI,KAAI,CAAG,GAAI,0CAAS,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,CAAG,IAAI,CAAC,gBAAgB,EAAA,CAAK,IAAI,CAAC,KAAK,CAAC,YAAY,CAAA,CAC9G,GAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAA,CACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAA,CAAA,IAGV,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAA,CAAG,CAClC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAA,CACZ,IAAI,CAAC,SAAS,CAAG,GAAG,CACpB,IAAI,CAAC,UAAU,CAAG,GAAG,CACvB,CAEA,GAAI,IAAI,CAAC,sBAAsB,EAAI,IAAI,CAAC,IAAI,GAAK,CAAC,CAChD,OAGF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAA,CACjC,CAAC,gCAKD,0BAAiB,GAAQ,CAAE,CACzB,GAAI,IAAI,CAAC,aAAa,GAAK,MAAM,CAC/B,OAGF,GAAG,CAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAA,CACrB,GAAI,GAAG,EAAI,IAAI,CACb,OAGF,GAAI,UAAS,CAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAA,CAClC,GAAI,0CAAS,CAAC,CAAC,GAAG,CAAC,CAAE,GAAG,CAAE,GAAG,CAAA,CAC7B,GAAI,0CAAS,EAAA,CAEjB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAA,CACtC,CAAC,+BAKD,yBAAgB,IAAmB,CAAE,CACnC,GAAI,IAAI,CAAC,aAAa,GAAK,MAAM,CAC/B,OAGF,GAAI,UAAS,CAAG,GAAI,0CAAS,EAAA,CAC7B,mDAAgB,IAAI,sCAAE,IAAb,IAAG,cACV,GAAG,CAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAA,CACrB,GAAI,GAAG,EAAI,IAAI,CAAE,CACf,SAAS,CAAC,GAAG,CAAC,GAAG,CAAA,CACjB,GAAI,IAAI,CAAC,aAAa,GAAK,QAAQ,CACjC,MAEJ,CACF,CAEA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAA,CACtC,CAAC,gCAEO,2BAAmB,iBACzB,GAAI,KAAI,CAAU,EAAE,CACpB,GAAI,QAAO,CAAA,QAAP,QAAO,CAAI,GAAQ,CAAK,C,MACnB,GAAG,CAAE,CACV,GAAI,MAAI,CAAC,aAAa,CAAC,GAAG,CAAA,CAAG,CAC3B,GAAI,KAAI,CAAG,MAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAI,IAAI,CAAC,IAAI,GAAK,MAAM,CACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA,CAIf,GAAI,IAAI,CAAC,aAAa,GAAK,MAAI,CAAC,mBAAmB,EAAI,IAAI,CAAC,IAAI,GAAK,MAAM,CAAA,CACzE,OAAO,CAAC,mBAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CAAA,CAAE,GAAG,CAAA,CAEvC,CAEA,GAAG,CAAG,MAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAA,CACvC,CACF,CAAC,CAED,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAA,CAAA,CACnC,MAAO,KAAI,CACb,CAAC,yBAKD,oBAAY,CACV,GAAI,IAAI,CAAC,aAAa,GAAK,UAAU,CACnC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAA,CAEpC,CAAC,8BAKD,yBAAiB,CACf,GAAE,CAAG,IAAI,CAAC,sBAAsB,GAAK,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,KAAK,EAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAG,CAAC,CAAA,CACxG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAI,0CAAS,EAAA,CAAA,CAE5C,CAAC,+BAKD,0BAAkB,CAChB,GAAI,IAAI,CAAC,WAAW,CAClB,IAAI,CAAC,cAAc,EAAA,CAAA,IAEnB,KAAI,CAAC,SAAS,EAAA,CAElB,CAAC,sBAED,gBAAO,GAAQ,CAAE,CAA8C,CAAE,CAC/D,GAAI,IAAI,CAAC,aAAa,GAAK,MAAM,CAC/B,OAGF,GAAI,IAAI,CAAC,aAAa,GAAK,QAAQ,CAAA,CACjC,GAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAA,EAAA,CAAM,IAAI,CAAC,sBAAsB,CACtD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAA,CAAA,IAExB,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAA,C,KAEtB,IAAI,IAAI,CAAC,iBAAiB,GAAK,QAAQ,EAAK,CAAC,GAAK,CAAC,CAAC,WAAW,GAAK,OAAO,EAAI,CAAC,CAAC,WAAW,GAAK,SAAS,CAAA,CAE/G,IAAI,CAAC,eAAe,CAAC,GAAG,CAAA,CAAA,IAExB,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAA,CAE7B,CAAC,gCAKD,0BAAiB,SAAmB,CAAE,CACpC,GAAI,SAAS,GAAK,IAAI,CAAC,KAAK,CAAC,YAAY,CACvC,MAAO,KAAI,CAIb,GAAI,aAAY,CAAG,IAAI,CAAC,YAAY,CACpC,GAAI,SAAS,CAAC,IAAI,GAAK,YAAY,CAAC,IAAI,CACtC,MAAO,MAAK,CAGd,mDAAgB,SAAS,sCAAE,IAAlB,IAAG,cACV,GAAE,CAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAA,CACvB,MAAO,MAAK,CAEhB,CAEA,mDAAgB,YAAY,sCAAE,IAArB,KAAG,cACV,GAAE,CAAG,SAAS,CAAC,GAAG,CAAC,IAAG,CAAA,CACpB,MAAO,MAAK,CAEhB,CAEA,MAAO,KAAI,CACb,CAAC,6BAED,uBAAc,GAAQ,CAAE,CACtB,GAAI,IAAI,CAAC,KAAK,CAAC,aAAa,GAAK,MAAM,EAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAA,CACxE,MAAO,MAAK,CAGd,GAAI,KAAI,CAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAA,CACtC,GAAE,CAAG,IAAI,EAAK,IAAI,CAAC,IAAI,GAAK,MAAM,EAAA,CAAK,IAAI,CAAC,mBAAmB,CAC7D,MAAO,MAAK,CAGd,MAAO,KAAI,CACb,CAAC,0BAED,oBAAW,GAAQ,CAAE,CACnB,MAAO,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAA,EAAK,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAK,KAAK,CAClF,CAAC,yD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DisabledBehavior, MultipleSelection, SelectionBehavior, SelectionMode} from '@react-types/shared';\nimport {Key, useEffect, useMemo, useRef, useState} from 'react';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\n\nfunction equalSets(setA, setB) {\n  if (setA.size !== setB.size) {\n    return false;\n  }\n\n  for (let item of setA) {\n    if (!setB.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport interface MultipleSelectionStateProps extends MultipleSelection {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** Whether onSelectionChange should fire even if the new set of keys is the same as the last. */\n  allowDuplicateSelectionEvents?: boolean,\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelectionStateProps): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection,\n    allowDuplicateSelectionEvents,\n    selectionBehavior: selectionBehaviorProp = 'toggle',\n    disabledBehavior = 'all'\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef(null);\n  let childFocusStrategyRef = useRef(null);\n  let [, setFocusedKey] = useState(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n  let [selectionBehavior, setSelectionBehavior] = useState(selectionBehaviorProp);\n\n  // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n  // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n  if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) {\n    setSelectionBehavior('replace');\n  }\n\n  // If the selectionBehavior prop changes, update the state as well.\n  let lastSelectionBehavior = useRef(selectionBehaviorProp);\n  useEffect(() => {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    selectionBehavior,\n    setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !equalSets(keys, selectedKeys)) {\n        setSelectedKeys(keys);\n      }\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key>, defaultValue?: Selection): 'all' | Selection {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key;\n  currentKey: Key;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key, currentKey?: Key) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey || keys.anchorKey;\n      this.currentKey = currentKey || keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey;\n      this.currentKey = currentKey;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  DisabledBehavior,\n  FocusStrategy,\n  Selection as ISelection,\n  LongPressEvent,\n  Node,\n  PressEvent,\n  SelectionBehavior,\n  SelectionMode\n} from '@react-types/shared';\nimport {Key} from 'react';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  private collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * The selection behavior for the collection.\n   */\n  get selectionBehavior(): SelectionBehavior {\n    return this.state.selectionBehavior;\n  }\n\n  /**\n   * Sets the selection behavior for the collection.\n   */\n  setSelectionBehavior(selectionBehavior: SelectionBehavior) {\n    this.state.setSelectionBehavior(selectionBehavior);\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean) {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key, childFocusStrategy?: FocusStrategy) {\n    if (key == null || this.collection.getItem(key)) {\n      this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key) {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    key = this.getKey(key);\n    return this.state.selectedKeys === 'all'\n      ? this.canSelectItem(key)\n      : this.state.selectedKeys.has(key);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || item?.index < first.index) {\n        first = item;\n      }\n    }\n\n    return first?.key;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || item?.index > last.index) {\n        last = item;\n      }\n    }\n\n    return last?.key;\n  }\n\n  get disabledKeys(): Set<Key> {\n    return this.state.disabledKeys;\n  }\n\n  get disabledBehavior(): DisabledBehavior {\n    return this.state.disabledBehavior;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      this.replaceSelection(toKey);\n      return;\n    }\n\n    toKey = this.getKey(toKey);\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([toKey], toKey, toKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey || toKey;\n      selection = new Selection(selectedKeys, anchorKey, toKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(toKey, anchorKey)) {\n        if (this.canSelectItem(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (fromItem.index <= toItem.index) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    let keys: Key[] = [];\n    let key = from;\n    while (key) {\n      let item = this.collection.getItem(key);\n      if (item && item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection)) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item.type !== 'item' && item.parentKey != null) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single' && !this.isSelected(key)) {\n      this.replaceSelection(key);\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(key)) {\n      keys.delete(key);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else if (this.canSelectItem(key)) {\n      keys.add(key);\n      keys.anchorKey = key;\n      keys.currentKey = key;\n    }\n\n    if (this.disallowEmptySelection && keys.size === 0) {\n      return;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let selection = this.canSelectItem(key)\n      ? new Selection([key], key, key)\n      : new Selection();\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      key = this.getKey(key);\n      if (key != null) {\n        selection.add(key);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key) => {\n      while (key) {\n        if (this.canSelectItem(key)) {\n          let item = this.collection.getItem(key);\n          if (item.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys([...item.childNodes][0].key);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll() {\n    if (this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection() {\n    if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll() {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | LongPressEvent | PointerEvent) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (this.selectionBehavior === 'toggle' || (e && (e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n      // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n      this.toggleSelection(key);\n    } else {\n      this.replaceSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>) {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canSelectItem(key: Key) {\n    if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) {\n      return false;\n    }\n\n    let item = this.collection.getItem(key);\n    if (!item || (item.type === 'cell' && !this.allowsCellSelection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isDisabled(key: Key) {\n    return this.state.disabledKeys.has(key) && this.state.disabledBehavior === 'all';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}