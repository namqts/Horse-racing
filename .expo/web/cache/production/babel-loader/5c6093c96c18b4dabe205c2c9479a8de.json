{"ast":null,"code":"'use strict';var inherits=require('inherits');var Buffer=require('safer-buffer').Buffer;var DERDecoder=require(\"./der\");function PEMDecoder(entity){DERDecoder.call(this,entity);this.enc='pem';}inherits(PEMDecoder,DERDecoder);module.exports=PEMDecoder;PEMDecoder.prototype.decode=function decode(data,options){var lines=data.toString().split(/[\\r\\n]+/g);var label=options.label.toUpperCase();var re=/^-----(BEGIN|END) ([^-]+)-----$/;var start=-1;var end=-1;for(var i=0;i<lines.length;i++){var match=lines[i].match(re);if(match===null)continue;if(match[2]!==label)continue;if(start===-1){if(match[1]!=='BEGIN')break;start=i;}else{if(match[1]!=='END')break;end=i;break;}}if(start===-1||end===-1)throw new Error('PEM section not found for: '+label);var base64=lines.slice(start+1,end).join('');base64.replace(/[^a-z0-9+/=]+/gi,'');var input=Buffer.from(base64,'base64');return DERDecoder.prototype.decode.call(this,input,options);};","map":{"version":3,"names":["inherits","require","Buffer","DERDecoder","PEMDecoder","entity","call","enc","module","exports","prototype","decode","data","options","lines","toString","split","label","toUpperCase","re","start","end","i","length","match","Error","base64","slice","join","replace","input","from"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/asn1.js/lib/asn1/decoders/pem.js"],"sourcesContent":["'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n"],"mappings":"AAAA,YAAY,CAEZ,GAAMA,SAAQ,CAAGC,OAAO,CAAC,UAAU,CAAC,CACpC,GAAMC,OAAM,CAAGD,OAAO,CAAC,cAAc,CAAC,CAACC,MAAM,CAE7C,GAAMC,WAAU,CAAGF,OAAO,SAAS,CAEnC,QAASG,WAAU,CAACC,MAAM,CAAE,CAC1BF,UAAU,CAACG,IAAI,CAAC,IAAI,CAAED,MAAM,CAAC,CAC7B,IAAI,CAACE,GAAG,CAAG,KAAK,CAClB,CACAP,QAAQ,CAACI,UAAU,CAAED,UAAU,CAAC,CAChCK,MAAM,CAACC,OAAO,CAAGL,UAAU,CAE3BA,UAAU,CAACM,SAAS,CAACC,MAAM,CAAG,QAASA,OAAM,CAACC,IAAI,CAAEC,OAAO,CAAE,CAC3D,GAAMC,MAAK,CAAGF,IAAI,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,UAAU,CAAC,CAE/C,GAAMC,MAAK,CAAGJ,OAAO,CAACI,KAAK,CAACC,WAAW,EAAE,CAEzC,GAAMC,GAAE,CAAG,iCAAiC,CAC5C,GAAIC,MAAK,CAAG,CAAC,CAAC,CACd,GAAIC,IAAG,CAAG,CAAC,CAAC,CACZ,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGR,KAAK,CAACS,MAAM,CAAED,CAAC,EAAE,CAAE,CACrC,GAAME,MAAK,CAAGV,KAAK,CAACQ,CAAC,CAAC,CAACE,KAAK,CAACL,EAAE,CAAC,CAChC,GAAIK,KAAK,GAAK,IAAI,CAChB,SAEF,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAKP,KAAK,CACpB,SAEF,GAAIG,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,GAAII,KAAK,CAAC,CAAC,CAAC,GAAK,OAAO,CACtB,MACFJ,KAAK,CAAGE,CAAC,CACX,CAAC,IAAM,CACL,GAAIE,KAAK,CAAC,CAAC,CAAC,GAAK,KAAK,CACpB,MACFH,GAAG,CAAGC,CAAC,CACP,MACF,CACF,CACA,GAAIF,KAAK,GAAK,CAAC,CAAC,EAAIC,GAAG,GAAK,CAAC,CAAC,CAC5B,KAAM,IAAII,MAAK,CAAC,6BAA6B,CAAGR,KAAK,CAAC,CAExD,GAAMS,OAAM,CAAGZ,KAAK,CAACa,KAAK,CAACP,KAAK,CAAG,CAAC,CAAEC,GAAG,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,CAEnDF,MAAM,CAACG,OAAO,CAAC,iBAAiB,CAAE,EAAE,CAAC,CAErC,GAAMC,MAAK,CAAG5B,MAAM,CAAC6B,IAAI,CAACL,MAAM,CAAE,QAAQ,CAAC,CAC3C,MAAOvB,WAAU,CAACO,SAAS,CAACC,MAAM,CAACL,IAAI,CAAC,IAAI,CAAEwB,KAAK,CAAEjB,OAAO,CAAC,CAC/D,CAAC"},"metadata":{},"sourceType":"script"}