{"ast":null,"code":"'use strict';var MatrixMath=require(\"../Utilities/MatrixMath\");var Platform=require(\"../Utilities/Platform\");var invariant=require('invariant');var stringifySafe=require(\"../Utilities/stringifySafe\").default;function processTransform(transform){if(__DEV__){_validateTransforms(transform);}if(Platform.OS==='android'||Platform.OS==='ios'){return transform;}var result=MatrixMath.createIdentityMatrix();transform.forEach(function(transformation){var key=Object.keys(transformation)[0];var value=transformation[key];switch(key){case'matrix':MatrixMath.multiplyInto(result,result,value);break;case'perspective':_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);break;case'rotateX':_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);break;case'rotateY':_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);break;case'rotate':case'rotateZ':_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);break;case'scale':_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);break;case'scaleX':_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);break;case'scaleY':_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);break;case'translate':_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2]||0]);break;case'translateX':_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);break;case'translateY':_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);break;case'skewX':_multiplyTransform(result,MatrixMath.reuseSkewXCommand,[_convertToRadians(value)]);break;case'skewY':_multiplyTransform(result,MatrixMath.reuseSkewYCommand,[_convertToRadians(value)]);break;default:throw new Error('Invalid transform name: '+key);}});return result;}function _multiplyTransform(result,matrixMathFunction,args){var matrixToApply=MatrixMath.createIdentityMatrix();var argsWithIdentity=[matrixToApply].concat(args);matrixMathFunction.apply(this,argsWithIdentity);MatrixMath.multiplyInto(result,result,matrixToApply);}function _convertToRadians(value){var floatValue=parseFloat(value);return value.indexOf('rad')>-1?floatValue:floatValue*Math.PI/180;}function _validateTransforms(transform){transform.forEach(function(transformation){var keys=Object.keys(transformation);invariant(keys.length===1,'You must specify exactly one property per transform object. Passed properties: %s',stringifySafe(transformation));var key=keys[0];var value=transformation[key];_validateTransform(key,value,transformation);});}function _validateTransform(key,value,transformation){invariant(!value.getValue,'You passed an Animated.Value to a normal component. '+'You need to wrap that component in an Animated. For example, '+'replace <View /> by <Animated.View />.');var multivalueTransforms=['matrix','translate'];if(multivalueTransforms.indexOf(key)!==-1){invariant(Array.isArray(value),'Transform with key of %s must have an array as the value: %s',key,stringifySafe(transformation));}switch(key){case'matrix':invariant(value.length===9||value.length===16,'Matrix transform must have a length of 9 (2d) or 16 (3d). '+'Provided matrix has a length of %s: %s',value.length,stringifySafe(transformation));break;case'translate':invariant(value.length===2||value.length===3,'Transform with key translate must be an array of length 2 or 3, found %s: %s',value.length,stringifySafe(transformation));break;case'rotateX':case'rotateY':case'rotateZ':case'rotate':case'skewX':case'skewY':invariant(typeof value==='string','Transform with key of \"%s\" must be a string: %s',key,stringifySafe(transformation));invariant(value.indexOf('deg')>-1||value.indexOf('rad')>-1,'Rotate transform must be expressed in degrees (deg) or radians '+'(rad): %s',stringifySafe(transformation));break;case'perspective':invariant(typeof value==='number','Transform with key of \"%s\" must be a number: %s',key,stringifySafe(transformation));invariant(value!==0,'Transform with key of \"%s\" cannot be zero: %s',key,stringifySafe(transformation));break;case'translateX':case'translateY':case'scale':case'scaleX':case'scaleY':invariant(typeof value==='number','Transform with key of \"%s\" must be a number: %s',key,stringifySafe(transformation));break;default:invariant(false,'Invalid transform %s: %s',key,stringifySafe(transformation));}}module.exports=processTransform;","map":{"version":3,"names":["MatrixMath","require","Platform","invariant","stringifySafe","default","processTransform","transform","__DEV__","_validateTransforms","OS","result","createIdentityMatrix","forEach","transformation","key","Object","keys","value","multiplyInto","_multiplyTransform","reusePerspectiveCommand","reuseRotateXCommand","_convertToRadians","reuseRotateYCommand","reuseRotateZCommand","reuseScaleCommand","reuseScaleXCommand","reuseScaleYCommand","reuseTranslate3dCommand","reuseTranslate2dCommand","reuseSkewXCommand","reuseSkewYCommand","Error","matrixMathFunction","args","matrixToApply","argsWithIdentity","concat","apply","floatValue","parseFloat","indexOf","Math","PI","length","_validateTransform","getValue","multivalueTransforms","Array","isArray","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/StyleSheet/processTransform.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst MatrixMath = require('../Utilities/MatrixMath');\nconst Platform = require('../Utilities/Platform');\n\nconst invariant = require('invariant');\nconst stringifySafe = require('../Utilities/stringifySafe').default;\n\n/**\n * Generate a transform matrix based on the provided transforms, and use that\n * within the style object instead.\n *\n * This allows us to provide an API that is similar to CSS, where transforms may\n * be applied in an arbitrary order, and yet have a universal, singular\n * interface to native code.\n */\nfunction processTransform(\n  transform: Array<Object>,\n): Array<Object> | Array<number> {\n  if (__DEV__) {\n    _validateTransforms(transform);\n  }\n\n  // Android & iOS implementations of transform property accept the list of\n  // transform properties as opposed to a transform Matrix. This is necessary\n  // to control transform property updates completely on the native thread.\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return transform;\n  }\n\n  const result = MatrixMath.createIdentityMatrix();\n\n  transform.forEach(transformation => {\n    const key = Object.keys(transformation)[0];\n    const value = transformation[key];\n\n    switch (key) {\n      case 'matrix':\n        MatrixMath.multiplyInto(result, result, value);\n        break;\n      case 'perspective':\n        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);\n        break;\n      case 'rotateX':\n        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'rotateY':\n        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'rotate':\n      case 'rotateZ':\n        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'scale':\n        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);\n        break;\n      case 'scaleX':\n        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);\n        break;\n      case 'scaleY':\n        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);\n        break;\n      case 'translate':\n        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [\n          value[0],\n          value[1],\n          value[2] || 0,\n        ]);\n        break;\n      case 'translateX':\n        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [\n          value,\n          0,\n        ]);\n        break;\n      case 'translateY':\n        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [\n          0,\n          value,\n        ]);\n        break;\n      case 'skewX':\n        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'skewY':\n        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      default:\n        throw new Error('Invalid transform name: ' + key);\n    }\n  });\n\n  return result;\n}\n\n/**\n * Performs a destructive operation on a transform matrix.\n */\nfunction _multiplyTransform(\n  result: Array<number>,\n  matrixMathFunction: Function,\n  args: Array<number>,\n): void {\n  const matrixToApply = MatrixMath.createIdentityMatrix();\n  const argsWithIdentity = [matrixToApply].concat(args);\n  matrixMathFunction.apply(this, argsWithIdentity);\n  MatrixMath.multiplyInto(result, result, matrixToApply);\n}\n\n/**\n * Parses a string like '0.5rad' or '60deg' into radians expressed in a float.\n * Note that validation on the string is done in `_validateTransform()`.\n */\nfunction _convertToRadians(value: string): number {\n  const floatValue = parseFloat(value);\n  return value.indexOf('rad') > -1 ? floatValue : (floatValue * Math.PI) / 180;\n}\n\nfunction _validateTransforms(transform: Array<Object>): void {\n  transform.forEach(transformation => {\n    const keys = Object.keys(transformation);\n    invariant(\n      keys.length === 1,\n      'You must specify exactly one property per transform object. Passed properties: %s',\n      stringifySafe(transformation),\n    );\n    const key = keys[0];\n    const value = transformation[key];\n    _validateTransform(key, value, transformation);\n  });\n}\n\nfunction _validateTransform(key, value, transformation) {\n  invariant(\n    !value.getValue,\n    'You passed an Animated.Value to a normal component. ' +\n      'You need to wrap that component in an Animated. For example, ' +\n      'replace <View /> by <Animated.View />.',\n  );\n\n  const multivalueTransforms = ['matrix', 'translate'];\n  if (multivalueTransforms.indexOf(key) !== -1) {\n    invariant(\n      Array.isArray(value),\n      'Transform with key of %s must have an array as the value: %s',\n      key,\n      stringifySafe(transformation),\n    );\n  }\n  switch (key) {\n    case 'matrix':\n      invariant(\n        value.length === 9 || value.length === 16,\n        'Matrix transform must have a length of 9 (2d) or 16 (3d). ' +\n          'Provided matrix has a length of %s: %s',\n        /* $FlowFixMe(>=0.84.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.84 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translate':\n      invariant(\n        value.length === 2 || value.length === 3,\n        'Transform with key translate must be an array of length 2 or 3, found %s: %s',\n        /* $FlowFixMe(>=0.84.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.84 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n    case 'rotate':\n    case 'skewX':\n    case 'skewY':\n      invariant(\n        typeof value === 'string',\n        'Transform with key of \"%s\" must be a string: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value.indexOf('deg') > -1 || value.indexOf('rad') > -1,\n        'Rotate transform must be expressed in degrees (deg) or radians ' +\n          '(rad): %s',\n        stringifySafe(transformation),\n      );\n      break;\n    case 'perspective':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value !== 0,\n        'Transform with key of \"%s\" cannot be zero: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translateX':\n    case 'translateY':\n    case 'scale':\n    case 'scaleX':\n    case 'scaleY':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    default:\n      invariant(\n        false,\n        'Invalid transform %s: %s',\n        key,\n        stringifySafe(transformation),\n      );\n  }\n}\n\nmodule.exports = processTransform;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}