{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"style\",\"isIncrement\",\"disablitityCheck\",\"_active\",\"_disabled\",\"isDisabled\",\"accessibilityLabel\",\"pressHandler\",\"iconColor\"],_excluded3=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import{VStack,Box}from\"../../primitives\";import{useThemeProps}from\"../../../hooks\";import{NumberInputContext}from\"./Context\";import{ChevronUpIcon,ChevronDownIcon}from\"../../primitives/Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var NBStepper=React.forwardRef(function(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('NumberInputStepper',props),style=_useThemeProps.style,isIncrement=_useThemeProps.isIncrement,disablitityCheck=_useThemeProps.disablitityCheck,_active=_useThemeProps._active,_disabled=_useThemeProps._disabled,isDisabled=_useThemeProps.isDisabled,accessibilityLabel=_useThemeProps.accessibilityLabel,pressHandler=_useThemeProps.pressHandler,iconColor=_useThemeProps.iconColor,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(TouchableOpacity,{activeOpacity:0.2,disabled:disablitityCheck||isDisabled,onPress:pressHandler,accessible:true,accessibilityLabel:accessibilityLabel,ref:ref},React.createElement(Box,_extends({},newProps,_active,disablitityCheck||isDisabled?_disabled:{},{borderColor:\"transparent\",style:style,opacity:disablitityCheck||isDisabled?0.4:1},Platform.OS==='web'?{disabled:disablitityCheck||isDisabled,cursor:disablitityCheck||isDisabled?'not-allowed':'auto'}:{}),children||isIncrement?React.createElement(ChevronUpIcon,{color:iconColor}):React.createElement(ChevronDownIcon,{color:iconColor})));});var NumberInputStepper=function NumberInputStepper(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded3);var _React$useContext=React.useContext(NumberInputContext),numberInputStepper=_React$useContext.numberInputStepper,setNumberInputStepper=_React$useContext.setNumberInputStepper;React.useEffect(function(){!numberInputStepper&&setNumberInputStepper(React.createElement(VStack,_extends({},props,{ref:ref}),children));},[numberInputStepper,setNumberInputStepper,props,children,ref]);return null;};export default React.memo(React.forwardRef(NumberInputStepper));","map":{"version":3,"sources":["NumberInputStepper.tsx"],"names":["React","VStack","Box","useThemeProps","NumberInputContext","ChevronUpIcon","ChevronDownIcon","useHasResponsiveProps","NBStepper","forwardRef","children","props","ref","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","accessibilityLabel","pressHandler","iconColor","newProps","OS","disabled","cursor","NumberInputStepper","numberInputStepper","setNumberInputStepper","useContext","useEffect","memo"],"mappings":"wiBAAA,MAAOA,MAAP,KAAkB,OAAlB,CAAA,0IAEA,OAASC,MAAT,CAAiBC,GAAjB,wBACA,OAASC,aAAT,sBAEA,OAASC,kBAAT,iBACA,OAASC,aAAT,CAAwBC,eAAxB,mCACA,OAASC,qBAAT,4CAEA,MAAO,IAAMC,UAAS,CAAG,KAAK,CAACC,UAAN,CACvB,cAA8BG,GAA9B,CAA4C,IAAzCF,SAAF,MAAEA,QAAF,CAAeC,KAAAA,0CACd,mBAWIR,aAAa,CAAC,oBAAD,CAAuBQ,KAAvB,CAZyB,CAExCE,KADI,gBACJA,KADI,CAEJC,WAFI,gBAEJA,WAFI,CAGJC,gBAHI,gBAGJA,gBAHI,CAIJC,OAJI,gBAIJA,OAJI,CAKJC,SALI,gBAKJA,SALI,CAMJC,UANI,gBAMJA,UANI,CAOJC,kBAPI,gBAOJA,kBAPI,CAQJC,YARI,gBAQJA,YARI,CASJC,SATI,gBASJA,SATI,CAUDC,QAAAA,qDAGL,GAAIf,qBAAqB,CAACI,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,CACE,aAAa,CAAE,GADjB,CAEE,QAAQ,CAAEI,gBAAgB,EAAIG,UAFhC,CAGE,OAAO,CAAEE,YAHX,CAIE,UAAU,CAAA,IAJZ,CAKE,kBAAkB,CAAED,kBALtB,CAME,GAAG,CAAEP,GANP,CAAA,CAQE,KAAA,CAAA,aAAA,CAAC,GAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMU,QADN,CAEMN,OAFN,CAGOD,gBAAgB,EAAIG,UAApBH,CAAiCE,SAAjCF,CAA6C,CAAA,CAHpD,CAAA,CAIE,WAAW,CAAC,aAJd,CAKE,KAAK,CAAEF,KALT,CAME,OAAO,CAAEE,gBAAgB,EAAIG,UAApBH,CAAiC,GAAjCA,CAAuC,CANlD,CAAA,CAOO,QAAQ,CAACQ,EAAT,GAAgB,KAAhB,CACD,CACEC,QAAQ,CAAET,gBAAgB,EAAIG,UADhC,CAEEO,MAAM,CAAEV,gBAAgB,EAAIG,UAApBH,CAAiC,aAAjCA,CAAiD,MAF3D,CADC,CAKD,CAAA,CAZN,CAAA,CAcG,QAAQ,EAAID,WAAZ,CACC,KAAA,CAAA,aAAA,CAAC,aAAD,CAAA,CAAe,KAAK,CAAEO,SAAtB,CAAA,CADD,CAGC,KAAA,CAAA,aAAA,CAAC,eAAD,CAAA,CAAiB,KAAK,CAAEA,SAAxB,CAAA,CAjBJ,CARF,CADF,CA+BD,CAjDsB,CAAlB,CAoDP,GAAMK,mBAAkB,CAAG,QAArBA,mBAAkB,OAEtBd,GAFyB,CAGtB,IAFDF,SAAF,OAAEA,QAAF,CAAeC,KAAAA,4CAGf,sBAIyBX,KAAK,CAAC6B,UAAN7B,CAAiBI,kBAAjBJ,CAJzB,CAEE2B,kBAFI,mBAEJA,kBAFI,CAGJC,qBAAAA,mBAAAA,qBAAAA,CAGF5B,KAAK,CAAC8B,SAAN9B,CAAgB,UAAM,CACpB,CAAC2B,kBAAD,EACEC,qBAAqB,CACnB,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAYjB,KAAZ,CAAA,CAAmB,GAAG,CAAEC,GAAxB,CAAA,CAAA,CACGF,QADH,CADmB,CADvB,CAMD,CAPDV,CAOG,CAAC2B,kBAAD,CAAqBC,qBAArB,CAA4CjB,KAA5C,CAAmDD,QAAnD,CAA6DE,GAA7D,CAPHZ,CAAAA,CAQA,MAAO,KAAP,CACD,CAnBD,CAqBA,cAAeA,MAAK,CAAC+B,IAAN/B,CAAWA,KAAK,CAACS,UAANT,CAAiB0B,kBAAjB1B,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    //@ts-ignore\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]},"metadata":{},"sourceType":"module"}