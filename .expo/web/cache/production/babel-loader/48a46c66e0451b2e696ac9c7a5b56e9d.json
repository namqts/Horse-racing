{"ast":null,"code":"'use strict';import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var NativeModules=require(\"../BatchedBridge/NativeModules\");var Platform=require(\"../Utilities/Platform\");var UIManagerProperties=require(\"./UIManagerProperties\");var defineLazyObjectProperty=require(\"../Utilities/defineLazyObjectProperty\");import NativeUIManager from\"./NativeUIManager\";var viewManagerConfigs={};var triedLoadingConfig=new Set();var NativeUIManagerConstants={};var isNativeUIManagerConstantsSet=false;function _getConstants(){if(!isNativeUIManagerConstantsSet){NativeUIManagerConstants=NativeUIManager.getConstants();isNativeUIManagerConstantsSet=true;}return NativeUIManagerConstants;}var UIManagerJS=_objectSpread(_objectSpread({},NativeUIManager),{},{getConstants:function getConstants(){return _getConstants();},getViewManagerConfig:function getViewManagerConfig(viewManagerName){if(viewManagerConfigs[viewManagerName]===undefined&&NativeUIManager.getConstantsForViewManager){try{viewManagerConfigs[viewManagerName]=NativeUIManager.getConstantsForViewManager(viewManagerName);}catch(e){viewManagerConfigs[viewManagerName]=null;}}var config=viewManagerConfigs[viewManagerName];if(config){return config;}if(!global.nativeCallSyncHook){return config;}if(NativeUIManager.lazilyLoadView&&!triedLoadingConfig.has(viewManagerName)){var result=NativeUIManager.lazilyLoadView(viewManagerName);triedLoadingConfig.add(viewManagerName);if(result.viewConfig){_getConstants()[viewManagerName]=result.viewConfig;lazifyViewManagerConfig(viewManagerName);}}return viewManagerConfigs[viewManagerName];}});NativeUIManager.getViewManagerConfig=UIManagerJS.getViewManagerConfig;function lazifyViewManagerConfig(viewName){var viewConfig=_getConstants()[viewName];viewManagerConfigs[viewName]=viewConfig;if(viewConfig.Manager){defineLazyObjectProperty(viewConfig,'Constants',{get:function get(){var viewManager=NativeModules[viewConfig.Manager];var constants={};viewManager&&Object.keys(viewManager).forEach(function(key){var value=viewManager[key];if(typeof value!=='function'){constants[key]=value;}});return constants;}});defineLazyObjectProperty(viewConfig,'Commands',{get:function get(){var viewManager=NativeModules[viewConfig.Manager];var commands={};var index=0;viewManager&&Object.keys(viewManager).forEach(function(key){var value=viewManager[key];if(typeof value==='function'){commands[key]=index++;}});return commands;}});}}if(Platform.OS==='ios'){Object.keys(_getConstants()).forEach(function(viewName){lazifyViewManagerConfig(viewName);});}else if(_getConstants().ViewManagerNames){NativeUIManager.getConstants().ViewManagerNames.forEach(function(viewManagerName){defineLazyObjectProperty(NativeUIManager,viewManagerName,{get:function get(){return NativeUIManager.getConstantsForViewManager(viewManagerName);}});});}if(!global.nativeCallSyncHook){Object.keys(_getConstants()).forEach(function(viewManagerName){if(!UIManagerProperties.includes(viewManagerName)){if(!viewManagerConfigs[viewManagerName]){viewManagerConfigs[viewManagerName]=_getConstants()[viewManagerName];}defineLazyObjectProperty(NativeUIManager,viewManagerName,{get:function get(){console.warn(\"Accessing view manager configs directly off UIManager via UIManager['\"+viewManagerName+\"'] \"+(\"is no longer supported. Use UIManager.getViewManagerConfig('\"+viewManagerName+\"') instead.\"));return UIManagerJS.getViewManagerConfig(viewManagerName);}});}});}module.exports=UIManagerJS;","map":{"version":3,"names":["NativeModules","require","Platform","UIManagerProperties","defineLazyObjectProperty","NativeUIManager","viewManagerConfigs","triedLoadingConfig","Set","NativeUIManagerConstants","isNativeUIManagerConstantsSet","getConstants","UIManagerJS","getViewManagerConfig","viewManagerName","undefined","getConstantsForViewManager","e","config","global","nativeCallSyncHook","lazilyLoadView","has","result","add","viewConfig","lazifyViewManagerConfig","viewName","Manager","get","viewManager","constants","Object","keys","forEach","key","value","commands","index","OS","ViewManagerNames","includes","console","warn","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/ReactNative/PaperUIManager.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\nconst Platform = require('../Utilities/Platform');\nconst UIManagerProperties = require('./UIManagerProperties');\n\nconst defineLazyObjectProperty = require('../Utilities/defineLazyObjectProperty');\n\nimport NativeUIManager from './NativeUIManager';\n\nconst viewManagerConfigs = {};\n\nconst triedLoadingConfig = new Set();\n\nlet NativeUIManagerConstants = {};\nlet isNativeUIManagerConstantsSet = false;\nfunction getConstants(): Object {\n  if (!isNativeUIManagerConstantsSet) {\n    NativeUIManagerConstants = NativeUIManager.getConstants();\n    isNativeUIManagerConstantsSet = true;\n  }\n  return NativeUIManagerConstants;\n}\n\n/* $FlowFixMe(>=0.123.0 site=react_native_fb) This comment suppresses an error\n * found when Flow v0.123.0 was deployed. To see the error, delete this comment\n * and run Flow. */\nconst UIManagerJS = {\n  ...NativeUIManager,\n  getConstants(): Object {\n    return getConstants();\n  },\n  getViewManagerConfig: function(viewManagerName: string): any {\n    if (\n      viewManagerConfigs[viewManagerName] === undefined &&\n      NativeUIManager.getConstantsForViewManager\n    ) {\n      try {\n        viewManagerConfigs[\n          viewManagerName\n        ] = NativeUIManager.getConstantsForViewManager(viewManagerName);\n      } catch (e) {\n        viewManagerConfigs[viewManagerName] = null;\n      }\n    }\n\n    const config = viewManagerConfigs[viewManagerName];\n    if (config) {\n      return config;\n    }\n\n    // If we're in the Chrome Debugger, let's not even try calling the sync\n    // method.\n    if (!global.nativeCallSyncHook) {\n      return config;\n    }\n\n    if (\n      NativeUIManager.lazilyLoadView &&\n      !triedLoadingConfig.has(viewManagerName)\n    ) {\n      const result = NativeUIManager.lazilyLoadView(viewManagerName);\n      triedLoadingConfig.add(viewManagerName);\n      if (result.viewConfig) {\n        getConstants()[viewManagerName] = result.viewConfig;\n        lazifyViewManagerConfig(viewManagerName);\n      }\n    }\n\n    return viewManagerConfigs[viewManagerName];\n  },\n};\n\n// TODO (T45220498): Remove this.\n// 3rd party libs may be calling `NativeModules.UIManager.getViewManagerConfig()`\n// instead of `UIManager.getViewManagerConfig()` off UIManager.js.\n// This is a workaround for now.\n// $FlowFixMe\nNativeUIManager.getViewManagerConfig = UIManagerJS.getViewManagerConfig;\n\nfunction lazifyViewManagerConfig(viewName) {\n  const viewConfig = getConstants()[viewName];\n  viewManagerConfigs[viewName] = viewConfig;\n  if (viewConfig.Manager) {\n    defineLazyObjectProperty(viewConfig, 'Constants', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const constants = {};\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value !== 'function') {\n              constants[key] = value;\n            }\n          });\n        return constants;\n      },\n    });\n    defineLazyObjectProperty(viewConfig, 'Commands', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const commands = {};\n        let index = 0;\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value === 'function') {\n              commands[key] = index++;\n            }\n          });\n        return commands;\n      },\n    });\n  }\n}\n\n/**\n * Copies the ViewManager constants and commands into UIManager. This is\n * only needed for iOS, which puts the constants in the ViewManager\n * namespace instead of UIManager, unlike Android.\n */\nif (Platform.OS === 'ios') {\n  Object.keys(getConstants()).forEach(viewName => {\n    lazifyViewManagerConfig(viewName);\n  });\n} else if (getConstants().ViewManagerNames) {\n  NativeUIManager.getConstants().ViewManagerNames.forEach(viewManagerName => {\n    defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n      get: () => NativeUIManager.getConstantsForViewManager(viewManagerName),\n    });\n  });\n}\n\nif (!global.nativeCallSyncHook) {\n  Object.keys(getConstants()).forEach(viewManagerName => {\n    if (!UIManagerProperties.includes(viewManagerName)) {\n      if (!viewManagerConfigs[viewManagerName]) {\n        viewManagerConfigs[viewManagerName] = getConstants()[viewManagerName];\n      }\n      defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n        get: () => {\n          console.warn(\n            `Accessing view manager configs directly off UIManager via UIManager['${viewManagerName}'] ` +\n              `is no longer supported. Use UIManager.getViewManagerConfig('${viewManagerName}') instead.`,\n          );\n\n          return UIManagerJS.getViewManagerConfig(viewManagerName);\n        },\n      });\n    }\n  });\n}\n\nmodule.exports = UIManagerJS;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}