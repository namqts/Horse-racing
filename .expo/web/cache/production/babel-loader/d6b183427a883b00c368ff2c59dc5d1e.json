{"ast":null,"code":"var Buffer=require('safe-buffer').Buffer;function Hash(blockSize,finalSize){this._block=Buffer.alloc(blockSize);this._finalSize=finalSize;this._blockSize=blockSize;this._len=0;}Hash.prototype.update=function(data,enc){if(typeof data==='string'){enc=enc||'utf8';data=Buffer.from(data,enc);}var block=this._block;var blockSize=this._blockSize;var length=data.length;var accum=this._len;for(var offset=0;offset<length;){var assigned=accum%blockSize;var remainder=Math.min(length-offset,blockSize-assigned);for(var i=0;i<remainder;i++){block[assigned+i]=data[offset+i];}accum+=remainder;offset+=remainder;if(accum%blockSize===0){this._update(block);}}this._len+=length;return this;};Hash.prototype.digest=function(enc){var rem=this._len%this._blockSize;this._block[rem]=0x80;this._block.fill(0,rem+1);if(rem>=this._finalSize){this._update(this._block);this._block.fill(0);}var bits=this._len*8;if(bits<=0xffffffff){this._block.writeUInt32BE(bits,this._blockSize-4);}else{var lowBits=(bits&0xffffffff)>>>0;var highBits=(bits-lowBits)/0x100000000;this._block.writeUInt32BE(highBits,this._blockSize-8);this._block.writeUInt32BE(lowBits,this._blockSize-4);}this._update(this._block);var hash=this._hash();return enc?hash.toString(enc):hash;};Hash.prototype._update=function(){throw new Error('_update must be implemented by subclass');};module.exports=Hash;","map":{"version":3,"names":["Buffer","require","Hash","blockSize","finalSize","_block","alloc","_finalSize","_blockSize","_len","prototype","update","data","enc","from","block","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","rem","fill","bits","writeUInt32BE","lowBits","highBits","hash","_hash","toString","Error","module","exports"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/sha.js/hash.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}