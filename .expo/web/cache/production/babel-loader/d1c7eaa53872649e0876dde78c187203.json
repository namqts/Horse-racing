{"ast":null,"code":"'use strict';exports.randomBytes=exports.rng=exports.pseudoRandomBytes=exports.prng=require('randombytes');exports.createHash=exports.Hash=require('create-hash');exports.createHmac=exports.Hmac=require('create-hmac');var algos=require('browserify-sign/algos');var algoKeys=Object.keys(algos);var hashes=['sha1','sha224','sha256','sha384','sha512','md5','rmd160'].concat(algoKeys);exports.getHashes=function(){return hashes;};var p=require('pbkdf2');exports.pbkdf2=p.pbkdf2;exports.pbkdf2Sync=p.pbkdf2Sync;var aes=require('browserify-cipher');exports.Cipher=aes.Cipher;exports.createCipher=aes.createCipher;exports.Cipheriv=aes.Cipheriv;exports.createCipheriv=aes.createCipheriv;exports.Decipher=aes.Decipher;exports.createDecipher=aes.createDecipher;exports.Decipheriv=aes.Decipheriv;exports.createDecipheriv=aes.createDecipheriv;exports.getCiphers=aes.getCiphers;exports.listCiphers=aes.listCiphers;var dh=require('diffie-hellman');exports.DiffieHellmanGroup=dh.DiffieHellmanGroup;exports.createDiffieHellmanGroup=dh.createDiffieHellmanGroup;exports.getDiffieHellman=dh.getDiffieHellman;exports.createDiffieHellman=dh.createDiffieHellman;exports.DiffieHellman=dh.DiffieHellman;var sign=require('browserify-sign');exports.createSign=sign.createSign;exports.Sign=sign.Sign;exports.createVerify=sign.createVerify;exports.Verify=sign.Verify;exports.createECDH=require('create-ecdh');var publicEncrypt=require('public-encrypt');exports.publicEncrypt=publicEncrypt.publicEncrypt;exports.privateEncrypt=publicEncrypt.privateEncrypt;exports.publicDecrypt=publicEncrypt.publicDecrypt;exports.privateDecrypt=publicEncrypt.privateDecrypt;var rf=require('randomfill');exports.randomFill=rf.randomFill;exports.randomFillSync=rf.randomFillSync;exports.createCredentials=function(){throw new Error(['sorry, createCredentials is not implemented yet','we accept pull requests','https://github.com/crypto-browserify/crypto-browserify'].join('\\n'));};exports.constants={'DH_CHECK_P_NOT_SAFE_PRIME':2,'DH_CHECK_P_NOT_PRIME':1,'DH_UNABLE_TO_CHECK_GENERATOR':4,'DH_NOT_SUITABLE_GENERATOR':8,'NPN_ENABLED':1,'ALPN_ENABLED':1,'RSA_PKCS1_PADDING':1,'RSA_SSLV23_PADDING':2,'RSA_NO_PADDING':3,'RSA_PKCS1_OAEP_PADDING':4,'RSA_X931_PADDING':5,'RSA_PKCS1_PSS_PADDING':6,'POINT_CONVERSION_COMPRESSED':2,'POINT_CONVERSION_UNCOMPRESSED':4,'POINT_CONVERSION_HYBRID':6};","map":{"version":3,"names":["exports","randomBytes","rng","pseudoRandomBytes","prng","require","createHash","Hash","createHmac","Hmac","algos","algoKeys","Object","keys","hashes","concat","getHashes","p","pbkdf2","pbkdf2Sync","aes","Cipher","createCipher","Cipheriv","createCipheriv","Decipher","createDecipher","Decipheriv","createDecipheriv","getCiphers","listCiphers","dh","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","createDiffieHellman","DiffieHellman","sign","createSign","Sign","createVerify","Verify","createECDH","publicEncrypt","privateEncrypt","publicDecrypt","privateDecrypt","rf","randomFill","randomFillSync","createCredentials","Error","join","constants"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/crypto-browserify/index.js"],"sourcesContent":["'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}