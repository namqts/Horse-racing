{"ast":null,"code":"var generatePrime=require(\"./lib/generatePrime\");var primes=require(\"./lib/primes.json\");var DH=require(\"./lib/dh\");function getDiffieHellman(mod){var prime=new Buffer(primes[mod].prime,'hex');var gen=new Buffer(primes[mod].gen,'hex');return new DH(prime,gen);}var ENCODINGS={'binary':true,'hex':true,'base64':true};function createDiffieHellman(prime,enc,generator,genc){if(Buffer.isBuffer(enc)||ENCODINGS[enc]===undefined){return createDiffieHellman(prime,'binary',enc,generator);}enc=enc||'binary';genc=genc||'binary';generator=generator||new Buffer([2]);if(!Buffer.isBuffer(generator)){generator=new Buffer(generator,genc);}if(typeof prime==='number'){return new DH(generatePrime(prime,generator),generator,true);}if(!Buffer.isBuffer(prime)){prime=new Buffer(prime,enc);}return new DH(prime,generator,true);}exports.DiffieHellmanGroup=exports.createDiffieHellmanGroup=exports.getDiffieHellman=getDiffieHellman;exports.createDiffieHellman=exports.DiffieHellman=createDiffieHellman;","map":{"version":3,"names":["generatePrime","require","primes","DH","getDiffieHellman","mod","prime","Buffer","gen","ENCODINGS","createDiffieHellman","enc","generator","genc","isBuffer","undefined","exports","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/diffie-hellman/browser.js"],"sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n"],"mappings":"AAAA,GAAIA,cAAa,CAAGC,OAAO,uBAAuB,CAClD,GAAIC,OAAM,CAAGD,OAAO,qBAAqB,CAEzC,GAAIE,GAAE,CAAGF,OAAO,YAAY,CAE5B,QAASG,iBAAgB,CAAEC,GAAG,CAAE,CAC9B,GAAIC,MAAK,CAAG,GAAIC,OAAM,CAACL,MAAM,CAACG,GAAG,CAAC,CAACC,KAAK,CAAE,KAAK,CAAC,CAChD,GAAIE,IAAG,CAAG,GAAID,OAAM,CAACL,MAAM,CAACG,GAAG,CAAC,CAACG,GAAG,CAAE,KAAK,CAAC,CAE5C,MAAO,IAAIL,GAAE,CAACG,KAAK,CAAEE,GAAG,CAAC,CAC3B,CAEA,GAAIC,UAAS,CAAG,CACd,QAAQ,CAAE,IAAI,CAAE,KAAK,CAAE,IAAI,CAAE,QAAQ,CAAE,IACzC,CAAC,CAED,QAASC,oBAAmB,CAAEJ,KAAK,CAAEK,GAAG,CAAEC,SAAS,CAAEC,IAAI,CAAE,CACzD,GAAIN,MAAM,CAACO,QAAQ,CAACH,GAAG,CAAC,EAAIF,SAAS,CAACE,GAAG,CAAC,GAAKI,SAAS,CAAE,CACxD,MAAOL,oBAAmB,CAACJ,KAAK,CAAE,QAAQ,CAAEK,GAAG,CAAEC,SAAS,CAAC,CAC7D,CAEAD,GAAG,CAAGA,GAAG,EAAI,QAAQ,CACrBE,IAAI,CAAGA,IAAI,EAAI,QAAQ,CACvBD,SAAS,CAAGA,SAAS,EAAI,GAAIL,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAExC,GAAI,CAACA,MAAM,CAACO,QAAQ,CAACF,SAAS,CAAC,CAAE,CAC/BA,SAAS,CAAG,GAAIL,OAAM,CAACK,SAAS,CAAEC,IAAI,CAAC,CACzC,CAEA,GAAI,MAAOP,MAAK,GAAK,QAAQ,CAAE,CAC7B,MAAO,IAAIH,GAAE,CAACH,aAAa,CAACM,KAAK,CAAEM,SAAS,CAAC,CAAEA,SAAS,CAAE,IAAI,CAAC,CACjE,CAEA,GAAI,CAACL,MAAM,CAACO,QAAQ,CAACR,KAAK,CAAC,CAAE,CAC3BA,KAAK,CAAG,GAAIC,OAAM,CAACD,KAAK,CAAEK,GAAG,CAAC,CAChC,CAEA,MAAO,IAAIR,GAAE,CAACG,KAAK,CAAEM,SAAS,CAAE,IAAI,CAAC,CACvC,CAEAI,OAAO,CAACC,kBAAkB,CAAGD,OAAO,CAACE,wBAAwB,CAAGF,OAAO,CAACZ,gBAAgB,CAAGA,gBAAgB,CAC3GY,OAAO,CAACN,mBAAmB,CAAGM,OAAO,CAACG,aAAa,CAAGT,mBAAmB"},"metadata":{},"sourceType":"script"}