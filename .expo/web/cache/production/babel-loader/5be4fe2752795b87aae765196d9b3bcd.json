{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"value\"],_excluded2=[\"children\",\"onPress\",\"_icon\",\"_text\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo,useContext}from'react';import{CheckIcon}from\"../../primitives/Icon/Icons\";import Text from\"../../primitives/Text\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import MenuItem from\"./MenuItem\";import{MenuOptionContext}from\"./MenuOptionGroup\";import{useMenuOptionItem}from\"./useMenu\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var MenuItemOption=function MenuItemOption(_ref,ref){var value=_ref.value,props=_objectWithoutProperties(_ref,_excluded);var _useContext=useContext(MenuOptionContext),values=_useContext.values,onChange=_useContext.onChange,type=_useContext.type;var isChecked=values.includes(value);var menuOptionProps=useMenuOptionItem({isChecked:isChecked,type:type});var _usePropsResolution=usePropsResolution('MenuItem',props,{isChecked:isChecked}),children=_usePropsResolution.children,onPress=_usePropsResolution.onPress,_icon=_usePropsResolution._icon,_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var modifiedOnPress=function modifiedOnPress(e){onChange(value);onPress&&onPress(e);};if(useHasResponsiveProps(props)){return null;}return React.createElement(MenuItem,_extends({},resolvedProps,menuOptionProps,{accessibilityRole:\"button\",onPress:modifiedOnPress,ref:ref}),React.createElement(CheckIcon,_icon),React.Children.map(children,function(child,index){if(typeof child==='string'||typeof child==='number'){return React.createElement(Text,_extends({key:\"menu-item-option-\".concat(index)},_text),child);}else{return child;}}));};export default memo(forwardRef(MenuItemOption));","map":{"version":3,"sources":["MenuItemOption.tsx"],"names":["React","forwardRef","memo","useContext","CheckIcon","Text","usePropsResolution","MenuItem","MenuOptionContext","useMenuOptionItem","useHasResponsiveProps","MenuItemOption","value","props","ref","values","onChange","type","isChecked","includes","menuOptionProps","children","onPress","_icon","_text","resolvedProps","modifiedOnPress","e","Children","map","child","index"],"mappings":"sbAAA,MAAOA,MAAP,EAAgBC,UAAhB,CAA4BC,IAA5B,CAAkCC,UAAlC,KAAoD,OAApD,CACA,OAASC,SAAT,mCACA,MAAOC,KAAP,6BACA,OAASC,kBAAT,oCACA,MAAOC,SAAP,kBAEA,OAASC,iBAAT,yBACA,OAASC,iBAAT,iBACA,OAASC,qBAAT,4CAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAc,MAElBG,GAFqB,CAGlB,IAFDF,MAAF,MAAEA,KAAF,CAAYC,KAAAA,0CAGZ,gBAA4DV,UAAU,CACpEK,iBADoE,CAAtE,CAAQO,MAAF,aAAEA,MAAF,CAAUC,QAAV,aAAUA,QAAV,CAAoBC,IAAAA,aAAAA,IAAAA,CAG1B,GAAMC,UAAS,CAAGH,MAAM,CAACI,QAAPJ,CAAgBH,KAAhBG,CAAlB,CACA,GAAMK,gBAAe,CAAGX,iBAAiB,CAAC,CAAES,SAAF,CAAEA,SAAF,CAAaD,IAAAA,CAAAA,IAAb,CAAD,CAAzC,CACA,wBAMIX,kBAAkB,CAAC,UAAD,CAAaO,KAAb,CAAoB,CAAEK,SAAAA,CAAAA,SAAF,CAApB,CANtB,CACEG,QADI,qBACJA,QADI,CAEJC,OAFI,qBAEJA,OAFI,CAGJC,KAHI,qBAGJA,KAHI,CAIJC,KAJI,qBAIJA,KAJI,CAKDC,aAAAA,0DAGL,GAAMC,gBAAe,CAAIC,QAAnBD,gBAAe,CAAIC,CAAD,CAAY,CAClCX,QAAQ,CAACJ,KAAD,CAARI,CACAM,OAAO,EAAIA,OAAO,CAACK,CAAD,CAAlBL,CACD,CAjBE,CAoBH,GAAIZ,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,MAAA,CAAA,aAAA,CAAC,QAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMY,aADN,CAEML,eAFN,CAAA,CAGE,iBAAiB,CAAC,QAHpB,CAIE,OAAO,CAAEM,eAJX,CAKE,GAAG,CAAEZ,GALP,CAAA,CAAA,CAOE,KAAA,CAAA,aAAA,CAAC,SAAD,CAAeS,KAAf,CAPF,CAQG,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,CAA6B,SAACS,KAAD,CAAQC,KAAR,CAAuB,CACnD,GAAI,MAAOD,MAAP,GAAiB,QAAjB,EAA6B,MAAOA,MAAP,GAAiB,QAAlD,CAA4D,CAC1D,MACE,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,QAAA,CAAA,CAAM,GAAG,CAAA,mBAAA,CAAA,MAAA,CAAsBC,KAAtB,CAAT,CAAA,CAA4CP,KAA5C,CAAA,CACGM,KADH,CADF,CAKD,CAND,IAMO,CACL,MAAOA,MAAP,CACD,CACF,CAVA,CARH,CADF,CAsBD,CAhDD,CAkDA,cAAe5B,KAAI,CAACD,UAAU,CAACU,cAAD,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo, useContext } from 'react';\nimport { CheckIcon } from '../../primitives/Icon/Icons';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport MenuItem from './MenuItem';\nimport type { IMenuItemOptionProps, IMenuOptionContextProps } from './types';\nimport { MenuOptionContext } from './MenuOptionGroup';\nimport { useMenuOptionItem } from './useMenu';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItemOption = (\n  { value, ...props }: IMenuItemOptionProps,\n  ref: any\n) => {\n  const { values, onChange, type }: IMenuOptionContextProps = useContext(\n    MenuOptionContext\n  );\n  const isChecked = values.includes(value);\n  const menuOptionProps = useMenuOptionItem({ isChecked, type });\n  const {\n    children,\n    onPress,\n    _icon,\n    _text,\n    ...resolvedProps\n  } = usePropsResolution('MenuItem', props, { isChecked });\n\n  const modifiedOnPress = (e: any) => {\n    onChange(value);\n    onPress && onPress(e);\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuItem\n      {...resolvedProps}\n      {...menuOptionProps}\n      accessibilityRole=\"button\"\n      onPress={modifiedOnPress}\n      ref={ref}\n    >\n      <CheckIcon {..._icon} />\n      {React.Children.map(children, (child, index: any) => {\n        if (typeof child === 'string' || typeof child === 'number') {\n          return (\n            <Text key={`menu-item-option-${index}`} {..._text}>\n              {child}\n            </Text>\n          );\n        } else {\n          return child;\n        }\n      })}\n    </MenuItem>\n  );\n};\n\nexport default memo(forwardRef(MenuItemOption));\n"]},"metadata":{},"sourceType":"module"}