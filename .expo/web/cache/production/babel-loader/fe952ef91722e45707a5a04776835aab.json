{"ast":null,"code":"import React,{useMemo}from'react';import Svg,{Defs,G,Path,Rect,Image,ClipPath,LinearGradient,Stop}from'react-native-svg';import genMatrix from\"./genMatrix\";import transformMatrixIntoPath from\"./transformMatrixIntoPath\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var renderLogo=function renderLogo(_ref){var size=_ref.size,logo=_ref.logo,logoSize=_ref.logoSize,logoBackgroundColor=_ref.logoBackgroundColor,logoMargin=_ref.logoMargin,logoBorderRadius=_ref.logoBorderRadius;var logoPosition=(size-logoSize-logoMargin*2)/2;var logoBackgroundSize=logoSize+logoMargin*2;var logoBackgroundBorderRadius=logoBorderRadius+logoMargin/logoSize*logoBorderRadius;return _jsxs(G,{x:logoPosition,y:logoPosition,children:[_jsxs(Defs,{children:[_jsx(ClipPath,{id:\"clip-logo-background\",children:_jsx(Rect,{width:logoBackgroundSize,height:logoBackgroundSize,rx:logoBackgroundBorderRadius,ry:logoBackgroundBorderRadius})}),_jsx(ClipPath,{id:\"clip-logo\",children:_jsx(Rect,{width:logoSize,height:logoSize,rx:logoBorderRadius,ry:logoBorderRadius})})]}),_jsx(G,{children:_jsx(Rect,{width:logoBackgroundSize,height:logoBackgroundSize,fill:logoBackgroundColor,clipPath:\"url(#clip-logo-background)\"})}),_jsx(G,{x:logoMargin,y:logoMargin,children:_jsx(Image,{width:logoSize,height:logoSize,preserveAspectRatio:\"xMidYMid slice\",href:logo,clipPath:\"url(#clip-logo)\"})})]});};var QRCode=function QRCode(_ref2){var _ref2$value=_ref2.value,value=_ref2$value===void 0?'this is a QR code':_ref2$value,_ref2$size=_ref2.size,size=_ref2$size===void 0?100:_ref2$size,_ref2$color=_ref2.color,color=_ref2$color===void 0?'black':_ref2$color,_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?'white':_ref2$backgroundColor,logo=_ref2.logo,_ref2$logoSize=_ref2.logoSize,logoSize=_ref2$logoSize===void 0?size*0.2:_ref2$logoSize,_ref2$logoBackgroundC=_ref2.logoBackgroundColor,logoBackgroundColor=_ref2$logoBackgroundC===void 0?'transparent':_ref2$logoBackgroundC,_ref2$logoMargin=_ref2.logoMargin,logoMargin=_ref2$logoMargin===void 0?2:_ref2$logoMargin,_ref2$logoBorderRadiu=_ref2.logoBorderRadius,logoBorderRadius=_ref2$logoBorderRadiu===void 0?0:_ref2$logoBorderRadiu,_ref2$quietZone=_ref2.quietZone,quietZone=_ref2$quietZone===void 0?0:_ref2$quietZone,_ref2$enableLinearGra=_ref2.enableLinearGradient,enableLinearGradient=_ref2$enableLinearGra===void 0?false:_ref2$enableLinearGra,_ref2$gradientDirecti=_ref2.gradientDirection,gradientDirection=_ref2$gradientDirecti===void 0?['0%','0%','100%','100%']:_ref2$gradientDirecti,_ref2$linearGradient=_ref2.linearGradient,linearGradient=_ref2$linearGradient===void 0?['rgb(255,0,0)','rgb(0,255,255)']:_ref2$linearGradient,_ref2$ecl=_ref2.ecl,ecl=_ref2$ecl===void 0?'M':_ref2$ecl,getRef=_ref2.getRef,onError=_ref2.onError;var result=useMemo(function(){try{return transformMatrixIntoPath(genMatrix(value,ecl),size);}catch(error){if(onError&&typeof onError==='function'){onError(error);}else{throw error;}}},[value,size,ecl]);if(!result){return null;}var path=result.path,cellSize=result.cellSize;return _jsxs(Svg,{ref:getRef,viewBox:[-quietZone,-quietZone,size+quietZone*2,size+quietZone*2].join(' '),width:size,height:size,children:[_jsx(Defs,{children:_jsxs(LinearGradient,{id:\"grad\",x1:gradientDirection[0],y1:gradientDirection[1],x2:gradientDirection[2],y2:gradientDirection[3],children:[_jsx(Stop,{offset:\"0\",stopColor:linearGradient[0],stopOpacity:\"1\"}),_jsx(Stop,{offset:\"1\",stopColor:linearGradient[1],stopOpacity:\"1\"})]})}),_jsx(G,{children:_jsx(Rect,{x:-quietZone,y:-quietZone,width:size+quietZone*2,height:size+quietZone*2,fill:backgroundColor})}),_jsx(G,{children:_jsx(Path,{d:path,stroke:enableLinearGradient?'url(#grad)':color,strokeWidth:cellSize})}),logo&&renderLogo({size:size,logo:logo,logoSize:logoSize,logoBackgroundColor:logoBackgroundColor,logoMargin:logoMargin,logoBorderRadius:logoBorderRadius})]});};export default QRCode;","map":{"version":3,"names":["React","useMemo","Svg","Defs","G","Path","Rect","Image","ClipPath","LinearGradient","Stop","genMatrix","transformMatrixIntoPath","renderLogo","size","logo","logoSize","logoBackgroundColor","logoMargin","logoBorderRadius","logoPosition","logoBackgroundSize","logoBackgroundBorderRadius","QRCode","value","color","backgroundColor","quietZone","enableLinearGradient","gradientDirection","linearGradient","ecl","getRef","onError","result","error","path","cellSize","join"],"sources":["D:/Horse-racing/node_modules/react-native-qrcode-svg/src/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport Svg, {\n  Defs,\n  G,\n  Path,\n  Rect,\n  Image,\n  ClipPath,\n  LinearGradient,\n  Stop\n} from 'react-native-svg'\nimport genMatrix from './genMatrix'\nimport transformMatrixIntoPath from './transformMatrixIntoPath'\n\nconst renderLogo = ({\n  size,\n  logo,\n  logoSize,\n  logoBackgroundColor,\n  logoMargin,\n  logoBorderRadius\n}) => {\n  const logoPosition = (size - logoSize - logoMargin * 2) / 2\n  const logoBackgroundSize = logoSize + logoMargin * 2\n  const logoBackgroundBorderRadius =\n    logoBorderRadius + (logoMargin / logoSize) * logoBorderRadius\n\n  return (\n    <G x={logoPosition} y={logoPosition}>\n      <Defs>\n        <ClipPath id='clip-logo-background'>\n          <Rect\n            width={logoBackgroundSize}\n            height={logoBackgroundSize}\n            rx={logoBackgroundBorderRadius}\n            ry={logoBackgroundBorderRadius}\n          />\n        </ClipPath>\n        <ClipPath id='clip-logo'>\n          <Rect\n            width={logoSize}\n            height={logoSize}\n            rx={logoBorderRadius}\n            ry={logoBorderRadius}\n          />\n        </ClipPath>\n      </Defs>\n      <G>\n        <Rect\n          width={logoBackgroundSize}\n          height={logoBackgroundSize}\n          fill={logoBackgroundColor}\n          clipPath='url(#clip-logo-background)'\n        />\n      </G>\n      <G x={logoMargin} y={logoMargin}>\n        <Image\n          width={logoSize}\n          height={logoSize}\n          preserveAspectRatio='xMidYMid slice'\n          href={logo}\n          clipPath='url(#clip-logo)'\n        />\n      </G>\n    </G>\n  )\n}\n\nconst QRCode = ({\n  value = 'this is a QR code',\n  size = 100,\n  color = 'black',\n  backgroundColor = 'white',\n  logo,\n  logoSize = size * 0.2,\n  logoBackgroundColor = 'transparent',\n  logoMargin = 2,\n  logoBorderRadius = 0,\n  quietZone = 0,\n  enableLinearGradient = false,\n  gradientDirection = ['0%', '0%', '100%', '100%'],\n  linearGradient = ['rgb(255,0,0)', 'rgb(0,255,255)'],\n  ecl = 'M',\n  getRef,\n  onError\n}) => {\n  const result = useMemo(() => {\n    try {\n      return transformMatrixIntoPath(genMatrix(value, ecl), size)\n    } catch (error) {\n      if (onError && typeof onError === 'function') {\n        onError(error)\n      } else {\n        // Pass the error when no handler presented\n        throw error\n      }\n    }\n  }, [value, size, ecl])\n\n  if (!result) {\n    return null\n  }\n\n  const { path, cellSize } = result\n\n  return (\n    <Svg\n      ref={getRef}\n      viewBox={[\n        -quietZone,\n        -quietZone,\n        size + quietZone * 2,\n        size + quietZone * 2\n      ].join(' ')}\n      width={size}\n      height={size}\n    >\n      <Defs>\n        <LinearGradient\n          id='grad'\n          x1={gradientDirection[0]}\n          y1={gradientDirection[1]}\n          x2={gradientDirection[2]}\n          y2={gradientDirection[3]}\n        >\n          <Stop offset='0' stopColor={linearGradient[0]} stopOpacity='1' />\n          <Stop offset='1' stopColor={linearGradient[1]} stopOpacity='1' />\n        </LinearGradient>\n      </Defs>\n      <G>\n        <Rect\n          x={-quietZone}\n          y={-quietZone}\n          width={size + quietZone * 2}\n          height={size + quietZone * 2}\n          fill={backgroundColor}\n        />\n      </G>\n      <G>\n        <Path\n          d={path}\n          stroke={enableLinearGradient ? 'url(#grad)' : color}\n          strokeWidth={cellSize}\n        />\n      </G>\n      {logo &&\n        renderLogo({\n          size,\n          logo,\n          logoSize,\n          logoBackgroundColor,\n          logoMargin,\n          logoBorderRadius\n        })}\n    </Svg>\n  )\n}\n\nexport default QRCode\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}