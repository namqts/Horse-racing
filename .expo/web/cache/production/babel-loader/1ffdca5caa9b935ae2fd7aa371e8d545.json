{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";var PortalContext=React.createContext(null);var globalOverlayCounter=0;export function PortalProvider(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),items=_React$useState2[0],setItems=_React$useState2[1];var setOverlayItem=function setOverlayItem(item){var overlayId=++globalOverlayCounter;setItems(function(prev){return prev.concat([{id:overlayId,node:item}]);});return overlayId;};var updateOverlayItem=function updateOverlayItem(id,node){setItems(function(prev){return prev.map(function(item){if(item.id===id){return{id:id,node:node};}return item;});});};var removeOverlayItem=function removeOverlayItem(id){setItems(function(prev){var newItems=prev.filter(function(item){return item.id!==id;});return newItems;});};return React.createElement(PortalContext.Provider,{value:{items:items,setOverlayItem:setOverlayItem,removeOverlayItem:removeOverlayItem,updateOverlayItem:updateOverlayItem}},props.children,items.map(function(item){return React.createElement(React.Fragment,{key:item.id},item.node);}));}function OverlayView(_ref){var style=_ref.style,props=_objectWithoutProperties(_ref,_excluded);return React.createElement(View,_extends({pointerEvents:\"box-none\",style:[StyleSheet.absoluteFill,style],collapsable:false},props));}export var OverlayProvider=PortalProvider;export function OverlayContainer(props){var context=usePortalProvider();var overlayId=React.useRef(undefined);var contents=React.createElement(OverlayView,props);useEffect(function(){if(overlayId.current===undefined){overlayId.current=context===null||context===void 0?void 0:context.setOverlayItem(contents);}else{if(overlayId.current){context===null||context===void 0?void 0:context.updateOverlayItem(overlayId.current,contents);}}},[props]);useEffect(function(){return function(){if(overlayId.current){context===null||context===void 0?void 0:context.removeOverlayItem(overlayId.current);}};},[]);return null;}function usePortalProvider(){var context=React.useContext(PortalContext);return context;}","map":{"version":3,"sources":["Portal.tsx"],"names":["React","useEffect","PortalContext","createContext","globalOverlayCounter","PortalProvider","props","items","setItems","useState","setOverlayItem","item","overlayId","prev","concat","id","node","updateOverlayItem","map","removeOverlayItem","newItems","filter","children","OverlayView","style","StyleSheet","absoluteFill","OverlayProvider","OverlayContainer","context","usePortalProvider","useRef","undefined","contents","current","useContext"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\n\ntype OverlayItem = {\n  id: number;\n  node: ReactNode;\n};\n\ninterface PortalContext {\n  items: Array<OverlayItem>;\n  setOverlayItem: (node: ReactNode) => number;\n  removeOverlayItem: (id: number) => void;\n  updateOverlayItem: (id: number, node: ReactNode) => void;\n}\n\ninterface ModalProviderProps extends ViewProps {\n  children: ReactNode;\n  provider?: boolean;\n}\n\nconst PortalContext = React.createContext<PortalContext | null>(null);\n\nlet globalOverlayCounter = 0;\n\nexport function PortalProvider(props: { children: ReactNode }) {\n  const [items, setItems] = React.useState<Array<OverlayItem>>([]);\n\n  const setOverlayItem = (item: ReactNode) => {\n    const overlayId = ++globalOverlayCounter;\n    setItems((prev) => prev.concat([{ id: overlayId, node: item }]));\n    return overlayId;\n  };\n\n  const updateOverlayItem = (id: number, node: ReactNode) => {\n    setItems((prev) =>\n      prev.map((item) => {\n        if (item.id === id) {\n          return { id, node };\n        }\n        return item;\n      })\n    );\n  };\n\n  const removeOverlayItem = (id: number) => {\n    setItems((prev) => {\n      const newItems = prev.filter((item) => item.id !== id);\n      return newItems;\n    });\n  };\n\n  return (\n    <PortalContext.Provider\n      value={{ items, setOverlayItem, removeOverlayItem, updateOverlayItem }}\n    >\n      {props.children}\n\n      {/* Render Overlays */}\n      {items.map((item) => {\n        return <React.Fragment key={item.id}>{item.node}</React.Fragment>;\n      })}\n    </PortalContext.Provider>\n  );\n}\n\nfunction OverlayView({style, ...props}: ModalProviderProps) {\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[StyleSheet.absoluteFill, style]}\n      collapsable={false}\n      {...props}\n    />\n  );\n}\n\nexport const OverlayProvider = PortalProvider;\n\nexport function OverlayContainer(props: ModalProviderProps) {\n  const context = usePortalProvider();\n  const overlayId = React.useRef<number | undefined>(undefined);\n  let contents = <OverlayView {...props} />;\n\n  useEffect(\n    () => {\n      // Mount\n      if (overlayId.current === undefined) {\n        overlayId.current = context?.setOverlayItem(contents);\n      }\n      // Update\n      else {\n        if (overlayId.current) {\n          context?.updateOverlayItem(overlayId.current, contents);\n        }\n      }\n    },\n    // To re-render the child\n    [props]\n  );\n\n  // Unmount\n  useEffect(() => {\n    return () => {\n      if (overlayId.current) {\n        context?.removeOverlayItem(overlayId.current);\n      }\n    };\n  }, []);\n\n  return null;\n}\n\nfunction usePortalProvider() {\n  const context = React.useContext(PortalContext);\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}