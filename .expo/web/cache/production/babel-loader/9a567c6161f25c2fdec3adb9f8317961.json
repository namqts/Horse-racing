{"ast":null,"code":"var asn1=require(\"./asn1\");var aesid=require(\"./aesid.json\");var fixProc=require(\"./fixProc\");var ciphers=require('browserify-aes');var compat=require('pbkdf2');var Buffer=require('safe-buffer').Buffer;module.exports=parseKeys;function parseKeys(buffer){var password;if(typeof buffer==='object'&&!Buffer.isBuffer(buffer)){password=buffer.passphrase;buffer=buffer.key;}if(typeof buffer==='string'){buffer=Buffer.from(buffer);}var stripped=fixProc(buffer,password);var type=stripped.tag;var data=stripped.data;var subtype,ndata;switch(type){case'CERTIFICATE':ndata=asn1.certificate.decode(data,'der').tbsCertificate.subjectPublicKeyInfo;case'PUBLIC KEY':if(!ndata){ndata=asn1.PublicKey.decode(data,'der');}subtype=ndata.algorithm.algorithm.join('.');switch(subtype){case'1.2.840.113549.1.1.1':return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data,'der');case'1.2.840.10045.2.1':ndata.subjectPrivateKey=ndata.subjectPublicKey;return{type:'ec',data:ndata};case'1.2.840.10040.4.1':ndata.algorithm.params.pub_key=asn1.DSAparam.decode(ndata.subjectPublicKey.data,'der');return{type:'dsa',data:ndata.algorithm.params};default:throw new Error('unknown key id '+subtype);}case'ENCRYPTED PRIVATE KEY':data=asn1.EncryptedPrivateKey.decode(data,'der');data=decrypt(data,password);case'PRIVATE KEY':ndata=asn1.PrivateKey.decode(data,'der');subtype=ndata.algorithm.algorithm.join('.');switch(subtype){case'1.2.840.113549.1.1.1':return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey,'der');case'1.2.840.10045.2.1':return{curve:ndata.algorithm.curve,privateKey:asn1.ECPrivateKey.decode(ndata.subjectPrivateKey,'der').privateKey};case'1.2.840.10040.4.1':ndata.algorithm.params.priv_key=asn1.DSAparam.decode(ndata.subjectPrivateKey,'der');return{type:'dsa',params:ndata.algorithm.params};default:throw new Error('unknown key id '+subtype);}case'RSA PUBLIC KEY':return asn1.RSAPublicKey.decode(data,'der');case'RSA PRIVATE KEY':return asn1.RSAPrivateKey.decode(data,'der');case'DSA PRIVATE KEY':return{type:'dsa',params:asn1.DSAPrivateKey.decode(data,'der')};case'EC PRIVATE KEY':data=asn1.ECPrivateKey.decode(data,'der');return{curve:data.parameters.value,privateKey:data.privateKey};default:throw new Error('unknown key type '+type);}}parseKeys.signature=asn1.signature;function decrypt(data,password){var salt=data.algorithm.decrypt.kde.kdeparams.salt;var iters=parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(),10);var algo=aesid[data.algorithm.decrypt.cipher.algo.join('.')];var iv=data.algorithm.decrypt.cipher.iv;var cipherText=data.subjectPrivateKey;var keylen=parseInt(algo.split('-')[1],10)/8;var key=compat.pbkdf2Sync(password,salt,iters,keylen,'sha1');var cipher=ciphers.createDecipheriv(algo,key,iv);var out=[];out.push(cipher.update(cipherText));out.push(cipher.final());return Buffer.concat(out);}","map":{"version":3,"names":["asn1","require","aesid","fixProc","ciphers","compat","Buffer","module","exports","parseKeys","buffer","password","isBuffer","passphrase","key","from","stripped","type","tag","data","subtype","ndata","certificate","decode","tbsCertificate","subjectPublicKeyInfo","PublicKey","algorithm","join","RSAPublicKey","subjectPublicKey","subjectPrivateKey","params","pub_key","DSAparam","Error","EncryptedPrivateKey","decrypt","PrivateKey","RSAPrivateKey","curve","privateKey","ECPrivateKey","priv_key","DSAPrivateKey","parameters","value","signature","salt","kde","kdeparams","iters","parseInt","toString","algo","cipher","iv","cipherText","keylen","split","pbkdf2Sync","createDecipheriv","out","push","update","final","concat"],"sources":["C:/Users/Nam-QTS/AppData/Roaming/nvm/v14.18.1/node_modules/expo-cli/node_modules/parse-asn1/index.js"],"sourcesContent":["var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}