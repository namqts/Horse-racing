{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Box}from\"../../primitives\";import{WarningIcon,WarningTwoIcon,InfoIcon,CheckCircleIcon}from\"../../primitives/Icon/Icons\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{AlertContext}from\"./Context\";import{omitUndefined}from\"../../../theme/tools/utils\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AlertIcon=function AlertIcon(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var newProps=usePropsResolution('AlertIcon',props);newProps=omitUndefined(newProps);var _React$useContext=React.useContext(AlertContext),status=_React$useContext.status,_icon=_React$useContext._icon;var getIcon=function getIcon(){switch(status){case'error':return React.createElement(WarningTwoIcon,_extends({},_icon,newProps,{ref:ref}));case'warning':return React.createElement(WarningIcon,_extends({},_icon,newProps,{ref:ref}));case'success':return React.createElement(CheckCircleIcon,_extends({},_icon,newProps,{ref:ref}));default:return React.createElement(InfoIcon,_extends({},_icon,newProps,{ref:ref}));}};if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,null,children||getIcon());};export default memo(forwardRef(AlertIcon));","map":{"version":3,"sources":["AlertIcon.tsx"],"names":["React","memo","forwardRef","Box","WarningIcon","WarningTwoIcon","InfoIcon","CheckCircleIcon","usePropsResolution","AlertContext","omitUndefined","useHasResponsiveProps","AlertIcon","children","props","ref","newProps","status","_icon","useContext","getIcon"],"mappings":"uYAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,OAASC,GAAT,wBACA,OACEC,WADF,CAEEC,cAFF,CAGEC,QAHF,CAIEC,eAJF,mCAOA,OAASC,kBAAT,oCACA,OAASC,YAAT,iBACA,OAASC,aAAT,kCACA,OAASC,qBAAT,4CAEA,GAAMC,UAAS,CAAG,QAAZA,UAAS,MAA6CG,GAA1C,CAAwD,IAArDF,SAAF,MAAEA,QAAF,CAAeC,KAAAA,0CAChC,GAAIE,SAAQ,CAAGR,kBAAkB,CAAC,WAAD,CAAcM,KAAd,CAAjC,CACAE,QAAQ,CAAGN,aAAa,CAACM,QAAD,CAAxBA,CACA,sBAAyChB,KAAK,CAACmB,UAANnB,CAAiBS,YAAjBT,CAAzC,CAAQiB,MAAF,mBAAEA,MAAF,CAAUC,KAAAA,mBAAAA,KAAAA,CAChB,GAAME,QAAO,CAAG,QAAVA,QAAO,EAAS,CACpB,OAAQH,MAAR,EACE,IAAK,OAAL,CACE,MAAO,MAAA,CAAA,aAAA,CAAC,cAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAoBC,KAApB,CAA+BF,QAA/B,CAAA,CAAyC,GAAG,CAAED,GAA9C,CAAA,CAAA,CAAP,CACF,IAAK,SAAL,CACE,MAAO,MAAA,CAAA,aAAA,CAAC,WAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAiBG,KAAjB,CAA4BF,QAA5B,CAAA,CAAsC,GAAG,CAAED,GAA3C,CAAA,CAAA,CAAP,CACF,IAAK,SAAL,CACE,MAAO,MAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAqBG,KAArB,CAAgCF,QAAhC,CAAA,CAA0C,GAAG,CAAED,GAA/C,CAAA,CAAA,CAAP,CACF,QACE,MAAO,MAAA,CAAA,aAAA,CAAC,QAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAcG,KAAd,CAAyBF,QAAzB,CAAA,CAAmC,GAAG,CAAED,GAAxC,CAAA,CAAA,CAAP,CAAA,CAEL,CAfuE,CAiBxE,GAAIJ,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,MAAA,CAAA,aAAA,CAAC,GAAD,CAAA,IAAA,CAAMD,QAAQ,EAAIO,OAAO,EAAzB,CAAP,CACD,CArBD,CAsBA,cAAenB,KAAI,CAACC,UAAU,CAACU,SAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box } from '../../primitives';\nimport {\n  WarningIcon,\n  WarningTwoIcon,\n  InfoIcon,\n  CheckCircleIcon,\n} from '../../primitives/Icon/Icons';\nimport type { IAlertContext, IAlertIconProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { AlertContext } from './Context';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertIcon = ({ children, ...props }: IAlertIconProps, ref?: any) => {\n  let newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n  const { status, _icon }: IAlertContext = React.useContext(AlertContext);\n  const getIcon = () => {\n    switch (status) {\n      case 'error':\n        return <WarningTwoIcon {..._icon} {...newProps} ref={ref} />;\n      case 'warning':\n        return <WarningIcon {..._icon} {...newProps} ref={ref} />;\n      case 'success':\n        return <CheckCircleIcon {..._icon} {...newProps} ref={ref} />;\n      default:\n        return <InfoIcon {..._icon} {...newProps} ref={ref} />;\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box>{children || getIcon()}</Box>;\n};\nexport default memo(forwardRef(AlertIcon));\n"]},"metadata":{},"sourceType":"module"}