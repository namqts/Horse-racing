{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{atomic}from\"../react-native-web-fucntions/atomic\";import preprocess from\"../react-native-web-fucntions/preprocess\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import stableHash from'stable-hash';import hash from\"./hash\";import{useStableMemo}from\"./useStableMemo\";import{getResponsiveStylesImpl,useDimensionsWithEnable}from\"./common\";import{ResponsiveQueryContext}from\"./ResponsiveQueryProvider\";import React from'react';var textContentMap={};export var useResponsiveQuery=function useResponsiveQuery(queries){var _queries$disableCSSMe;var responsiveQueryContext=React.useContext(ResponsiveQueryContext);var disableCSSMediaQueries=(_queries$disableCSSMe=queries===null||queries===void 0?void 0:queries.disableCSSMediaQueries)!==null&&_queries$disableCSSMe!==void 0?_queries$disableCSSMe:responsiveQueryContext.disableCSSMediaQueries;var windowWidth=useDimensionsWithEnable({enable:disableCSSMediaQueries}).width;var values=useStableMemo(function(){if(disableCSSMediaQueries){var _getResponsiveStyles=getResponsiveStylesImpl(windowWidth);if(queries){var _getResponsiveStyles2=_getResponsiveStyles(queries),styles=_getResponsiveStyles2.styles;return{styles:styles,getResponsiveStyles:_getResponsiveStyles};}else{return{getResponsiveStyles:_getResponsiveStyles};}}else{if(queries){var _getResponsiveStyles3=getResponsiveStyles(queries),_styles=_getResponsiveStyles3.styles,dataSet=_getResponsiveStyles3.dataSet;return{dataSet:dataSet,styles:_styles,getResponsiveStyles:getResponsiveStyles};}else{return{getResponsiveStyles:getResponsiveStyles};}}},[queries,windowWidth,disableCSSMediaQueries]);return values;};var getDataAttribute=function getDataAttribute(queryRule){if(typeof queryRule.minWidth==='number'&&typeof queryRule.maxWidth==='number'){return\"min-width-\".concat(queryRule.minWidth,\"-max-width-\").concat(queryRule.maxWidth);}else if(typeof queryRule.minWidth==='number'){return\"min-width-\".concat(queryRule.minWidth);}else if(typeof queryRule.maxWidth==='number'){return\"max-width-\".concat(queryRule.maxWidth);}return undefined;};var getMediaQueryRule=function getMediaQueryRule(query,newRule){if(typeof query.minWidth==='number'&&typeof query.maxWidth==='number'){return\"@media only screen and (min-width: \".concat(query.minWidth,\"px) and (max-width: \").concat(query.maxWidth,\"px) { \").concat(newRule,\" }\");}else if(typeof query.minWidth==='number'){return\"@media only screen and (min-width: \".concat(query.minWidth,\"px) { \").concat(newRule,\" }\");}else if(typeof query.maxWidth==='number'){return\"@media only screen and (max-width: \".concat(query.maxWidth,\"px) { \").concat(newRule,\" }\");}return undefined;};var getResponsiveStyles=function getResponsiveStyles(queries){var queryString=stableHash(queries.query);var queriesHash=hash(queryString);var styles=queries.initial?[StyleSheet.create({initial:StyleSheet.flatten(queries.initial)}).initial]:undefined;var dataSet={};var styleSheet;var insert=function insert(rule){if(typeof window!=='undefined'){if(!styleSheet){var styleEl=document.createElement('style');styleEl.type='text/css';styleEl.appendChild(document.createTextNode(''));document.head.appendChild(styleEl);styleSheet=styleEl.sheet;}styleSheet.insertRule(rule,styleSheet.cssRules.length);}};if(queries.query){queries.query.forEach(function(queryRule){var queryHash=queriesHash+hash(stableHash(queryRule));var dataAttribute=getDataAttribute(queryRule);if(dataAttribute){var newIdentifier=\"[data-\".concat(dataAttribute,\"$=\\\"\").concat(queryHash,\"\\\"]\");dataSet[dataAttribute]=queryHash;var mediaRules='';var flattenQueryStyle=StyleSheet.flatten(queryRule.style);var newStyle=preprocess(flattenQueryStyle);var _atomic=atomic(newStyle),_atomic2=_slicedToArray(_atomic,2),compiledStyle=_atomic2[0],compiledOrderedRules=_atomic2[1];delete compiledStyle.$$css;Object.keys(compiledStyle).forEach(function(key){var oldIdentifier=compiledStyle[key];compiledOrderedRules.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),rules=_ref2[0],_order=_ref2[1];var newRule=rules[0].replace('.'+oldIdentifier,newIdentifier);mediaRules+=newRule;});});if(mediaRules){var mediaQueryRule=getMediaQueryRule(queryRule,mediaRules);insert(\"/*\".concat(queryHash,\"{}*/\").concat(mediaQueryRule));textContentMap[\"/*\".concat(queryHash,\"{}*/\").concat(mediaQueryRule)]=true;}}});}return{styles:styles,dataSet:dataSet};};export var getStyleElement=function getStyleElement(){return React.createElement(\"style\",{type:\"text/css\",dangerouslySetInnerHTML:{__html:Object.keys(textContentMap).join('')}});};","map":{"version":3,"sources":["useResponsiveQuery.web.tsx"],"names":["atomic","preprocess","stableHash","hash","useStableMemo","getResponsiveStylesImpl","useDimensionsWithEnable","ResponsiveQueryContext","React","textContentMap","useResponsiveQuery","queries","responsiveQueryContext","useContext","disableCSSMediaQueries","windowWidth","enable","width","values","getResponsiveStyles","styles","dataSet","getDataAttribute","queryRule","minWidth","maxWidth","undefined","getMediaQueryRule","query","newRule","queryString","queriesHash","initial","create","StyleSheet","flatten","styleSheet","insert","rule","window","styleEl","document","createElement","type","appendChild","createTextNode","head","sheet","insertRule","cssRules","length","forEach","queryHash","dataAttribute","newIdentifier","mediaRules","flattenQueryStyle","style","newStyle","compiledStyle","compiledOrderedRules","$$css","Object","keys","key","oldIdentifier","rules","_order","replace","mediaQueryRule","getStyleElement","__html","join"],"mappings":"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","sourcesContent":["// import { atomic } from 'react-native-web/dist/exports/StyleSheet/compiler';\nimport { atomic } from '../react-native-web-fucntions/atomic';\nimport preprocess from '../react-native-web-fucntions/preprocess';\nimport type {\n  DataSet,\n  Query,\n  UseResponsiveQueryParams,\n  UseResponsiveQueryReturnType,\n  GetResponsiveStylesParams,\n} from './types';\nimport { StyleSheet } from 'react-native';\n// @ts-ignore\nimport stableHash from 'stable-hash';\nimport hash from './hash';\nimport type { GetResponsiveStylesReturnType } from './types';\nimport { useStableMemo } from './useStableMemo';\nimport { getResponsiveStylesImpl, useDimensionsWithEnable } from './common';\nimport { ResponsiveQueryContext } from './ResponsiveQueryProvider';\nimport React from 'react';\n\n/******************** Implementation after RNW v0.18 ***********************/\n\n/**\n * 1. preprocess:- Handles shadow/text shadow conversion from RN styles to web *                 styles\n *\n * 2. atomic:- it handles prefixing, converting RN specific styles to web styles *             and generating the CSS selector.\n *             Input {marginTop: 10}\n *             Output\n *             compiledStyle : marginTop: \"r-marginTop-156q2ks\"\n *             compiledOrderedRules : \".r-marginTop-156q2ks{margin-top:10px;}\"\n *      a)compiledStyle:- Array it holds identifier/selector with properties\n *      b)compiledOrderedRules:- Array it holds the css rule with selector name\n *      Also from RNW v0.18 handles swapping of ltr styles if enabled by user\n * 3. createSheet:- used to grab sheet which exist already created by rnw. when we *                  call createSheet without id it will return sheet which exist. *                  cause it automatically takes a default ID  which is already in *                  use (created by rnw with default ID) so this return sheet *                  which exist with  ID doesn't create a new sheet.\n *\n * This Implementation is based on asumptions that RNW doesn't change the         * function  or doesn't re-write them. if there is any change in RNW implmentation * it we'll break and needs to be updated.\n *\n */\nlet textContentMap: any = {};\n\nexport const useResponsiveQuery = (\n  queries?: UseResponsiveQueryParams\n): UseResponsiveQueryReturnType => {\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries =\n    queries?.disableCSSMediaQueries ??\n    responsiveQueryContext.disableCSSMediaQueries;\n\n  // Only attaches listener if disableCSSMediaQueries is true\n  const windowWidth = useDimensionsWithEnable({\n    enable: disableCSSMediaQueries,\n  }).width;\n\n  const values = useStableMemo(() => {\n    // Use the non-media query responsive styling\n    if (disableCSSMediaQueries) {\n      const getResponsiveStyles = getResponsiveStylesImpl(windowWidth);\n      if (queries) {\n        const { styles } = getResponsiveStyles(queries);\n        return { styles, getResponsiveStyles };\n      } else {\n        return { getResponsiveStyles };\n      }\n    } else {\n      if (queries) {\n        const { styles, dataSet } = getResponsiveStyles(queries);\n        return { dataSet, styles, getResponsiveStyles };\n      } else {\n        return { getResponsiveStyles };\n      }\n    }\n  }, [queries, windowWidth, disableCSSMediaQueries]);\n\n  return values;\n};\n\nconst getDataAttribute = (queryRule: Query) => {\n  if (\n    typeof queryRule.minWidth === 'number' &&\n    typeof queryRule.maxWidth === 'number'\n  ) {\n    return `min-width-${queryRule.minWidth}-max-width-${queryRule.maxWidth}`;\n  } else if (typeof queryRule.minWidth === 'number') {\n    return `min-width-${queryRule.minWidth}`;\n  } else if (typeof queryRule.maxWidth === 'number') {\n    return `max-width-${queryRule.maxWidth}`;\n  }\n\n  return undefined;\n};\n\nconst getMediaQueryRule = (query: Query, newRule: string) => {\n  if (\n    typeof query.minWidth === 'number' &&\n    typeof query.maxWidth === 'number'\n  ) {\n    return `@media only screen and (min-width: ${query.minWidth}px) and (max-width: ${query.maxWidth}px) { ${newRule} }`;\n  } else if (typeof query.minWidth === 'number') {\n    return `@media only screen and (min-width: ${query.minWidth}px) { ${newRule} }`;\n  } else if (typeof query.maxWidth === 'number') {\n    return `@media only screen and (max-width: ${query.maxWidth}px) { ${newRule} }`;\n  }\n  return undefined;\n};\n\nconst getResponsiveStyles = (\n  queries: GetResponsiveStylesParams\n): GetResponsiveStylesReturnType => {\n  const queryString = stableHash(queries.query);\n  const queriesHash = hash(queryString);\n\n  const styles = queries.initial\n    ? [\n        StyleSheet.create({ initial: StyleSheet.flatten(queries.initial) })\n          .initial,\n      ]\n    : undefined;\n\n  let dataSet: DataSet = {};\n  let styleSheet: any;\n\n  /**\n   * This function is copied from intergalacticspacehighway/rnw-responsive-ssr\n   */\n  const insert = (rule: string) => {\n    if (typeof window !== 'undefined') {\n      if (!styleSheet) {\n        const styleEl = document.createElement('style');\n        styleEl.type = 'text/css';\n        styleEl.appendChild(document.createTextNode(''));\n        document.head.appendChild(styleEl);\n        styleSheet = styleEl.sheet;\n      }\n\n      styleSheet.insertRule(rule, styleSheet.cssRules.length);\n    }\n  };\n\n  if (queries.query) {\n    queries.query.forEach((queryRule) => {\n      const queryHash = queriesHash + hash(stableHash(queryRule));\n      const dataAttribute = getDataAttribute(queryRule);\n\n      if (dataAttribute) {\n        const newIdentifier = `[data-${dataAttribute}$=\"${queryHash}\"]`;\n        dataSet[dataAttribute] = queryHash;\n\n        let mediaRules = '';\n\n        const flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n        const newStyle = preprocess(flattenQueryStyle);\n        const [compiledStyle, compiledOrderedRules] = atomic(newStyle);\n        //@ts-ignore\n        delete compiledStyle.$$css; //removing unnecessary $$css property\n        Object.keys(compiledStyle).forEach((key) => {\n          const oldIdentifier = compiledStyle[key];\n          compiledOrderedRules.forEach(([rules, _order]: any) => {\n            // Rule returned by atomic has css selectors, so we'll replace it with data-attr selector\n            const newRule = rules[0].replace(\n              '.' + oldIdentifier,\n              newIdentifier\n            );\n            mediaRules += newRule;\n          });\n        });\n        if (mediaRules) {\n          const mediaQueryRule = getMediaQueryRule(queryRule, mediaRules);\n          insert(`/*${queryHash}{}*/${mediaQueryRule}`);\n          textContentMap[`/*${queryHash}{}*/${mediaQueryRule}`] = true;\n        }\n      }\n    });\n  }\n\n  return { styles, dataSet };\n};\n\n/**\n * This function is copied from intergalacticspacehighway/rnw-responsive-ssr\n */\nexport const getStyleElement = () => {\n  return (\n    <style\n      type=\"text/css\"\n      dangerouslySetInnerHTML={{ __html: Object.keys(textContentMap).join('') }}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}