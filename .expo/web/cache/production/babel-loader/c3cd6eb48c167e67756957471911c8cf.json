{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"index\",\"defaultIndex\",\"allowMultiple\",\"allowToggle\",\"onChange\"],_excluded2=[\"endingHeight\",\"startingHeight\",\"duration\",\"isOpen\",\"onAnimationEnd\",\"onAnimationStart\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Box from\"../../primitives/Box\";import{useThemeProps}from\"../../../hooks\";import getIndexedChildren from\"../../../utils/getIndexedChildren\";import{AccordionContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Accordion=function Accordion(_ref,ref){var children=_ref.children,pIndex=_ref.index,defaultIndex=_ref.defaultIndex,allowMultiple=_ref.allowMultiple,allowToggle=_ref.allowToggle,onChange=_ref.onChange,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('Accordion',props),endingHeight=_useThemeProps.endingHeight,startingHeight=_useThemeProps.startingHeight,duration=_useThemeProps.duration,isOpen=_useThemeProps.isOpen,onAnimationEnd=_useThemeProps.onAnimationEnd,onAnimationStart=_useThemeProps.onAnimationStart,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);var _React$useState=React.useState(pIndex||defaultIndex||[]),_React$useState2=_slicedToArray(_React$useState,2),index=_React$useState2[0],setIndex=_React$useState2[1];if(useHasResponsiveProps(props)){return null;}var changeHandler=function changeHandler(isOpening,activeIndex){var indexCopy=index.map(function(i){return i;});if(allowToggle){if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{setIndex(index.splice(index.indexOf(activeIndex),1));}}else{if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{indexCopy=indexCopy.filter(function(n){return n!==activeIndex;});setIndex(indexCopy);}}onChange&&onChange(indexCopy);};return React.createElement(AccordionContext.Provider,{value:{index:index,changeHandler:changeHandler,AnimationProps:{endingHeight:endingHeight,startingHeight:startingHeight,duration:duration,isOpen:isOpen,onAnimationEnd:onAnimationEnd,onAnimationStart:onAnimationStart}}},React.createElement(Box,_extends({overflow:\"hidden\"},newProps,{ref:ref}),getIndexedChildren(children)));};export default React.memo(React.forwardRef(Accordion));","map":{"version":3,"sources":["Accordion.tsx"],"names":["React","Box","useThemeProps","getIndexedChildren","AccordionContext","useHasResponsiveProps","Accordion","children","index","pIndex","defaultIndex","allowMultiple","allowToggle","onChange","props","ref","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","newProps","setIndex","useState","changeHandler","isOpening","activeIndex","indexCopy","map","i","push","splice","indexOf","filter","n","AnimationProps","memo","forwardRef"],"mappings":"6mBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,IAAP,4BAEA,OAASC,aAAT,sBACA,MAAOC,mBAAP,yCACA,OAASC,gBAAT,iBACA,OAASC,qBAAT,4CAEA,GAAMC,UAAS,CAAG,QAAZA,UAAS,MAUbS,GAVgB,CAWb,IATDR,SADF,MACEA,QADF,CAESE,MAFT,MAEED,KAAK,CACLE,YAHF,MAGEA,YAHF,CAIEC,aAJF,MAIEA,aAJF,CAKEC,WALF,MAKEA,WALF,CAMEC,QANF,MAMEA,QANF,CAOKC,KAAAA,0CAIL,mBAQIZ,aAAa,CAAC,WAAD,CAAcY,KAAd,CARjB,CACEE,YADI,gBACJA,YADI,CAEJC,cAFI,gBAEJA,cAFI,CAGJC,QAHI,gBAGJA,QAHI,CAIJC,MAJI,gBAIJA,MAJI,CAKJC,cALI,gBAKJA,cALI,CAMJC,gBANI,gBAMJA,gBANI,CAODC,QAAAA,qDAGL,oBAA0BtB,KAAK,CAACwB,QAANxB,CAAeS,MAAM,EAAIC,YAAVD,EAA0B,EAAzCT,CAXvB,oDAWIQ,KAAD,qBAAQe,QAAR,qBAEN,GAAIlB,qBAAqB,CAACS,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,GAAMW,cAAa,CAAG,QAAhBA,cAAa,CAAIC,SAAD,CAAqBC,WAArB,CAA6C,CACjE,GAAIC,UAAS,CAAGpB,KAAK,CAACqB,GAANrB,CAAWsB,SAAAA,CAAD,QAAeA,EAAzBtB,GAAhB,CACA,GAAII,WAAJ,CAAiB,CACf,GAAIc,SAAJ,CAAe,CACbE,SAAS,CAACG,IAAVH,CAAeD,WAAfC,CAAAA,CACAjB,aAAa,CAAGY,QAAQ,CAACK,SAAD,CAAX,CAAyBL,QAAQ,CAAC,CAACI,WAAD,CAAD,CAA9ChB,CACD,CAHD,IAGO,CACLY,QAAQ,CAACf,KAAK,CAACwB,MAANxB,CAAaA,KAAK,CAACyB,OAANzB,CAAcmB,WAAdnB,CAAbA,CAAyC,CAAzCA,CAAD,CAARe,CACD,CACF,CAPD,IAOO,CACL,GAAIG,SAAJ,CAAe,CACbE,SAAS,CAACG,IAAVH,CAAeD,WAAfC,CAAAA,CACAjB,aAAa,CAAGY,QAAQ,CAACK,SAAD,CAAX,CAAyBL,QAAQ,CAAC,CAACI,WAAD,CAAD,CAA9ChB,CACD,CAHD,IAGO,CACLiB,SAAS,CAAGA,SAAS,CAACM,MAAVN,CAAkBO,SAAAA,CAAD,QAAYA,EAAC,GAAKR,WAAnCC,GAAZA,CACAL,QAAQ,CAACK,SAAD,CAARL,CACD,CACF,CACDV,QAAQ,EAAIA,QAAQ,CAACe,SAAD,CAApBf,CACD,CAnBD,CAoBA,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAkB,QAAlB,CAAA,CACE,KAAK,CAAE,CACLL,KAAK,CAAEA,KADF,CAELiB,aAFK,CAELA,aAFK,CAGLW,cAAc,CAAE,CACdpB,YADc,CACdA,YADc,CAEdC,cAFc,CAEdA,cAFc,CAGdC,QAHc,CAGdA,QAHc,CAIdC,MAJc,CAIdA,MAJc,CAKdC,cALc,CAKdA,cALc,CAMdC,gBAAAA,CAAAA,gBANc,CAHX,CADT,CAAA,CAcE,KAAA,CAAA,aAAA,CAAC,GAAD,CAAA,QAAA,CAAA,CAAK,QAAQ,CAAC,QAAd,CAAA,CAA2BC,QAA3B,CAAA,CAAqC,GAAG,CAAEP,GAA1C,CAAA,CAAA,CACGZ,kBAAkB,CAACI,QAAD,CADrB,CAdF,CADF,CAoBD,CAnED,CAqEA,cAAeP,MAAK,CAACqC,IAANrC,CAAWA,KAAK,CAACsC,UAANtC,CAAiBM,SAAjBN,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport { AccordionContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Accordion = (\n  {\n    children,\n    index: pIndex,\n    defaultIndex,\n    allowMultiple,\n    allowToggle,\n    onChange,\n    ...props\n  }: IAccordionProps,\n  ref: any\n) => {\n  const {\n    endingHeight,\n    startingHeight,\n    duration,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...newProps\n  } = useThemeProps('Accordion', props);\n\n  const [index, setIndex] = React.useState(pIndex || defaultIndex || []);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i: number) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter((n: any) => n !== activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n  return (\n    <AccordionContext.Provider\n      value={{\n        index: index,\n        changeHandler,\n        AnimationProps: {\n          endingHeight,\n          startingHeight,\n          duration,\n          isOpen,\n          onAnimationEnd,\n          onAnimationStart,\n        },\n      }}\n    >\n      <Box overflow=\"hidden\" {...newProps} ref={ref}>\n        {getIndexedChildren(children)}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Accordion));\n"]},"metadata":{},"sourceType":"module"}