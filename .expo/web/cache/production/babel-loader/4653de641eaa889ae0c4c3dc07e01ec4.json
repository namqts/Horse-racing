{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"_hover\",\"_expanded\",\"_disabled\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import Box from\"../../primitives/Box\";import{AccordionItemContext}from\"./Context\";import{useThemeProps}from\"../../../hooks\";import{mergeRefs}from\"../../../utils\";import{useHover}from'@react-native-aria/interactions';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AccordionSummary=function AccordionSummary(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded);var _React$useContext=React.useContext(AccordionItemContext),index=_React$useContext.index,isOpen=_React$useContext.isOpen,isDisabled=_React$useContext.isDisabled,onOpen=_React$useContext.onOpen,onClose=_React$useContext.onClose;var _useThemeProps=useThemeProps('AccordionSummary',props),_hover=_useThemeProps._hover,_expanded=_useThemeProps._expanded,_disabled=_useThemeProps._disabled,themedProps=_objectWithoutProperties(_useThemeProps,_excluded2);var pressHandler=function pressHandler(){isOpen?onClose&&onClose():onOpen&&onOpen();};var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;if(useHasResponsiveProps(props)){return null;}return React.createElement(TouchableOpacity,{activeOpacity:0.2,disabled:isDisabled,onPress:pressHandler,accessible:true,accessibilityRole:\"checkbox\",ref:mergeRefs([ref,_ref])},React.createElement(Box,_extends({display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"},themedProps,isHovered&&_hover,isOpen&&_expanded,isDisabled&&_disabled,!index&&{borderTopColor:'transparent'},Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{}),children));};export default React.memo(React.forwardRef(AccordionSummary));","map":{"version":3,"sources":["AccordionSummary.tsx"],"names":["React","Box","AccordionItemContext","useThemeProps","mergeRefs","useHover","useHasResponsiveProps","AccordionSummary","children","props","ref","index","isOpen","isDisabled","onOpen","onClose","useContext","_hover","_expanded","_disabled","themedProps","pressHandler","_ref","useRef","isHovered","borderTopColor","OS","disabled","cursor","memo","forwardRef"],"mappings":"qbAAA,MAAOA,MAAP,KAAkB,OAAlB,CAAA,0IAEA,MAAOC,IAAP,4BAKA,OAASC,oBAAT,iBACA,OAASC,aAAT,sBACA,OAASC,SAAT,sBACA,OAASC,QAAT,KAAyB,iCAAzB,CACA,OAASC,qBAAT,4CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,OAEpBG,GAFuB,CAGpB,IAFDF,SAAF,OAAEA,QAAF,CAAeC,KAAAA,2CAGf,sBAMgCT,KAAK,CAACgB,UAANhB,CAAiBE,oBAAjBF,CANhC,CACEW,KADI,mBACJA,KADI,CAEJC,MAFI,mBAEJA,MAFI,CAGJC,UAHI,mBAGJA,UAHI,CAIJC,MAJI,mBAIJA,MAJI,CAKJC,OAAAA,mBAAAA,OAAAA,CAGF,mBAAyDZ,aAAa,CACpE,kBADoE,CAEpEM,KAFoE,CAAtE,CAAQQ,MAAF,gBAAEA,MAAF,CAAUC,SAAV,gBAAUA,SAAV,CAAqBC,SAArB,gBAAqBA,SAArB,CAAmCC,WAAAA,qDAIzC,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzBT,MAAM,CAAGG,OAAO,EAAIA,OAAO,EAArB,CAA0BD,MAAM,EAAIA,MAAM,EAAhDF,CACD,CAFD,CAIA,GAAMU,KAAI,CAAGtB,KAAK,CAACuB,MAANvB,CAAa,IAAbA,CAAb,CACA,cAAsBK,QAAQ,CAAC,CAAA,CAAD,CAAKiB,IAAL,CAlB3B,CAkBKE,SAAAA,WAAAA,SAAAA,CAER,GAAIlB,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,CACE,aAAa,CAAE,GADjB,CAEE,QAAQ,CAAEI,UAFZ,CAGE,OAAO,CAAEQ,YAHX,CAIE,UAAU,CAAA,IAJZ,CAKE,iBAAiB,CAAC,UALpB,CAME,GAAG,CAAEjB,SAAS,CAAC,CAACM,GAAD,CAAMY,IAAN,CAAD,CANhB,CAAA,CAQE,KAAA,CAAA,aAAA,CAAC,GAAD,CAAA,QAAA,CAAA,CACE,OAAO,CAAC,MADV,CAEE,aAAa,CAAC,KAFhB,CAGE,cAAc,CAAC,eAHjB,CAIE,UAAU,CAAC,QAJb,CAAA,CAKMF,WALN,CAMOI,SAAS,EAAIP,MANpB,CAOOL,MAAM,EAAIM,SAPjB,CAQOL,UAAU,EAAIM,SARrB,CASO,CAACR,KAAD,EAAU,CAAEc,cAAc,CAAE,aAAlB,CATjB,CAUO,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CACD,CACEC,QAAQ,CAAEd,UADZ,CAEEe,MAAM,CAAEf,UAAU,CAAG,aAAH,CAAmB,MAFvC,CADC,CAKD,CAAA,CAfN,CAAA,CAiBGL,QAjBH,CARF,CADF,CA8BD,CAxDD,CA0DA,cAAeR,MAAK,CAAC6B,IAAN7B,CAAWA,KAAK,CAAC8B,UAAN9B,CAAiBO,gBAAjBP,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"]},"metadata":{},"sourceType":"module"}