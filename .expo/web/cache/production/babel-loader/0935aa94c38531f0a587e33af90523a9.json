{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import merge from'deep-assign';var mergeLocalStorageItem=function mergeLocalStorageItem(key,value){var oldValue=window.localStorage.getItem(key);var oldObject=JSON.parse(oldValue);var newObject=JSON.parse(value);var nextValue=JSON.stringify(merge({},oldObject,newObject));window.localStorage.setItem(key,nextValue);};var createPromise=function createPromise(getValue,callback){return new Promise(function(resolve,reject){try{var value=getValue();if(callback){callback(null,value);}resolve(value);}catch(err){if(callback){callback(err);}reject(err);}});};var createPromiseAll=function createPromiseAll(promises,callback,processResult){return Promise.all(promises).then(function(result){var value=processResult?processResult(result):null;callback&&callback(null,value);return Promise.resolve(value);},function(errors){callback&&callback(errors);return Promise.reject(errors);});};var AsyncStorage=function(){function AsyncStorage(){_classCallCheck(this,AsyncStorage);}_createClass(AsyncStorage,null,[{key:\"getItem\",value:function getItem(key,callback){return createPromise(function(){return window.localStorage.getItem(key);},callback);}},{key:\"setItem\",value:function setItem(key,value,callback){return createPromise(function(){window.localStorage.setItem(key,value);},callback);}},{key:\"removeItem\",value:function removeItem(key,callback){return createPromise(function(){return window.localStorage.removeItem(key);},callback);}},{key:\"mergeItem\",value:function mergeItem(key,value,callback){return createPromise(function(){mergeLocalStorageItem(key,value);},callback);}},{key:\"clear\",value:function clear(callback){return createPromise(function(){window.localStorage.clear();},callback);}},{key:\"getAllKeys\",value:function getAllKeys(callback){return createPromise(function(){var numberOfKeys=window.localStorage.length;var keys=[];for(var i=0;i<numberOfKeys;i+=1){var key=window.localStorage.key(i);keys.push(key);}return keys;},callback);}},{key:\"flushGetRequests\",value:function flushGetRequests(){}},{key:\"multiGet\",value:function multiGet(keys,callback){var promises=keys.map(function(key){return AsyncStorage.getItem(key);});var processResult=function processResult(result){return result.map(function(value,i){return[keys[i],value];});};return createPromiseAll(promises,callback,processResult);}},{key:\"multiSet\",value:function multiSet(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.setItem(item[0],item[1]);});return createPromiseAll(promises,callback);}},{key:\"multiRemove\",value:function multiRemove(keys,callback){var promises=keys.map(function(key){return AsyncStorage.removeItem(key);});return createPromiseAll(promises,callback);}},{key:\"multiMerge\",value:function multiMerge(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.mergeItem(item[0],item[1]);});return createPromiseAll(promises,callback);}}]);return AsyncStorage;}();export{AsyncStorage as default};","map":{"version":3,"sources":["AsyncStorage.js"],"names":["merge","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","removeItem","clear","numberOfKeys","length","keys","i","push","map","keyValuePairs","item","mergeItem"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport merge from 'deep-assign';\n\nconst mergeLocalStorageItem = (key, value) => {\n  const oldValue = window.localStorage.getItem(key);\n  const oldObject = JSON.parse(oldValue);\n  const newObject = JSON.parse(value);\n  const nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nconst createPromise = (getValue, callback): Promise<*> => {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      if (callback) {\n        callback(null, value);\n      }\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n    }\n  });\n};\n\nconst createPromiseAll = (promises, callback, processResult): Promise<*> => {\n  return Promise.all(promises).then(\n    result => {\n      const value = processResult ? processResult(result) : null;\n      callback && callback(null, value);\n      return Promise.resolve(value);\n    },\n    errors => {\n      callback && callback(errors);\n      return Promise.reject(errors);\n    }\n  );\n};\n\nexport default class AsyncStorage {\n\n  /**\n   * Fetches `key` value.\n   */\n  static getItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.getItem(key);\n    }, callback);\n  }\n\n  /**\n   * Sets `value` for `key`.\n   */\n  static setItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Removes a `key`\n   */\n  static removeItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  }\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  static mergeItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  static clear(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.clear();\n    }, callback);\n  }\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  static getAllKeys(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i);\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  }\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  static flushGetRequests() {}\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  static multiGet(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.getItem(key));\n    const processResult = result => result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  }\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiSet(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.setItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  static multiRemove(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiMerge(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.mergeItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}