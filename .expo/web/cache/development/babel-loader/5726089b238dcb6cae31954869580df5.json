{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dropdown from \"../Dropdown\";\nimport { styles } from \"./styles\";\nvar SelectCountryConponent = React.forwardRef(function (props, currentRef) {\n  var testID = props.testID,\n    itemTestIDField = props.itemTestIDField,\n    data = props.data,\n    value = props.value,\n    valueField = props.valueField,\n    labelField = props.labelField,\n    imageField = props.imageField,\n    selectedTextStyle = props.selectedTextStyle,\n    imageStyle = props.imageStyle;\n  var ref = useRef(null);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  var eventOpen = function eventOpen() {\n    ref.current.open();\n  };\n  var eventClose = function eventClose() {\n    ref.current.close();\n  };\n  var _renderItem = function _renderItem(item) {\n    return React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Image, {\n      source: item[imageField],\n      style: [styles.image, imageStyle]\n    }), React.createElement(Text, {\n      style: [styles.selectedTextStyle, selectedTextStyle]\n    }, item[labelField]));\n  };\n  var selectItem = useMemo(function () {\n    var index = data.findIndex(function (e) {\n      return e[valueField] === value;\n    });\n    return data[index];\n  }, [data, valueField, value]);\n  return React.createElement(Dropdown, _extends({\n    testID: testID,\n    itemTestIDField: itemTestIDField,\n    ref: ref\n  }, props, {\n    renderItem: _renderItem,\n    renderLeftIcon: function renderLeftIcon() {\n      if (selectItem !== null && selectItem !== void 0 && selectItem.image) {\n        return React.createElement(Image, {\n          source: selectItem.image,\n          style: [styles.image, imageStyle]\n        });\n      } else {\n        return null;\n      }\n    }\n  }));\n});\nexport default SelectCountryConponent;","map":{"version":3,"sources":["index.tsx"],"names":["React","useImperativeHandle","useMemo","useRef","Dropdown","styles","SelectCountryConponent","forwardRef","props","currentRef","testID","itemTestIDField","data","value","valueField","labelField","imageField","selectedTextStyle","imageStyle","ref","open","eventOpen","close","eventClose","current","_renderItem","item","image","selectItem","index","findIndex","e"],"mappings":"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","sourcesContent":["import React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport { Image, View, Text } from 'react-native';\nimport Dropdown from '../Dropdown';\nimport type { SelectCountryProps } from './model';\nimport { styles } from './styles';\n\nconst SelectCountryConponent = React.forwardRef<any, SelectCountryProps>(\n  (props, currentRef) => {\n    const {\n      testID,\n      itemTestIDField,\n      data,\n      value,\n      valueField,\n      labelField,\n      imageField,\n      selectedTextStyle,\n      imageStyle,\n    } = props;\n    const ref: any = useRef(null);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    const eventOpen = () => {\n      ref.current.open();\n    };\n\n    const eventClose = () => {\n      ref.current.close();\n    };\n\n    const _renderItem = (item: any) => {\n      return (\n        <View style={styles.item}>\n          <Image source={item[imageField]} style={[styles.image, imageStyle]} />\n          <Text style={[styles.selectedTextStyle, selectedTextStyle]}>\n            {item[labelField]}\n          </Text>\n        </View>\n      );\n    };\n\n    const selectItem = useMemo(() => {\n      const index = data.findIndex((e) => e[valueField] === value);\n      return data[index];\n    }, [data, valueField, value]);\n\n    return (\n      <Dropdown\n        testID={testID}\n        itemTestIDField={itemTestIDField}\n        ref={ref}\n        {...props}\n        renderItem={_renderItem}\n        renderLeftIcon={() => {\n          if (selectItem?.image) {\n            return (\n              <Image\n                source={selectItem.image}\n                style={[styles.image, imageStyle]}\n              />\n            );\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  }\n);\n\nexport default SelectCountryConponent;\n"]},"metadata":{},"sourceType":"module"}