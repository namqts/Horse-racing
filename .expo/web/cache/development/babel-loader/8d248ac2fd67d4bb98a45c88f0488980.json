{"ast":null,"code":"\n\n'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\nvar UIManager = require(\"./UIManager\");\nvar insetsDiffer = require(\"../Utilities/differ/insetsDiffer\");\nvar invariant = require('invariant');\nvar matricesDiffer = require(\"../Utilities/differ/matricesDiffer\");\nvar pointsDiffer = require(\"../Utilities/differ/pointsDiffer\");\nvar processColor = require(\"../StyleSheet/processColor\");\nvar processColorArray = require(\"../StyleSheet/processColorArray\");\nvar resolveAssetSource = require(\"../Image/resolveAssetSource\");\nvar sizesDiffer = require(\"../Utilities/differ/sizesDiffer\");\nfunction getNativeComponentAttributes(uiViewClassName) {\n  var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n  invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: \"%s\" was not found in the UIManager.', uiViewClassName);\n\n  var baseModuleName = viewConfig.baseModuleName,\n    bubblingEventTypes = viewConfig.bubblingEventTypes,\n    directEventTypes = viewConfig.directEventTypes;\n  var nativeProps = viewConfig.NativeProps;\n  while (baseModuleName) {\n    var baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = _objectSpread(_objectSpread({}, baseModule.bubblingEventTypes), bubblingEventTypes);\n      directEventTypes = _objectSpread(_objectSpread({}, baseModule.directEventTypes), directEventTypes);\n      nativeProps = _objectSpread(_objectSpread({}, baseModule.NativeProps), nativeProps);\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n  var validAttributes = {};\n  for (var key in nativeProps) {\n    var typeName = nativeProps[key];\n    var diff = getDifferForType(typeName);\n    var process = getProcessorForType(typeName);\n    validAttributes[key] = diff == null && process == null ? true : {\n      diff: diff,\n      process: process\n    };\n  }\n\n  validAttributes.style = ReactNativeStyleAttributes;\n  _extends(viewConfig, {\n    uiViewClassName: uiViewClassName,\n    validAttributes: validAttributes,\n    bubblingEventTypes: bubblingEventTypes,\n    directEventTypes: directEventTypes\n  });\n  if (!hasAttachedDefaultEventTypes) {\n    attachDefaultEventTypes(viewConfig);\n    hasAttachedDefaultEventTypes = true;\n  }\n  return viewConfig;\n}\n\nvar hasAttachedDefaultEventTypes = false;\nfunction attachDefaultEventTypes(viewConfig) {\n  var constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);\n    viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);\n  }\n}\n\nfunction merge(destination, source) {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n  for (var key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n    var sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      var destinationValue = destination[key];\n      if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\nfunction getDifferForType(typeName) {\n  switch (typeName) {\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n  }\n\n  return null;\n}\nfunction getProcessorForType(typeName) {\n  switch (typeName) {\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n  }\n  return null;\n}\nmodule.exports = getNativeComponentAttributes;","map":{"version":3,"names":["ReactNativeStyleAttributes","require","UIManager","insetsDiffer","invariant","matricesDiffer","pointsDiffer","processColor","processColorArray","resolveAssetSource","sizesDiffer","getNativeComponentAttributes","uiViewClassName","viewConfig","getViewManagerConfig","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","baseModule","validAttributes","key","typeName","diff","getDifferForType","process","getProcessorForType","style","hasAttachedDefaultEventTypes","attachDefaultEventTypes","constants","getConstants","ViewManagerNames","LazyViewManagersEnabled","merge","getDefaultEventTypes","genericBubblingEventTypes","genericDirectEventTypes","destination","source","hasOwnProperty","sourceValue","destinationValue","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst UIManager = require('./UIManager');\n\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\nconst invariant = require('invariant');\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\nconst processColor = require('../StyleSheet/processColor');\nconst processColorArray = require('../StyleSheet/processColorArray');\nconst resolveAssetSource = require('../Image/resolveAssetSource');\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\n\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n\n  invariant(\n    viewConfig != null && viewConfig.NativeProps != null,\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\n    uiViewClassName,\n  );\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n  while (baseModuleName) {\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    validAttributes[key] =\n      diff == null && process == null ? true : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  if (!hasAttachedDefaultEventTypes) {\n    attachDefaultEventTypes(viewConfig);\n    hasAttachedDefaultEventTypes = true;\n  }\n\n  return viewConfig;\n}\n\n// TODO: Figure out how this makes sense. We're using a global boolean to only\n// initialize this on the first eagerly initialized native component.\nlet hasAttachedDefaultEventTypes = false;\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  const constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    // Lazy view managers enabled.\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      constants.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      constants.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    // (not yet implemented)\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n  }\n  return null;\n}\n\nmodule.exports = getNativeComponentAttributes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}