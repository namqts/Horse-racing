{"ast":null,"code":"\n'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport ReactNativeViewAttributes from 'react-native/Libraries/Components/View/ReactNativeViewAttributes';\nimport TextAncestor from 'react-native/Libraries/Text/TextAncestor';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass';\nimport nullthrows from 'fbjs/lib/nullthrows';\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PRESS_RECT_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\nvar createTextGradientClass = function createTextGradientClass(uiViewClassName, uiVirtualViewClassName, defProps, convertProps) {\n  var defaultPropAttributes = Object.keys(defProps).reduce(function (acc, key) {\n    acc[key] = true;\n    return acc;\n  }, {});\n  var viewConfig = {\n    validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      colors: true,\n      locations: true,\n      useViewFrame: true,\n      useGlobalCache: true\n    }, defaultPropAttributes),\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout'\n      }\n    },\n    uiViewClassName: uiViewClassName\n  };\n  var TouchableTextGradient = function (_React$Component) {\n    _inherits(TouchableTextGradient, _React$Component);\n    var _super = _createSuper(TouchableTextGradient);\n    function TouchableTextGradient() {\n      var _this;\n      _classCallCheck(this, TouchableTextGradient);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = _objectSpread(_objectSpread({}, Touchable.Mixin.touchableGetInitialState()), {}, {\n        isHighlighted: false,\n        createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),\n        responseHandlers: null\n      });\n      return _this;\n    }\n    _createClass(TouchableTextGradient, [{\n      key: \"render\",\n      value: function render() {\n        var props = convertProps(_objectSpread(_objectSpread({}, defProps), this.props));\n        if (isTouchable(props)) {\n          props = _objectSpread(_objectSpread(_objectSpread({}, props), this.state.responseHandlers), {}, {\n            isHighlighted: this.state.isHighlighted\n          });\n        }\n        props = _objectSpread(_objectSpread({}, props), {}, {\n          style: [{\n            color: 'gray'\n          }, props.style]\n        });\n        if (props.selectionColor != null) {\n          props = _objectSpread(_objectSpread({}, props), {}, {\n            selectionColor: processColor(props.selectionColor)\n          });\n        }\n        if (props.colors != null) {\n          props = _objectSpread(_objectSpread({}, props), {}, {\n            colors: props.colors.map(processColor)\n          });\n        }\n        if (__DEV__) {\n          if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n            props = _objectSpread(_objectSpread({}, props), {}, {\n              style: [props.style, {\n                color: 'magenta'\n              }]\n            });\n          }\n        }\n        return _jsx(TextAncestor.Consumer, {\n          children: function children(hasTextAncestor) {\n            return hasTextAncestor ? _jsx(RNVirtualTextGradient, _objectSpread(_objectSpread({}, props), {}, {\n              ref: props.forwardedRef\n            })) : _jsx(TextAncestor.Provider, {\n              value: true,\n              children: _jsx(RNTextGradient, _objectSpread(_objectSpread({}, props), {}, {\n                ref: props.forwardedRef\n              }))\n            });\n          }\n        });\n      }\n    }, {\n      key: \"_createResponseHandlers\",\n      value: function _createResponseHandlers() {\n        var _this2 = this;\n        return {\n          onStartShouldSetResponder: function onStartShouldSetResponder() {\n            var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;\n            var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);\n            if (shouldSetResponder) {\n              _this2._attachTouchHandlers();\n            }\n            return shouldSetResponder;\n          },\n          onResponderGrant: function onResponderGrant(event, dispatchID) {\n            nullthrows(_this2.touchableHandleResponderGrant)(event, dispatchID);\n            if (_this2.props.onResponderGrant != null) {\n              _this2.props.onResponderGrant.call(_this2, event, dispatchID);\n            }\n          },\n          onResponderMove: function onResponderMove(event) {\n            nullthrows(_this2.touchableHandleResponderMove)(event);\n            if (_this2.props.onResponderMove != null) {\n              _this2.props.onResponderMove.call(_this2, event);\n            }\n          },\n          onResponderRelease: function onResponderRelease(event) {\n            nullthrows(_this2.touchableHandleResponderRelease)(event);\n            if (_this2.props.onResponderRelease != null) {\n              _this2.props.onResponderRelease.call(_this2, event);\n            }\n          },\n          onResponderTerminate: function onResponderTerminate(event) {\n            nullthrows(_this2.touchableHandleResponderTerminate)(event);\n            if (_this2.props.onResponderTerminate != null) {\n              _this2.props.onResponderTerminate.call(_this2, event);\n            }\n          },\n          onResponderTerminationRequest: function onResponderTerminationRequest() {\n            var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;\n            if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {\n              return false;\n            }\n            if (onResponderTerminationRequest == null) {\n              return true;\n            }\n            return onResponderTerminationRequest();\n          }\n        };\n      }\n\n    }, {\n      key: \"_attachTouchHandlers\",\n      value:\n      function _attachTouchHandlers() {\n        var _this3 = this;\n        if (this.touchableGetPressRectOffset != null) {\n          return;\n        }\n        for (var key in Touchable.Mixin) {\n          if (typeof Touchable.Mixin[key] === 'function') {\n            this[key] = Touchable.Mixin[key].bind(this);\n          }\n        }\n        this.touchableHandleActivePressIn = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: true\n            });\n          }\n        };\n        this.touchableHandleActivePressOut = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: false\n            });\n          }\n        };\n        this.touchableHandlePress = function (event) {\n          if (_this3.props.onPress != null) {\n            _this3.props.onPress(event);\n          }\n        };\n        this.touchableHandleLongPress = function (event) {\n          if (_this3.props.onLongPress != null) {\n            _this3.props.onLongPress(event);\n          }\n        };\n        this.touchableGetPressRectOffset = function () {\n          return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;\n        };\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        return prevState.responseHandlers == null && isTouchable(nextProps) ? {\n          responseHandlers: prevState.createResponderHandlers()\n        } : null;\n      }\n    }]);\n    return TouchableTextGradient;\n  }(React.Component);\n  TouchableTextGradient.defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail'\n  };\n  TouchableTextGradient.canRenderString = true;\n  TouchableTextGradient.viewConfig = viewConfig;\n  var isTouchable = function isTouchable(props) {\n    return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;\n  };\n  var RNTextGradient = createReactNativeComponentClass(uiViewClassName, function () {\n    return viewConfig;\n  });\n  var RNVirtualTextGradient = UIManager.getViewManagerConfig(uiVirtualViewClassName) == null ? RNTextGradient : createReactNativeComponentClass(uiVirtualViewClassName, function () {\n    return {\n      validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n        isHighlighted: true,\n        maxFontSizeMultiplier: true,\n        colors: true,\n        locations: true,\n        useGlobalCache: true\n      }, defaultPropAttributes),\n      uiViewClassName: uiVirtualViewClassName\n    };\n  });\n\n  var TextGradient = React.forwardRef(function (props, ref) {\n    return _jsx(TouchableTextGradient, _objectSpread(_objectSpread({}, props), {}, {\n      forwardedRef: ref\n    }));\n  });\n  TextGradient.displayName = uiVirtualViewClassName;\n  return TextGradient;\n};\nmodule.exports = createTextGradientClass;","map":{"version":3,"names":["React","ReactNativeViewAttributes","TextAncestor","createReactNativeComponentClass","nullthrows","PRESS_RECT_OFFSET","top","left","right","bottom","createTextGradientClass","uiViewClassName","uiVirtualViewClassName","defProps","convertProps","defaultPropAttributes","Object","keys","reduce","acc","key","viewConfig","validAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","maxFontSizeMultiplier","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","onTextLayout","colors","locations","useViewFrame","useGlobalCache","directEventTypes","topTextLayout","registrationName","TouchableTextGradient","state","Touchable","Mixin","touchableGetInitialState","createResponderHandlers","_createResponseHandlers","bind","responseHandlers","props","isTouchable","style","color","processColor","map","__DEV__","TOUCH_TARGET_DEBUG","onPress","hasTextAncestor","forwardedRef","onStartShouldSetResponder","shouldSetResponder","_attachTouchHandlers","onResponderGrant","event","dispatchID","touchableHandleResponderGrant","call","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","touchableGetPressRectOffset","touchableHandleActivePressIn","suppressHighlighting","setState","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","onLongPress","pressRetentionOffset","nextProps","prevState","Component","defaultProps","accessible","canRenderString","RNTextGradient","RNVirtualTextGradient","UIManager","getViewManagerConfig","TextGradient","forwardRef","ref","displayName","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native-text-gradient/src/create-text-gradient-class.js"],"sourcesContent":["/**\n * @providesModule TextGradient\n * @flow\n */\n'use strict';\n\nimport * as React from 'react';\nimport ReactNativeViewAttributes from 'react-native/Libraries/Components/View/ReactNativeViewAttributes';\nimport TextAncestor from 'react-native/Libraries/Text/TextAncestor';\n\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass';\nimport nullthrows from 'fbjs/lib/nullthrows';\nimport { Touchable, processColor, UIManager } from 'react-native';\n\nconst PRESS_RECT_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nconst createTextGradientClass = (\n  uiViewClassName,\n  uiVirtualViewClassName,\n  defProps,\n  convertProps\n) => {\n  const defaultPropAttributes = Object.keys(defProps)\n    .reduce((acc, key) => { acc[key] = true; return acc; }, {});\n\n  const viewConfig = {\n    validAttributes: {\n      ...ReactNativeViewAttributes.UIView,\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      colors: true,\n      locations: true,\n      useViewFrame: true,\n      useGlobalCache: true,\n      ...defaultPropAttributes\n    },\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout',\n      },\n    },\n    uiViewClassName,\n  };\n\n  class TouchableTextGradient extends React.Component {\n    static defaultProps = {\n      accessible: true,\n      allowFontScaling: true,\n      ellipsizeMode: 'tail',\n    };\n\n    state = {\n      ...Touchable.Mixin.touchableGetInitialState(),\n      isHighlighted: false,\n      createResponderHandlers: this._createResponseHandlers.bind(this),\n      responseHandlers: null,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      return prevState.responseHandlers == null && isTouchable(nextProps)\n        ? {\n            responseHandlers: prevState.createResponderHandlers(),\n          }\n        : null;\n    }\n\n    static canRenderString = true;\n    static viewConfig = viewConfig;\n\n    render() {\n      let props = convertProps({\n        ...defProps,\n        ...this.props,\n      });\n\n      if (isTouchable(props)) {\n        props = {\n          ...props,\n          ...this.state.responseHandlers,\n          isHighlighted: this.state.isHighlighted,\n        };\n      }\n\n      props = {\n        ...props,\n        style: [{ color: 'gray' }, props.style],\n      };\n\n      if (props.selectionColor != null) {\n        props = {\n          ...props,\n          selectionColor: processColor(props.selectionColor),\n        };\n      }\n\n      if (props.colors != null) {\n        props = {\n          ...props,\n          colors: props.colors.map(processColor)\n        };\n      }\n\n      if (__DEV__) {\n        if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n          props = {\n            ...props,\n            style: [props.style, {color: 'magenta'}],\n          };\n        }\n      }\n\n      return (\n        <TextAncestor.Consumer>\n          {hasTextAncestor =>\n            hasTextAncestor ? (\n              <RNVirtualTextGradient {...props} ref={props.forwardedRef} />\n            ) : (\n              <TextAncestor.Provider value={true}>\n                <RNTextGradient {...props} ref={props.forwardedRef} />\n              </TextAncestor.Provider>\n            )\n          }\n        </TextAncestor.Consumer>\n      );\n    }\n\n    _createResponseHandlers() {\n      return {\n        onStartShouldSetResponder: () => {\n          const {onStartShouldSetResponder} = this.props;\n          const shouldSetResponder =\n            (onStartShouldSetResponder == null\n              ? false\n              : onStartShouldSetResponder()) || isTouchable(this.props);\n\n          if (shouldSetResponder) {\n            this._attachTouchHandlers();\n          }\n          return shouldSetResponder;\n        },\n        onResponderGrant: (event, dispatchID) => {\n          nullthrows(this.touchableHandleResponderGrant)(event, dispatchID);\n          if (this.props.onResponderGrant != null) {\n            this.props.onResponderGrant.call(this, event, dispatchID);\n          }\n        },\n        onResponderMove: (event) => {\n          nullthrows(this.touchableHandleResponderMove)(event);\n          if (this.props.onResponderMove != null) {\n            this.props.onResponderMove.call(this, event);\n          }\n        },\n        onResponderRelease: (event) => {\n          nullthrows(this.touchableHandleResponderRelease)(event);\n          if (this.props.onResponderRelease != null) {\n            this.props.onResponderRelease.call(this, event);\n          }\n        },\n        onResponderTerminate: (event) => {\n          nullthrows(this.touchableHandleResponderTerminate)(event);\n          if (this.props.onResponderTerminate != null) {\n            this.props.onResponderTerminate.call(this, event);\n          }\n        },\n        onResponderTerminationRequest: () => {\n          const {onResponderTerminationRequest} = this.props;\n          if (!nullthrows(this.touchableHandleResponderTerminationRequest)()) {\n            return false;\n          }\n          if (onResponderTerminationRequest == null) {\n            return true;\n          }\n          return onResponderTerminationRequest();\n        },\n      };\n    }\n\n    /**\n     * Lazily attaches Touchable.Mixin handlers.\n     */\n    _attachTouchHandlers() {\n      if (this.touchableGetPressRectOffset != null) {\n        return;\n      }\n      for (const key in Touchable.Mixin) {\n        if (typeof Touchable.Mixin[key] === 'function') {\n          (this)[key] = Touchable.Mixin[key].bind(this);\n        }\n      }\n      this.touchableHandleActivePressIn = () => {\n        if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n          this.setState({isHighlighted: true});\n        }\n      };\n      this.touchableHandleActivePressOut = () => {\n        if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n          this.setState({isHighlighted: false});\n        }\n      };\n      this.touchableHandlePress = (event) => {\n        if (this.props.onPress != null) {\n          this.props.onPress(event);\n        }\n      };\n      this.touchableHandleLongPress = (event) => {\n        if (this.props.onLongPress != null) {\n          this.props.onLongPress(event);\n        }\n      };\n      this.touchableGetPressRectOffset = () =>\n        this.props.pressRetentionOffset == null\n          ? PRESS_RECT_OFFSET\n          : this.props.pressRetentionOffset;\n    }\n  }\n\n  const isTouchable = (props) =>\n    props.onPress != null ||\n    props.onLongPress != null ||\n    props.onStartShouldSetResponder != null;\n\n  const RNTextGradient = createReactNativeComponentClass(\n    uiViewClassName,\n    () => viewConfig,\n  );\n\n  const RNVirtualTextGradient =\n    UIManager.getViewManagerConfig(uiVirtualViewClassName) == null\n      ? RNTextGradient\n      : createReactNativeComponentClass(uiVirtualViewClassName, () => ({\n          validAttributes: {\n            ...ReactNativeViewAttributes.UIView,\n            isHighlighted: true,\n            maxFontSizeMultiplier: true,\n            colors: true,\n            locations: true,\n            useGlobalCache: true,\n            ...defaultPropAttributes\n          },\n          uiViewClassName: uiVirtualViewClassName,\n        }));\n\n  // $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\n  const TextGradient = React.forwardRef((props, ref) => (\n    <TouchableTextGradient {...props} forwardedRef={ref} />\n  ));\n  TextGradient.displayName = uiVirtualViewClassName;\n\n  return TextGradient;\n};\n\nmodule.exports = createTextGradientClass;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}