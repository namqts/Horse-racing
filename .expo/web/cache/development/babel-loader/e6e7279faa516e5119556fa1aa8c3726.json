{"ast":null,"code":"\n\n'use strict';\n\nvar start = Date.now();\nrequire(\"./setUpGlobals\");\nrequire(\"./setUpPerformance\");\nrequire(\"./setUpSystrace\");\nrequire(\"./setUpErrorHandling\");\nrequire(\"./polyfillPromise\");\nrequire(\"./setUpRegeneratorRuntime\");\nrequire(\"./setUpTimers\");\nrequire(\"./setUpXHR\");\nrequire(\"./setUpAlert\");\nrequire(\"./setUpNavigator\");\nrequire(\"./setUpBatchedBridge\");\nrequire(\"./setUpSegmentFetcher\");\nif (__DEV__) {\n  require(\"./checkNativeVersion\");\n  require(\"./setUpDeveloperTools\");\n}\nvar GlobalPerformanceLogger = require(\"../Utilities/GlobalPerformanceLogger\");\nGlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));\nGlobalPerformanceLogger.markPoint('initializeCore_end');","map":{"version":3,"names":["start","Date","now","require","__DEV__","GlobalPerformanceLogger","markPoint","currentTimestamp"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/Core/InitializeCore.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/* globals window: true */\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n\n'use strict';\n\nconst start = Date.now();\n\nrequire('./setUpGlobals');\nrequire('./setUpPerformance');\nrequire('./setUpSystrace');\nrequire('./setUpErrorHandling');\nrequire('./polyfillPromise');\nrequire('./setUpRegeneratorRuntime');\nrequire('./setUpTimers');\nrequire('./setUpXHR');\nrequire('./setUpAlert');\nrequire('./setUpNavigator');\nrequire('./setUpBatchedBridge');\nrequire('./setUpSegmentFetcher');\nif (__DEV__) {\n  require('./checkNativeVersion');\n  require('./setUpDeveloperTools');\n}\n\nconst GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\n// We could just call GlobalPerformanceLogger.markPoint at the top of the file,\n// but then we'd be excluding the time it took to require the logger.\n// Instead, we just use Date.now and backdate the timestamp.\nGlobalPerformanceLogger.markPoint(\n  'initializeCore_start',\n  GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start),\n);\nGlobalPerformanceLogger.markPoint('initializeCore_end');\n"],"mappings":";;AA0BA,YAAY;;AAEZ,IAAMA,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;AAExBC,OAAO,kBAAkB;AACzBA,OAAO,sBAAsB;AAC7BA,OAAO,mBAAmB;AAC1BA,OAAO,wBAAwB;AAC/BA,OAAO,qBAAqB;AAC5BA,OAAO,6BAA6B;AACpCA,OAAO,iBAAiB;AACxBA,OAAO,cAAc;AACrBA,OAAO,gBAAgB;AACvBA,OAAO,oBAAoB;AAC3BA,OAAO,wBAAwB;AAC/BA,OAAO,yBAAyB;AAChC,IAAIC,OAAO,EAAE;EACXD,OAAO,wBAAwB;EAC/BA,OAAO,yBAAyB;AAClC;AAEA,IAAME,uBAAuB,GAAGF,OAAO,wCAAwC;AAI/EE,uBAAuB,CAACC,SAAS,CAC/B,sBAAsB,EACtBD,uBAAuB,CAACE,gBAAgB,EAAE,IAAIN,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,CAAC,CAClE;AACDK,uBAAuB,CAACC,SAAS,CAAC,oBAAoB,CAAC"},"metadata":{},"sourceType":"script"}