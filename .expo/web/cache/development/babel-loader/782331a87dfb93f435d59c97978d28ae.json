{"ast":null,"code":"\n\n'use strict';\n\nimport { ReactNativeViewConfigRegistry } from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nvar register = ReactNativeViewConfigRegistry.register;\n\nvar createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {\n  return register(name, callback);\n};\nmodule.exports = createReactNativeComponentClass;","map":{"version":3,"names":["ReactNativeViewConfigRegistry","register","createReactNativeComponentClass","name","callback","module","exports"],"sources":["D:/Horse-racing/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport type {ViewConfigGetter} from './ReactNativeTypes';\n\nconst {register} = ReactNativeViewConfigRegistry;\n\n/**\n * Creates a renderable ReactNative host component.\n * Use this method for view configs that are loaded from UIManager.\n * Use createReactNativeComponentClass() for view configs defined within JavaScript.\n *\n * @param {string} config iOS View configuration.\n * @private\n */\nconst createReactNativeComponentClass = function(\n  name: string,\n  callback: ViewConfigGetter,\n): string {\n  return register(name, callback);\n};\n\nmodule.exports = createReactNativeComponentClass;\n"],"mappings":";;AAUA,YAAY;;AAEZ,SAAQA,6BAA6B,QAAO,iEAAiE;AAI7G,IAAOC,QAAQ,GAAID,6BAA6B,CAAzCC,QAAQ;;AAUf,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+B,CACnCC,IAAY,EACZC,QAA0B,EAClB;EACR,OAAOH,QAAQ,CAACE,IAAI,EAAEC,QAAQ,CAAC;AACjC,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGJ,+BAA+B"},"metadata":{},"sourceType":"module"}